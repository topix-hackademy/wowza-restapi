<?php
/**
 * PushPublishStreamAppConfig
 *
 * PHP version 5
 *
 * @category Class
 * @package  WowzaApi
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Topix\Hackademy\WowzaApi\Model;


/**
 * PushPublishStreamAppConfig Class Doc Comment
 *
 * @category    Class
 * @package     WowzaApi
 * @author      http://github.com/swagger-api/swagger-codegen
 * @license     http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class PushPublishStreamAppConfig extends SwaggerModel
 {

    /**
      * The original name of the model.
      * @var string
      */
    protected static $swaggerModelName = 'PushPublishStreamAppConfig';

    /**
      * Array of property to type mappings. Used for (de)serialization
      * @var string[]
      */
    protected static $swaggerTypes = array(
        'shoutcastDestination' => 'string',
        'icecast2Public' => 'bool',
        'akamaiDestinationServer' => 'string',
        'shoutcastIcq' => 'string',
        'facebookEventSourceName' => 'string',
        'timeToLive' => 'int',
        'password' => 'string',
        'facebookDestType' => 'string',
        'rtpWrap' => 'bool',
        'icecast2Name' => 'string',
        'akamaiHostId' => 'string',
        'icecast2Icq' => 'string',
        'host' => 'string',
        'connectionFlashVersion' => 'string',
        'cupertinoRenditions' => 'string',
        'facebookTitle' => 'string',
        'debugPackets' => 'bool',
        'shoutcastPublic' => 'bool',
        'shoutcastAim' => 'string',
        'profile' => 'string',
        'icecast2Description' => 'string',
        'sessionStatus' => 'string',
        'shoutcastMetaname' => 'string',
        'icecast2Genre' => 'string',
        'facebookDestId' => 'string',
        'queryString' => 'string',
        'akamaiEventName' => 'string',
        'version' => 'string',
        'shoutcastName' => 'string',
        'sendStreamCloseCommands' => 'bool',
        'port' => 'int',
        'sendFCPublish' => 'bool',
        'icecast2Aim' => 'string',
        'httpPlaylistCount' => 'int',
        'httpPlaylistTimeout' => 'int',
        'facebookDestName' => 'string',
        'audioPort' => 'string',
        'icecast2Metaname' => 'string',
        'sourceStreamName' => 'string',
        'connectionCode' => 'string',
        'localBindAddress' => 'string',
        'shoutcastProtocol' => 'string',
        'debugLogChildren' => 'bool',
        'serverName' => 'string',
        'adaptiveStreaming' => 'bool',
        'facebookEventSourceType' => 'string',
        'enabled' => 'bool',
        'shoutcastIrc' => 'string',
        'sendReleaseStream' => 'bool',
        'shoutcastUrl' => 'string',
        'icecast2Irc' => 'string',
        'facebookDescription' => 'string',
        'debugLog' => 'bool',
        'shoutcastGenre' => 'string',
        'akamaiStreamId' => 'string',
        'akamaiHdNetwork' => 'bool',
        'adaptiveGroups' => 'string',
        'saveFieldList' => 'string[]',
        'httpPlaylistAcrossSessions' => 'bool',
        'secureTokenSharedSecret' => 'string',
        'httpFakePosts' => 'bool',
        'sendSSL' => 'bool',
        'sendOriginalTimecodes' => 'bool',
        'icecast2Destination' => 'string',
        'facebookAccessToken' => 'string',
        'userName' => 'string',
        'facebookPrivacy' => 'string',
        'streamName' => 'string',
        'removeDefaultAppInstance' => 'bool',
        'videoPort' => 'string',
        'httpWriterDebug' => 'bool',
        'icecast2Url' => 'string',
        'akamaiSendToBackupServer' => 'bool',
        'destinationServer' => 'string',
        'application' => 'string',
        'entryName' => 'string',
        'streamWaitTimeout' => 'int',
        'appInstance' => 'string',
        'originalTimecodeThreshold' => 'string',
        'autoStartTranscoder' => 'bool',
        'sanjoseRepresentationId' => 'string'
);

    /**
     * Array of attributes where the key is the local name, and the value is the original name
     * @var string[]
     */
    protected static $attributeMap = array(
        'shoutcastDestination' => 'shoutcast.destination',
        'icecast2Public' => 'icecast2.public',
        'akamaiDestinationServer' => 'akamai.destinationServer',
        'shoutcastIcq' => 'shoutcast.icq',
        'facebookEventSourceName' => 'facebook.eventSourceName',
        'timeToLive' => 'timeToLive',
        'password' => 'password',
        'facebookDestType' => 'facebook.destType',
        'rtpWrap' => 'rtpWrap',
        'icecast2Name' => 'icecast2.name',
        'akamaiHostId' => 'akamai.hostId',
        'icecast2Icq' => 'icecast2.icq',
        'host' => 'host',
        'connectionFlashVersion' => 'connectionFlashVersion',
        'cupertinoRenditions' => 'cupertino.renditions',
        'facebookTitle' => 'facebook.title',
        'debugPackets' => 'debugPackets',
        'shoutcastPublic' => 'shoutcast.public',
        'shoutcastAim' => 'shoutcast.aim',
        'profile' => 'profile',
        'icecast2Description' => 'icecast2.description',
        'sessionStatus' => 'sessionStatus',
        'shoutcastMetaname' => 'shoutcast.metaname',
        'icecast2Genre' => 'icecast2.genre',
        'facebookDestId' => 'facebook.destId',
        'queryString' => 'queryString',
        'akamaiEventName' => 'akamai.eventName',
        'version' => 'version',
        'shoutcastName' => 'shoutcast.name',
        'sendStreamCloseCommands' => 'sendStreamCloseCommands',
        'port' => 'port',
        'sendFCPublish' => 'sendFCPublish',
        'icecast2Aim' => 'icecast2.aim',
        'httpPlaylistCount' => 'http.playlistCount',
        'httpPlaylistTimeout' => 'http.playlistTimeout',
        'facebookDestName' => 'facebook.destName',
        'audioPort' => 'audioPort',
        'icecast2Metaname' => 'icecast2.metaname',
        'sourceStreamName' => 'sourceStreamName',
        'connectionCode' => 'connectionCode',
        'localBindAddress' => 'localBindAddress',
        'shoutcastProtocol' => 'shoutcast.protocol',
        'debugLogChildren' => 'debugLogChildren',
        'serverName' => 'serverName',
        'adaptiveStreaming' => 'adaptiveStreaming',
        'facebookEventSourceType' => 'facebook.eventSourceType',
        'enabled' => 'enabled',
        'shoutcastIrc' => 'shoutcast.irc',
        'sendReleaseStream' => 'sendReleaseStream',
        'shoutcastUrl' => 'shoutcast.url',
        'icecast2Irc' => 'icecast2.irc',
        'facebookDescription' => 'facebook.description',
        'debugLog' => 'debugLog',
        'shoutcastGenre' => 'shoutcast.genre',
        'akamaiStreamId' => 'akamai.streamId',
        'akamaiHdNetwork' => 'akamai.hdNetwork',
        'adaptiveGroups' => 'adaptiveGroups',
        'saveFieldList' => 'saveFieldList',
        'httpPlaylistAcrossSessions' => 'http.playlistAcrossSessions',
        'secureTokenSharedSecret' => 'secureTokenSharedSecret',
        'httpFakePosts' => 'http.fakePosts',
        'sendSSL' => 'sendSSL',
        'sendOriginalTimecodes' => 'sendOriginalTimecodes',
        'icecast2Destination' => 'icecast2.destination',
        'facebookAccessToken' => 'facebook.accessToken',
        'userName' => 'userName',
        'facebookPrivacy' => 'facebook.privacy',
        'streamName' => 'streamName',
        'removeDefaultAppInstance' => 'removeDefaultAppInstance',
        'videoPort' => 'videoPort',
        'httpWriterDebug' => 'http.writerDebug',
        'icecast2Url' => 'icecast2.url',
        'akamaiSendToBackupServer' => 'akamai.sendToBackupServer',
        'destinationServer' => 'destinationServer',
        'application' => 'application',
        'entryName' => 'entryName',
        'streamWaitTimeout' => 'streamWaitTimeout',
        'appInstance' => 'appInstance',
        'originalTimecodeThreshold' => 'originalTimecodeThreshold',
        'autoStartTranscoder' => 'autoStartTranscoder',
        'sanjoseRepresentationId' => 'sanjose.representationId'
);

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     * @var string[]
     */
    protected static $setters = array(
        'shoutcastDestination' => 'setShoutcastDestination',
        'icecast2Public' => 'setIcecast2Public',
        'akamaiDestinationServer' => 'setAkamaiDestinationServer',
        'shoutcastIcq' => 'setShoutcastIcq',
        'facebookEventSourceName' => 'setFacebookEventSourceName',
        'timeToLive' => 'setTimeToLive',
        'password' => 'setPassword',
        'facebookDestType' => 'setFacebookDestType',
        'rtpWrap' => 'setRtpWrap',
        'icecast2Name' => 'setIcecast2Name',
        'akamaiHostId' => 'setAkamaiHostId',
        'icecast2Icq' => 'setIcecast2Icq',
        'host' => 'setHost',
        'connectionFlashVersion' => 'setConnectionFlashVersion',
        'cupertinoRenditions' => 'setCupertinoRenditions',
        'facebookTitle' => 'setFacebookTitle',
        'debugPackets' => 'setDebugPackets',
        'shoutcastPublic' => 'setShoutcastPublic',
        'shoutcastAim' => 'setShoutcastAim',
        'profile' => 'setProfile',
        'icecast2Description' => 'setIcecast2Description',
        'sessionStatus' => 'setSessionStatus',
        'shoutcastMetaname' => 'setShoutcastMetaname',
        'icecast2Genre' => 'setIcecast2Genre',
        'facebookDestId' => 'setFacebookDestId',
        'queryString' => 'setQueryString',
        'akamaiEventName' => 'setAkamaiEventName',
        'version' => 'setVersion',
        'shoutcastName' => 'setShoutcastName',
        'sendStreamCloseCommands' => 'setSendStreamCloseCommands',
        'port' => 'setPort',
        'sendFCPublish' => 'setSendFCPublish',
        'icecast2Aim' => 'setIcecast2Aim',
        'httpPlaylistCount' => 'setHttpPlaylistCount',
        'httpPlaylistTimeout' => 'setHttpPlaylistTimeout',
        'facebookDestName' => 'setFacebookDestName',
        'audioPort' => 'setAudioPort',
        'icecast2Metaname' => 'setIcecast2Metaname',
        'sourceStreamName' => 'setSourceStreamName',
        'connectionCode' => 'setConnectionCode',
        'localBindAddress' => 'setLocalBindAddress',
        'shoutcastProtocol' => 'setShoutcastProtocol',
        'debugLogChildren' => 'setDebugLogChildren',
        'serverName' => 'setServerName',
        'adaptiveStreaming' => 'setAdaptiveStreaming',
        'facebookEventSourceType' => 'setFacebookEventSourceType',
        'enabled' => 'setEnabled',
        'shoutcastIrc' => 'setShoutcastIrc',
        'sendReleaseStream' => 'setSendReleaseStream',
        'shoutcastUrl' => 'setShoutcastUrl',
        'icecast2Irc' => 'setIcecast2Irc',
        'facebookDescription' => 'setFacebookDescription',
        'debugLog' => 'setDebugLog',
        'shoutcastGenre' => 'setShoutcastGenre',
        'akamaiStreamId' => 'setAkamaiStreamId',
        'akamaiHdNetwork' => 'setAkamaiHdNetwork',
        'adaptiveGroups' => 'setAdaptiveGroups',
        'saveFieldList' => 'setSaveFieldList',
        'httpPlaylistAcrossSessions' => 'setHttpPlaylistAcrossSessions',
        'secureTokenSharedSecret' => 'setSecureTokenSharedSecret',
        'httpFakePosts' => 'setHttpFakePosts',
        'sendSSL' => 'setSendSSL',
        'sendOriginalTimecodes' => 'setSendOriginalTimecodes',
        'icecast2Destination' => 'setIcecast2Destination',
        'facebookAccessToken' => 'setFacebookAccessToken',
        'userName' => 'setUserName',
        'facebookPrivacy' => 'setFacebookPrivacy',
        'streamName' => 'setStreamName',
        'removeDefaultAppInstance' => 'setRemoveDefaultAppInstance',
        'videoPort' => 'setVideoPort',
        'httpWriterDebug' => 'setHttpWriterDebug',
        'icecast2Url' => 'setIcecast2Url',
        'akamaiSendToBackupServer' => 'setAkamaiSendToBackupServer',
        'destinationServer' => 'setDestinationServer',
        'application' => 'setApplication',
        'entryName' => 'setEntryName',
        'streamWaitTimeout' => 'setStreamWaitTimeout',
        'appInstance' => 'setAppInstance',
        'originalTimecodeThreshold' => 'setOriginalTimecodeThreshold',
        'autoStartTranscoder' => 'setAutoStartTranscoder',
        'sanjoseRepresentationId' => 'setSanjoseRepresentationId'
);

    /**
     * Array of attributes to getter functions (for serialization of requests)
     * @var string[]
     */
    protected static $getters = array(
        'shoutcastDestination' => 'getShoutcastDestination',
        'icecast2Public' => 'getIcecast2Public',
        'akamaiDestinationServer' => 'getAkamaiDestinationServer',
        'shoutcastIcq' => 'getShoutcastIcq',
        'facebookEventSourceName' => 'getFacebookEventSourceName',
        'timeToLive' => 'getTimeToLive',
        'password' => 'getPassword',
        'facebookDestType' => 'getFacebookDestType',
        'rtpWrap' => 'getRtpWrap',
        'icecast2Name' => 'getIcecast2Name',
        'akamaiHostId' => 'getAkamaiHostId',
        'icecast2Icq' => 'getIcecast2Icq',
        'host' => 'getHost',
        'connectionFlashVersion' => 'getConnectionFlashVersion',
        'cupertinoRenditions' => 'getCupertinoRenditions',
        'facebookTitle' => 'getFacebookTitle',
        'debugPackets' => 'getDebugPackets',
        'shoutcastPublic' => 'getShoutcastPublic',
        'shoutcastAim' => 'getShoutcastAim',
        'profile' => 'getProfile',
        'icecast2Description' => 'getIcecast2Description',
        'sessionStatus' => 'getSessionStatus',
        'shoutcastMetaname' => 'getShoutcastMetaname',
        'icecast2Genre' => 'getIcecast2Genre',
        'facebookDestId' => 'getFacebookDestId',
        'queryString' => 'getQueryString',
        'akamaiEventName' => 'getAkamaiEventName',
        'version' => 'getVersion',
        'shoutcastName' => 'getShoutcastName',
        'sendStreamCloseCommands' => 'getSendStreamCloseCommands',
        'port' => 'getPort',
        'sendFCPublish' => 'getSendFCPublish',
        'icecast2Aim' => 'getIcecast2Aim',
        'httpPlaylistCount' => 'getHttpPlaylistCount',
        'httpPlaylistTimeout' => 'getHttpPlaylistTimeout',
        'facebookDestName' => 'getFacebookDestName',
        'audioPort' => 'getAudioPort',
        'icecast2Metaname' => 'getIcecast2Metaname',
        'sourceStreamName' => 'getSourceStreamName',
        'connectionCode' => 'getConnectionCode',
        'localBindAddress' => 'getLocalBindAddress',
        'shoutcastProtocol' => 'getShoutcastProtocol',
        'debugLogChildren' => 'getDebugLogChildren',
        'serverName' => 'getServerName',
        'adaptiveStreaming' => 'getAdaptiveStreaming',
        'facebookEventSourceType' => 'getFacebookEventSourceType',
        'enabled' => 'getEnabled',
        'shoutcastIrc' => 'getShoutcastIrc',
        'sendReleaseStream' => 'getSendReleaseStream',
        'shoutcastUrl' => 'getShoutcastUrl',
        'icecast2Irc' => 'getIcecast2Irc',
        'facebookDescription' => 'getFacebookDescription',
        'debugLog' => 'getDebugLog',
        'shoutcastGenre' => 'getShoutcastGenre',
        'akamaiStreamId' => 'getAkamaiStreamId',
        'akamaiHdNetwork' => 'getAkamaiHdNetwork',
        'adaptiveGroups' => 'getAdaptiveGroups',
        'saveFieldList' => 'getSaveFieldList',
        'httpPlaylistAcrossSessions' => 'getHttpPlaylistAcrossSessions',
        'secureTokenSharedSecret' => 'getSecureTokenSharedSecret',
        'httpFakePosts' => 'getHttpFakePosts',
        'sendSSL' => 'getSendSSL',
        'sendOriginalTimecodes' => 'getSendOriginalTimecodes',
        'icecast2Destination' => 'getIcecast2Destination',
        'facebookAccessToken' => 'getFacebookAccessToken',
        'userName' => 'getUserName',
        'facebookPrivacy' => 'getFacebookPrivacy',
        'streamName' => 'getStreamName',
        'removeDefaultAppInstance' => 'getRemoveDefaultAppInstance',
        'videoPort' => 'getVideoPort',
        'httpWriterDebug' => 'getHttpWriterDebug',
        'icecast2Url' => 'getIcecast2Url',
        'akamaiSendToBackupServer' => 'getAkamaiSendToBackupServer',
        'destinationServer' => 'getDestinationServer',
        'application' => 'getApplication',
        'entryName' => 'getEntryName',
        'streamWaitTimeout' => 'getStreamWaitTimeout',
        'appInstance' => 'getAppInstance',
        'originalTimecodeThreshold' => 'getOriginalTimecodeThreshold',
        'autoStartTranscoder' => 'getAutoStartTranscoder',
        'sanjoseRepresentationId' => 'getSanjoseRepresentationId'
);

    

    

    /**
     * Associative array for storing property values
     * @var mixed[]
     */
    protected $container = array();

    /**
     * Constructor
     * @param mixed[] $data Associated array of property value initalizing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['shoutcastDestination'] = isset($data['shoutcastDestination']) ? $data['shoutcastDestination'] : null;
        $this->container['icecast2Public'] = isset($data['icecast2Public']) ? $data['icecast2Public'] : null;
        $this->container['akamaiDestinationServer'] = isset($data['akamaiDestinationServer']) ? $data['akamaiDestinationServer'] : null;
        $this->container['shoutcastIcq'] = isset($data['shoutcastIcq']) ? $data['shoutcastIcq'] : null;
        $this->container['facebookEventSourceName'] = isset($data['facebookEventSourceName']) ? $data['facebookEventSourceName'] : null;
        $this->container['timeToLive'] = isset($data['timeToLive']) ? $data['timeToLive'] : null;
        $this->container['password'] = isset($data['password']) ? $data['password'] : null;
        $this->container['facebookDestType'] = isset($data['facebookDestType']) ? $data['facebookDestType'] : null;
        $this->container['rtpWrap'] = isset($data['rtpWrap']) ? $data['rtpWrap'] : null;
        $this->container['icecast2Name'] = isset($data['icecast2Name']) ? $data['icecast2Name'] : null;
        $this->container['akamaiHostId'] = isset($data['akamaiHostId']) ? $data['akamaiHostId'] : null;
        $this->container['icecast2Icq'] = isset($data['icecast2Icq']) ? $data['icecast2Icq'] : null;
        $this->container['host'] = isset($data['host']) ? $data['host'] : null;
        $this->container['connectionFlashVersion'] = isset($data['connectionFlashVersion']) ? $data['connectionFlashVersion'] : null;
        $this->container['cupertinoRenditions'] = isset($data['cupertinoRenditions']) ? $data['cupertinoRenditions'] : null;
        $this->container['facebookTitle'] = isset($data['facebookTitle']) ? $data['facebookTitle'] : null;
        $this->container['debugPackets'] = isset($data['debugPackets']) ? $data['debugPackets'] : null;
        $this->container['shoutcastPublic'] = isset($data['shoutcastPublic']) ? $data['shoutcastPublic'] : null;
        $this->container['shoutcastAim'] = isset($data['shoutcastAim']) ? $data['shoutcastAim'] : null;
        $this->container['profile'] = isset($data['profile']) ? $data['profile'] : null;
        $this->container['icecast2Description'] = isset($data['icecast2Description']) ? $data['icecast2Description'] : null;
        $this->container['sessionStatus'] = isset($data['sessionStatus']) ? $data['sessionStatus'] : null;
        $this->container['shoutcastMetaname'] = isset($data['shoutcastMetaname']) ? $data['shoutcastMetaname'] : null;
        $this->container['icecast2Genre'] = isset($data['icecast2Genre']) ? $data['icecast2Genre'] : null;
        $this->container['facebookDestId'] = isset($data['facebookDestId']) ? $data['facebookDestId'] : null;
        $this->container['queryString'] = isset($data['queryString']) ? $data['queryString'] : null;
        $this->container['akamaiEventName'] = isset($data['akamaiEventName']) ? $data['akamaiEventName'] : null;
        $this->container['version'] = isset($data['version']) ? $data['version'] : null;
        $this->container['shoutcastName'] = isset($data['shoutcastName']) ? $data['shoutcastName'] : null;
        $this->container['sendStreamCloseCommands'] = isset($data['sendStreamCloseCommands']) ? $data['sendStreamCloseCommands'] : null;
        $this->container['port'] = isset($data['port']) ? $data['port'] : null;
        $this->container['sendFCPublish'] = isset($data['sendFCPublish']) ? $data['sendFCPublish'] : null;
        $this->container['icecast2Aim'] = isset($data['icecast2Aim']) ? $data['icecast2Aim'] : null;
        $this->container['httpPlaylistCount'] = isset($data['httpPlaylistCount']) ? $data['httpPlaylistCount'] : null;
        $this->container['httpPlaylistTimeout'] = isset($data['httpPlaylistTimeout']) ? $data['httpPlaylistTimeout'] : null;
        $this->container['facebookDestName'] = isset($data['facebookDestName']) ? $data['facebookDestName'] : null;
        $this->container['audioPort'] = isset($data['audioPort']) ? $data['audioPort'] : null;
        $this->container['icecast2Metaname'] = isset($data['icecast2Metaname']) ? $data['icecast2Metaname'] : null;
        $this->container['sourceStreamName'] = isset($data['sourceStreamName']) ? $data['sourceStreamName'] : null;
        $this->container['connectionCode'] = isset($data['connectionCode']) ? $data['connectionCode'] : null;
        $this->container['localBindAddress'] = isset($data['localBindAddress']) ? $data['localBindAddress'] : null;
        $this->container['shoutcastProtocol'] = isset($data['shoutcastProtocol']) ? $data['shoutcastProtocol'] : null;
        $this->container['debugLogChildren'] = isset($data['debugLogChildren']) ? $data['debugLogChildren'] : null;
        $this->container['serverName'] = isset($data['serverName']) ? $data['serverName'] : null;
        $this->container['adaptiveStreaming'] = isset($data['adaptiveStreaming']) ? $data['adaptiveStreaming'] : null;
        $this->container['facebookEventSourceType'] = isset($data['facebookEventSourceType']) ? $data['facebookEventSourceType'] : null;
        $this->container['enabled'] = isset($data['enabled']) ? $data['enabled'] : null;
        $this->container['shoutcastIrc'] = isset($data['shoutcastIrc']) ? $data['shoutcastIrc'] : null;
        $this->container['sendReleaseStream'] = isset($data['sendReleaseStream']) ? $data['sendReleaseStream'] : null;
        $this->container['shoutcastUrl'] = isset($data['shoutcastUrl']) ? $data['shoutcastUrl'] : null;
        $this->container['icecast2Irc'] = isset($data['icecast2Irc']) ? $data['icecast2Irc'] : null;
        $this->container['facebookDescription'] = isset($data['facebookDescription']) ? $data['facebookDescription'] : null;
        $this->container['debugLog'] = isset($data['debugLog']) ? $data['debugLog'] : null;
        $this->container['shoutcastGenre'] = isset($data['shoutcastGenre']) ? $data['shoutcastGenre'] : null;
        $this->container['akamaiStreamId'] = isset($data['akamaiStreamId']) ? $data['akamaiStreamId'] : null;
        $this->container['akamaiHdNetwork'] = isset($data['akamaiHdNetwork']) ? $data['akamaiHdNetwork'] : null;
        $this->container['adaptiveGroups'] = isset($data['adaptiveGroups']) ? $data['adaptiveGroups'] : null;
        $this->container['saveFieldList'] = isset($data['saveFieldList']) ? $data['saveFieldList'] : null;
        $this->container['httpPlaylistAcrossSessions'] = isset($data['httpPlaylistAcrossSessions']) ? $data['httpPlaylistAcrossSessions'] : null;
        $this->container['secureTokenSharedSecret'] = isset($data['secureTokenSharedSecret']) ? $data['secureTokenSharedSecret'] : null;
        $this->container['httpFakePosts'] = isset($data['httpFakePosts']) ? $data['httpFakePosts'] : null;
        $this->container['sendSSL'] = isset($data['sendSSL']) ? $data['sendSSL'] : null;
        $this->container['sendOriginalTimecodes'] = isset($data['sendOriginalTimecodes']) ? $data['sendOriginalTimecodes'] : null;
        $this->container['icecast2Destination'] = isset($data['icecast2Destination']) ? $data['icecast2Destination'] : null;
        $this->container['facebookAccessToken'] = isset($data['facebookAccessToken']) ? $data['facebookAccessToken'] : null;
        $this->container['userName'] = isset($data['userName']) ? $data['userName'] : null;
        $this->container['facebookPrivacy'] = isset($data['facebookPrivacy']) ? $data['facebookPrivacy'] : null;
        $this->container['streamName'] = isset($data['streamName']) ? $data['streamName'] : null;
        $this->container['removeDefaultAppInstance'] = isset($data['removeDefaultAppInstance']) ? $data['removeDefaultAppInstance'] : null;
        $this->container['videoPort'] = isset($data['videoPort']) ? $data['videoPort'] : null;
        $this->container['httpWriterDebug'] = isset($data['httpWriterDebug']) ? $data['httpWriterDebug'] : null;
        $this->container['icecast2Url'] = isset($data['icecast2Url']) ? $data['icecast2Url'] : null;
        $this->container['akamaiSendToBackupServer'] = isset($data['akamaiSendToBackupServer']) ? $data['akamaiSendToBackupServer'] : null;
        $this->container['destinationServer'] = isset($data['destinationServer']) ? $data['destinationServer'] : null;
        $this->container['application'] = isset($data['application']) ? $data['application'] : null;
        $this->container['entryName'] = isset($data['entryName']) ? $data['entryName'] : null;
        $this->container['streamWaitTimeout'] = isset($data['streamWaitTimeout']) ? $data['streamWaitTimeout'] : null;
        $this->container['appInstance'] = isset($data['appInstance']) ? $data['appInstance'] : null;
        $this->container['originalTimecodeThreshold'] = isset($data['originalTimecodeThreshold']) ? $data['originalTimecodeThreshold'] : null;
        $this->container['autoStartTranscoder'] = isset($data['autoStartTranscoder']) ? $data['autoStartTranscoder'] : null;
        $this->container['sanjoseRepresentationId'] = isset($data['sanjoseRepresentationId']) ? $data['sanjoseRepresentationId'] : null;
    }

    /**
     * show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalid_properties = array();
        if ($this->container['shoutcastDestination'] === null) {
            $invalid_properties[] = "'shoutcastDestination' can't be null";
        }
        if ($this->container['icecast2Public'] === null) {
            $invalid_properties[] = "'icecast2Public' can't be null";
        }
        if ($this->container['akamaiDestinationServer'] === null) {
            $invalid_properties[] = "'akamaiDestinationServer' can't be null";
        }
        if ($this->container['shoutcastIcq'] === null) {
            $invalid_properties[] = "'shoutcastIcq' can't be null";
        }
        if ($this->container['facebookEventSourceName'] === null) {
            $invalid_properties[] = "'facebookEventSourceName' can't be null";
        }
        if ($this->container['timeToLive'] === null) {
            $invalid_properties[] = "'timeToLive' can't be null";
        }
        if ($this->container['password'] === null) {
            $invalid_properties[] = "'password' can't be null";
        }
        if ($this->container['facebookDestType'] === null) {
            $invalid_properties[] = "'facebookDestType' can't be null";
        }
        if ($this->container['rtpWrap'] === null) {
            $invalid_properties[] = "'rtpWrap' can't be null";
        }
        if ($this->container['icecast2Name'] === null) {
            $invalid_properties[] = "'icecast2Name' can't be null";
        }
        if ($this->container['akamaiHostId'] === null) {
            $invalid_properties[] = "'akamaiHostId' can't be null";
        }
        if ($this->container['icecast2Icq'] === null) {
            $invalid_properties[] = "'icecast2Icq' can't be null";
        }
        if ($this->container['host'] === null) {
            $invalid_properties[] = "'host' can't be null";
        }
        if ($this->container['connectionFlashVersion'] === null) {
            $invalid_properties[] = "'connectionFlashVersion' can't be null";
        }
        if ($this->container['cupertinoRenditions'] === null) {
            $invalid_properties[] = "'cupertinoRenditions' can't be null";
        }
        if ($this->container['facebookTitle'] === null) {
            $invalid_properties[] = "'facebookTitle' can't be null";
        }
        if ($this->container['debugPackets'] === null) {
            $invalid_properties[] = "'debugPackets' can't be null";
        }
        if ($this->container['shoutcastPublic'] === null) {
            $invalid_properties[] = "'shoutcastPublic' can't be null";
        }
        if ($this->container['shoutcastAim'] === null) {
            $invalid_properties[] = "'shoutcastAim' can't be null";
        }
        if ($this->container['profile'] === null) {
            $invalid_properties[] = "'profile' can't be null";
        }
        if ($this->container['icecast2Description'] === null) {
            $invalid_properties[] = "'icecast2Description' can't be null";
        }
        if ($this->container['sessionStatus'] === null) {
            $invalid_properties[] = "'sessionStatus' can't be null";
        }
        if ($this->container['shoutcastMetaname'] === null) {
            $invalid_properties[] = "'shoutcastMetaname' can't be null";
        }
        if ($this->container['icecast2Genre'] === null) {
            $invalid_properties[] = "'icecast2Genre' can't be null";
        }
        if ($this->container['facebookDestId'] === null) {
            $invalid_properties[] = "'facebookDestId' can't be null";
        }
        if ($this->container['queryString'] === null) {
            $invalid_properties[] = "'queryString' can't be null";
        }
        if ($this->container['akamaiEventName'] === null) {
            $invalid_properties[] = "'akamaiEventName' can't be null";
        }
        if ($this->container['version'] === null) {
            $invalid_properties[] = "'version' can't be null";
        }
        if ($this->container['shoutcastName'] === null) {
            $invalid_properties[] = "'shoutcastName' can't be null";
        }
        if ($this->container['sendStreamCloseCommands'] === null) {
            $invalid_properties[] = "'sendStreamCloseCommands' can't be null";
        }
        if ($this->container['port'] === null) {
            $invalid_properties[] = "'port' can't be null";
        }
        if ($this->container['sendFCPublish'] === null) {
            $invalid_properties[] = "'sendFCPublish' can't be null";
        }
        if ($this->container['icecast2Aim'] === null) {
            $invalid_properties[] = "'icecast2Aim' can't be null";
        }
        if ($this->container['httpPlaylistCount'] === null) {
            $invalid_properties[] = "'httpPlaylistCount' can't be null";
        }
        if ($this->container['httpPlaylistTimeout'] === null) {
            $invalid_properties[] = "'httpPlaylistTimeout' can't be null";
        }
        if ($this->container['facebookDestName'] === null) {
            $invalid_properties[] = "'facebookDestName' can't be null";
        }
        if ($this->container['audioPort'] === null) {
            $invalid_properties[] = "'audioPort' can't be null";
        }
        if ($this->container['icecast2Metaname'] === null) {
            $invalid_properties[] = "'icecast2Metaname' can't be null";
        }
        if ($this->container['sourceStreamName'] === null) {
            $invalid_properties[] = "'sourceStreamName' can't be null";
        }
        if ($this->container['connectionCode'] === null) {
            $invalid_properties[] = "'connectionCode' can't be null";
        }
        if ($this->container['localBindAddress'] === null) {
            $invalid_properties[] = "'localBindAddress' can't be null";
        }
        if ($this->container['shoutcastProtocol'] === null) {
            $invalid_properties[] = "'shoutcastProtocol' can't be null";
        }
        if ($this->container['debugLogChildren'] === null) {
            $invalid_properties[] = "'debugLogChildren' can't be null";
        }
        if ($this->container['serverName'] === null) {
            $invalid_properties[] = "'serverName' can't be null";
        }
        if ($this->container['adaptiveStreaming'] === null) {
            $invalid_properties[] = "'adaptiveStreaming' can't be null";
        }
        if ($this->container['facebookEventSourceType'] === null) {
            $invalid_properties[] = "'facebookEventSourceType' can't be null";
        }
        if ($this->container['enabled'] === null) {
            $invalid_properties[] = "'enabled' can't be null";
        }
        if ($this->container['shoutcastIrc'] === null) {
            $invalid_properties[] = "'shoutcastIrc' can't be null";
        }
        if ($this->container['sendReleaseStream'] === null) {
            $invalid_properties[] = "'sendReleaseStream' can't be null";
        }
        if ($this->container['shoutcastUrl'] === null) {
            $invalid_properties[] = "'shoutcastUrl' can't be null";
        }
        if ($this->container['icecast2Irc'] === null) {
            $invalid_properties[] = "'icecast2Irc' can't be null";
        }
        if ($this->container['facebookDescription'] === null) {
            $invalid_properties[] = "'facebookDescription' can't be null";
        }
        if ($this->container['debugLog'] === null) {
            $invalid_properties[] = "'debugLog' can't be null";
        }
        if ($this->container['shoutcastGenre'] === null) {
            $invalid_properties[] = "'shoutcastGenre' can't be null";
        }
        if ($this->container['akamaiStreamId'] === null) {
            $invalid_properties[] = "'akamaiStreamId' can't be null";
        }
        if ($this->container['akamaiHdNetwork'] === null) {
            $invalid_properties[] = "'akamaiHdNetwork' can't be null";
        }
        if ($this->container['adaptiveGroups'] === null) {
            $invalid_properties[] = "'adaptiveGroups' can't be null";
        }
        if ($this->container['httpPlaylistAcrossSessions'] === null) {
            $invalid_properties[] = "'httpPlaylistAcrossSessions' can't be null";
        }
        if ($this->container['secureTokenSharedSecret'] === null) {
            $invalid_properties[] = "'secureTokenSharedSecret' can't be null";
        }
        if ($this->container['httpFakePosts'] === null) {
            $invalid_properties[] = "'httpFakePosts' can't be null";
        }
        if ($this->container['sendSSL'] === null) {
            $invalid_properties[] = "'sendSSL' can't be null";
        }
        if ($this->container['sendOriginalTimecodes'] === null) {
            $invalid_properties[] = "'sendOriginalTimecodes' can't be null";
        }
        if ($this->container['icecast2Destination'] === null) {
            $invalid_properties[] = "'icecast2Destination' can't be null";
        }
        if ($this->container['facebookAccessToken'] === null) {
            $invalid_properties[] = "'facebookAccessToken' can't be null";
        }
        if ($this->container['userName'] === null) {
            $invalid_properties[] = "'userName' can't be null";
        }
        if ($this->container['facebookPrivacy'] === null) {
            $invalid_properties[] = "'facebookPrivacy' can't be null";
        }
        if ($this->container['streamName'] === null) {
            $invalid_properties[] = "'streamName' can't be null";
        }
        if ($this->container['removeDefaultAppInstance'] === null) {
            $invalid_properties[] = "'removeDefaultAppInstance' can't be null";
        }
        if ($this->container['videoPort'] === null) {
            $invalid_properties[] = "'videoPort' can't be null";
        }
        if ($this->container['httpWriterDebug'] === null) {
            $invalid_properties[] = "'httpWriterDebug' can't be null";
        }
        if ($this->container['icecast2Url'] === null) {
            $invalid_properties[] = "'icecast2Url' can't be null";
        }
        if ($this->container['akamaiSendToBackupServer'] === null) {
            $invalid_properties[] = "'akamaiSendToBackupServer' can't be null";
        }
        if ($this->container['destinationServer'] === null) {
            $invalid_properties[] = "'destinationServer' can't be null";
        }
        if ($this->container['application'] === null) {
            $invalid_properties[] = "'application' can't be null";
        }
        if ($this->container['entryName'] === null) {
            $invalid_properties[] = "'entryName' can't be null";
        }
        if ($this->container['streamWaitTimeout'] === null) {
            $invalid_properties[] = "'streamWaitTimeout' can't be null";
        }
        if ($this->container['appInstance'] === null) {
            $invalid_properties[] = "'appInstance' can't be null";
        }
        if ($this->container['originalTimecodeThreshold'] === null) {
            $invalid_properties[] = "'originalTimecodeThreshold' can't be null";
        }
        if ($this->container['autoStartTranscoder'] === null) {
            $invalid_properties[] = "'autoStartTranscoder' can't be null";
        }
        if ($this->container['sanjoseRepresentationId'] === null) {
            $invalid_properties[] = "'sanjoseRepresentationId' can't be null";
        }
        return $invalid_properties;
    }

    /**
     * validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properteis are valid
     */
    public function valid()
    {
        if ($this->container['shoutcastDestination'] === null) {
            return false;
        }
        if ($this->container['icecast2Public'] === null) {
            return false;
        }
        if ($this->container['akamaiDestinationServer'] === null) {
            return false;
        }
        if ($this->container['shoutcastIcq'] === null) {
            return false;
        }
        if ($this->container['facebookEventSourceName'] === null) {
            return false;
        }
        if ($this->container['timeToLive'] === null) {
            return false;
        }
        if ($this->container['password'] === null) {
            return false;
        }
        if ($this->container['facebookDestType'] === null) {
            return false;
        }
        if ($this->container['rtpWrap'] === null) {
            return false;
        }
        if ($this->container['icecast2Name'] === null) {
            return false;
        }
        if ($this->container['akamaiHostId'] === null) {
            return false;
        }
        if ($this->container['icecast2Icq'] === null) {
            return false;
        }
        if ($this->container['host'] === null) {
            return false;
        }
        if ($this->container['connectionFlashVersion'] === null) {
            return false;
        }
        if ($this->container['cupertinoRenditions'] === null) {
            return false;
        }
        if ($this->container['facebookTitle'] === null) {
            return false;
        }
        if ($this->container['debugPackets'] === null) {
            return false;
        }
        if ($this->container['shoutcastPublic'] === null) {
            return false;
        }
        if ($this->container['shoutcastAim'] === null) {
            return false;
        }
        if ($this->container['profile'] === null) {
            return false;
        }
        if ($this->container['icecast2Description'] === null) {
            return false;
        }
        if ($this->container['sessionStatus'] === null) {
            return false;
        }
        if ($this->container['shoutcastMetaname'] === null) {
            return false;
        }
        if ($this->container['icecast2Genre'] === null) {
            return false;
        }
        if ($this->container['facebookDestId'] === null) {
            return false;
        }
        if ($this->container['queryString'] === null) {
            return false;
        }
        if ($this->container['akamaiEventName'] === null) {
            return false;
        }
        if ($this->container['version'] === null) {
            return false;
        }
        if ($this->container['shoutcastName'] === null) {
            return false;
        }
        if ($this->container['sendStreamCloseCommands'] === null) {
            return false;
        }
        if ($this->container['port'] === null) {
            return false;
        }
        if ($this->container['sendFCPublish'] === null) {
            return false;
        }
        if ($this->container['icecast2Aim'] === null) {
            return false;
        }
        if ($this->container['httpPlaylistCount'] === null) {
            return false;
        }
        if ($this->container['httpPlaylistTimeout'] === null) {
            return false;
        }
        if ($this->container['facebookDestName'] === null) {
            return false;
        }
        if ($this->container['audioPort'] === null) {
            return false;
        }
        if ($this->container['icecast2Metaname'] === null) {
            return false;
        }
        if ($this->container['sourceStreamName'] === null) {
            return false;
        }
        if ($this->container['connectionCode'] === null) {
            return false;
        }
        if ($this->container['localBindAddress'] === null) {
            return false;
        }
        if ($this->container['shoutcastProtocol'] === null) {
            return false;
        }
        if ($this->container['debugLogChildren'] === null) {
            return false;
        }
        if ($this->container['serverName'] === null) {
            return false;
        }
        if ($this->container['adaptiveStreaming'] === null) {
            return false;
        }
        if ($this->container['facebookEventSourceType'] === null) {
            return false;
        }
        if ($this->container['enabled'] === null) {
            return false;
        }
        if ($this->container['shoutcastIrc'] === null) {
            return false;
        }
        if ($this->container['sendReleaseStream'] === null) {
            return false;
        }
        if ($this->container['shoutcastUrl'] === null) {
            return false;
        }
        if ($this->container['icecast2Irc'] === null) {
            return false;
        }
        if ($this->container['facebookDescription'] === null) {
            return false;
        }
        if ($this->container['debugLog'] === null) {
            return false;
        }
        if ($this->container['shoutcastGenre'] === null) {
            return false;
        }
        if ($this->container['akamaiStreamId'] === null) {
            return false;
        }
        if ($this->container['akamaiHdNetwork'] === null) {
            return false;
        }
        if ($this->container['adaptiveGroups'] === null) {
            return false;
        }
        if ($this->container['httpPlaylistAcrossSessions'] === null) {
            return false;
        }
        if ($this->container['secureTokenSharedSecret'] === null) {
            return false;
        }
        if ($this->container['httpFakePosts'] === null) {
            return false;
        }
        if ($this->container['sendSSL'] === null) {
            return false;
        }
        if ($this->container['sendOriginalTimecodes'] === null) {
            return false;
        }
        if ($this->container['icecast2Destination'] === null) {
            return false;
        }
        if ($this->container['facebookAccessToken'] === null) {
            return false;
        }
        if ($this->container['userName'] === null) {
            return false;
        }
        if ($this->container['facebookPrivacy'] === null) {
            return false;
        }
        if ($this->container['streamName'] === null) {
            return false;
        }
        if ($this->container['removeDefaultAppInstance'] === null) {
            return false;
        }
        if ($this->container['videoPort'] === null) {
            return false;
        }
        if ($this->container['httpWriterDebug'] === null) {
            return false;
        }
        if ($this->container['icecast2Url'] === null) {
            return false;
        }
        if ($this->container['akamaiSendToBackupServer'] === null) {
            return false;
        }
        if ($this->container['destinationServer'] === null) {
            return false;
        }
        if ($this->container['application'] === null) {
            return false;
        }
        if ($this->container['entryName'] === null) {
            return false;
        }
        if ($this->container['streamWaitTimeout'] === null) {
            return false;
        }
        if ($this->container['appInstance'] === null) {
            return false;
        }
        if ($this->container['originalTimecodeThreshold'] === null) {
            return false;
        }
        if ($this->container['autoStartTranscoder'] === null) {
            return false;
        }
        if ($this->container['sanjoseRepresentationId'] === null) {
            return false;
        }
        return true;
    }


    /**
     * Gets shoutcastDestination
     * @return string
     */
    public function getShoutcastDestination()
    {
        return $this->container['shoutcastDestination'];
    }

    /**
     * Sets shoutcastDestination
     * @param string $shoutcastDestination
     * @return $this
     */
    public function setShoutcastDestination($shoutcastDestination)
    {
        $this->container['shoutcastDestination'] = $shoutcastDestination;

        return $this;
    }

    /**
     * Gets icecast2Public
     * @return bool
     */
    public function getIcecast2Public()
    {
        return $this->container['icecast2Public'];
    }

    /**
     * Sets icecast2Public
     * @param bool $icecast2Public
     * @return $this
     */
    public function setIcecast2Public($icecast2Public)
    {
        $this->container['icecast2Public'] = $icecast2Public;

        return $this;
    }

    /**
     * Gets akamaiDestinationServer
     * @return string
     */
    public function getAkamaiDestinationServer()
    {
        return $this->container['akamaiDestinationServer'];
    }

    /**
     * Sets akamaiDestinationServer
     * @param string $akamaiDestinationServer
     * @return $this
     */
    public function setAkamaiDestinationServer($akamaiDestinationServer)
    {
        $this->container['akamaiDestinationServer'] = $akamaiDestinationServer;

        return $this;
    }

    /**
     * Gets shoutcastIcq
     * @return string
     */
    public function getShoutcastIcq()
    {
        return $this->container['shoutcastIcq'];
    }

    /**
     * Sets shoutcastIcq
     * @param string $shoutcastIcq
     * @return $this
     */
    public function setShoutcastIcq($shoutcastIcq)
    {
        $this->container['shoutcastIcq'] = $shoutcastIcq;

        return $this;
    }

    /**
     * Gets facebookEventSourceName
     * @return string
     */
    public function getFacebookEventSourceName()
    {
        return $this->container['facebookEventSourceName'];
    }

    /**
     * Sets facebookEventSourceName
     * @param string $facebookEventSourceName
     * @return $this
     */
    public function setFacebookEventSourceName($facebookEventSourceName)
    {
        $this->container['facebookEventSourceName'] = $facebookEventSourceName;

        return $this;
    }

    /**
     * Gets timeToLive
     * @return int
     */
    public function getTimeToLive()
    {
        return $this->container['timeToLive'];
    }

    /**
     * Sets timeToLive
     * @param int $timeToLive
     * @return $this
     */
    public function setTimeToLive($timeToLive)
    {
        $this->container['timeToLive'] = $timeToLive;

        return $this;
    }

    /**
     * Gets password
     * @return string
     */
    public function getPassword()
    {
        return $this->container['password'];
    }

    /**
     * Sets password
     * @param string $password
     * @return $this
     */
    public function setPassword($password)
    {
        $this->container['password'] = $password;

        return $this;
    }

    /**
     * Gets facebookDestType
     * @return string
     */
    public function getFacebookDestType()
    {
        return $this->container['facebookDestType'];
    }

    /**
     * Sets facebookDestType
     * @param string $facebookDestType
     * @return $this
     */
    public function setFacebookDestType($facebookDestType)
    {
        $this->container['facebookDestType'] = $facebookDestType;

        return $this;
    }

    /**
     * Gets rtpWrap
     * @return bool
     */
    public function getRtpWrap()
    {
        return $this->container['rtpWrap'];
    }

    /**
     * Sets rtpWrap
     * @param bool $rtpWrap
     * @return $this
     */
    public function setRtpWrap($rtpWrap)
    {
        $this->container['rtpWrap'] = $rtpWrap;

        return $this;
    }

    /**
     * Gets icecast2Name
     * @return string
     */
    public function getIcecast2Name()
    {
        return $this->container['icecast2Name'];
    }

    /**
     * Sets icecast2Name
     * @param string $icecast2Name
     * @return $this
     */
    public function setIcecast2Name($icecast2Name)
    {
        $this->container['icecast2Name'] = $icecast2Name;

        return $this;
    }

    /**
     * Gets akamaiHostId
     * @return string
     */
    public function getAkamaiHostId()
    {
        return $this->container['akamaiHostId'];
    }

    /**
     * Sets akamaiHostId
     * @param string $akamaiHostId
     * @return $this
     */
    public function setAkamaiHostId($akamaiHostId)
    {
        $this->container['akamaiHostId'] = $akamaiHostId;

        return $this;
    }

    /**
     * Gets icecast2Icq
     * @return string
     */
    public function getIcecast2Icq()
    {
        return $this->container['icecast2Icq'];
    }

    /**
     * Sets icecast2Icq
     * @param string $icecast2Icq
     * @return $this
     */
    public function setIcecast2Icq($icecast2Icq)
    {
        $this->container['icecast2Icq'] = $icecast2Icq;

        return $this;
    }

    /**
     * Gets host
     * @return string
     */
    public function getHost()
    {
        return $this->container['host'];
    }

    /**
     * Sets host
     * @param string $host
     * @return $this
     */
    public function setHost($host)
    {
        $this->container['host'] = $host;

        return $this;
    }

    /**
     * Gets connectionFlashVersion
     * @return string
     */
    public function getConnectionFlashVersion()
    {
        return $this->container['connectionFlashVersion'];
    }

    /**
     * Sets connectionFlashVersion
     * @param string $connectionFlashVersion
     * @return $this
     */
    public function setConnectionFlashVersion($connectionFlashVersion)
    {
        $this->container['connectionFlashVersion'] = $connectionFlashVersion;

        return $this;
    }

    /**
     * Gets cupertinoRenditions
     * @return string
     */
    public function getCupertinoRenditions()
    {
        return $this->container['cupertinoRenditions'];
    }

    /**
     * Sets cupertinoRenditions
     * @param string $cupertinoRenditions
     * @return $this
     */
    public function setCupertinoRenditions($cupertinoRenditions)
    {
        $this->container['cupertinoRenditions'] = $cupertinoRenditions;

        return $this;
    }

    /**
     * Gets facebookTitle
     * @return string
     */
    public function getFacebookTitle()
    {
        return $this->container['facebookTitle'];
    }

    /**
     * Sets facebookTitle
     * @param string $facebookTitle
     * @return $this
     */
    public function setFacebookTitle($facebookTitle)
    {
        $this->container['facebookTitle'] = $facebookTitle;

        return $this;
    }

    /**
     * Gets debugPackets
     * @return bool
     */
    public function getDebugPackets()
    {
        return $this->container['debugPackets'];
    }

    /**
     * Sets debugPackets
     * @param bool $debugPackets
     * @return $this
     */
    public function setDebugPackets($debugPackets)
    {
        $this->container['debugPackets'] = $debugPackets;

        return $this;
    }

    /**
     * Gets shoutcastPublic
     * @return bool
     */
    public function getShoutcastPublic()
    {
        return $this->container['shoutcastPublic'];
    }

    /**
     * Sets shoutcastPublic
     * @param bool $shoutcastPublic
     * @return $this
     */
    public function setShoutcastPublic($shoutcastPublic)
    {
        $this->container['shoutcastPublic'] = $shoutcastPublic;

        return $this;
    }

    /**
     * Gets shoutcastAim
     * @return string
     */
    public function getShoutcastAim()
    {
        return $this->container['shoutcastAim'];
    }

    /**
     * Sets shoutcastAim
     * @param string $shoutcastAim
     * @return $this
     */
    public function setShoutcastAim($shoutcastAim)
    {
        $this->container['shoutcastAim'] = $shoutcastAim;

        return $this;
    }

    /**
     * Gets profile
     * @return string
     */
    public function getProfile()
    {
        return $this->container['profile'];
    }

    /**
     * Sets profile
     * @param string $profile
     * @return $this
     */
    public function setProfile($profile)
    {
        $this->container['profile'] = $profile;

        return $this;
    }

    /**
     * Gets icecast2Description
     * @return string
     */
    public function getIcecast2Description()
    {
        return $this->container['icecast2Description'];
    }

    /**
     * Sets icecast2Description
     * @param string $icecast2Description
     * @return $this
     */
    public function setIcecast2Description($icecast2Description)
    {
        $this->container['icecast2Description'] = $icecast2Description;

        return $this;
    }

    /**
     * Gets sessionStatus
     * @return string
     */
    public function getSessionStatus()
    {
        return $this->container['sessionStatus'];
    }

    /**
     * Sets sessionStatus
     * @param string $sessionStatus
     * @return $this
     */
    public function setSessionStatus($sessionStatus)
    {
        $this->container['sessionStatus'] = $sessionStatus;

        return $this;
    }

    /**
     * Gets shoutcastMetaname
     * @return string
     */
    public function getShoutcastMetaname()
    {
        return $this->container['shoutcastMetaname'];
    }

    /**
     * Sets shoutcastMetaname
     * @param string $shoutcastMetaname
     * @return $this
     */
    public function setShoutcastMetaname($shoutcastMetaname)
    {
        $this->container['shoutcastMetaname'] = $shoutcastMetaname;

        return $this;
    }

    /**
     * Gets icecast2Genre
     * @return string
     */
    public function getIcecast2Genre()
    {
        return $this->container['icecast2Genre'];
    }

    /**
     * Sets icecast2Genre
     * @param string $icecast2Genre
     * @return $this
     */
    public function setIcecast2Genre($icecast2Genre)
    {
        $this->container['icecast2Genre'] = $icecast2Genre;

        return $this;
    }

    /**
     * Gets facebookDestId
     * @return string
     */
    public function getFacebookDestId()
    {
        return $this->container['facebookDestId'];
    }

    /**
     * Sets facebookDestId
     * @param string $facebookDestId
     * @return $this
     */
    public function setFacebookDestId($facebookDestId)
    {
        $this->container['facebookDestId'] = $facebookDestId;

        return $this;
    }

    /**
     * Gets queryString
     * @return string
     */
    public function getQueryString()
    {
        return $this->container['queryString'];
    }

    /**
     * Sets queryString
     * @param string $queryString
     * @return $this
     */
    public function setQueryString($queryString)
    {
        $this->container['queryString'] = $queryString;

        return $this;
    }

    /**
     * Gets akamaiEventName
     * @return string
     */
    public function getAkamaiEventName()
    {
        return $this->container['akamaiEventName'];
    }

    /**
     * Sets akamaiEventName
     * @param string $akamaiEventName
     * @return $this
     */
    public function setAkamaiEventName($akamaiEventName)
    {
        $this->container['akamaiEventName'] = $akamaiEventName;

        return $this;
    }

    /**
     * Gets version
     * @return string
     */
    public function getVersion()
    {
        return $this->container['version'];
    }

    /**
     * Sets version
     * @param string $version
     * @return $this
     */
    public function setVersion($version)
    {
        $this->container['version'] = $version;

        return $this;
    }

    /**
     * Gets shoutcastName
     * @return string
     */
    public function getShoutcastName()
    {
        return $this->container['shoutcastName'];
    }

    /**
     * Sets shoutcastName
     * @param string $shoutcastName
     * @return $this
     */
    public function setShoutcastName($shoutcastName)
    {
        $this->container['shoutcastName'] = $shoutcastName;

        return $this;
    }

    /**
     * Gets sendStreamCloseCommands
     * @return bool
     */
    public function getSendStreamCloseCommands()
    {
        return $this->container['sendStreamCloseCommands'];
    }

    /**
     * Sets sendStreamCloseCommands
     * @param bool $sendStreamCloseCommands
     * @return $this
     */
    public function setSendStreamCloseCommands($sendStreamCloseCommands)
    {
        $this->container['sendStreamCloseCommands'] = $sendStreamCloseCommands;

        return $this;
    }

    /**
     * Gets port
     * @return int
     */
    public function getPort()
    {
        return $this->container['port'];
    }

    /**
     * Sets port
     * @param int $port
     * @return $this
     */
    public function setPort($port)
    {
        $this->container['port'] = $port;

        return $this;
    }

    /**
     * Gets sendFCPublish
     * @return bool
     */
    public function getSendFCPublish()
    {
        return $this->container['sendFCPublish'];
    }

    /**
     * Sets sendFCPublish
     * @param bool $sendFCPublish
     * @return $this
     */
    public function setSendFCPublish($sendFCPublish)
    {
        $this->container['sendFCPublish'] = $sendFCPublish;

        return $this;
    }

    /**
     * Gets icecast2Aim
     * @return string
     */
    public function getIcecast2Aim()
    {
        return $this->container['icecast2Aim'];
    }

    /**
     * Sets icecast2Aim
     * @param string $icecast2Aim
     * @return $this
     */
    public function setIcecast2Aim($icecast2Aim)
    {
        $this->container['icecast2Aim'] = $icecast2Aim;

        return $this;
    }

    /**
     * Gets httpPlaylistCount
     * @return int
     */
    public function getHttpPlaylistCount()
    {
        return $this->container['httpPlaylistCount'];
    }

    /**
     * Sets httpPlaylistCount
     * @param int $httpPlaylistCount
     * @return $this
     */
    public function setHttpPlaylistCount($httpPlaylistCount)
    {
        $this->container['httpPlaylistCount'] = $httpPlaylistCount;

        return $this;
    }

    /**
     * Gets httpPlaylistTimeout
     * @return int
     */
    public function getHttpPlaylistTimeout()
    {
        return $this->container['httpPlaylistTimeout'];
    }

    /**
     * Sets httpPlaylistTimeout
     * @param int $httpPlaylistTimeout
     * @return $this
     */
    public function setHttpPlaylistTimeout($httpPlaylistTimeout)
    {
        $this->container['httpPlaylistTimeout'] = $httpPlaylistTimeout;

        return $this;
    }

    /**
     * Gets facebookDestName
     * @return string
     */
    public function getFacebookDestName()
    {
        return $this->container['facebookDestName'];
    }

    /**
     * Sets facebookDestName
     * @param string $facebookDestName
     * @return $this
     */
    public function setFacebookDestName($facebookDestName)
    {
        $this->container['facebookDestName'] = $facebookDestName;

        return $this;
    }

    /**
     * Gets audioPort
     * @return string
     */
    public function getAudioPort()
    {
        return $this->container['audioPort'];
    }

    /**
     * Sets audioPort
     * @param string $audioPort
     * @return $this
     */
    public function setAudioPort($audioPort)
    {
        $this->container['audioPort'] = $audioPort;

        return $this;
    }

    /**
     * Gets icecast2Metaname
     * @return string
     */
    public function getIcecast2Metaname()
    {
        return $this->container['icecast2Metaname'];
    }

    /**
     * Sets icecast2Metaname
     * @param string $icecast2Metaname
     * @return $this
     */
    public function setIcecast2Metaname($icecast2Metaname)
    {
        $this->container['icecast2Metaname'] = $icecast2Metaname;

        return $this;
    }

    /**
     * Gets sourceStreamName
     * @return string
     */
    public function getSourceStreamName()
    {
        return $this->container['sourceStreamName'];
    }

    /**
     * Sets sourceStreamName
     * @param string $sourceStreamName
     * @return $this
     */
    public function setSourceStreamName($sourceStreamName)
    {
        $this->container['sourceStreamName'] = $sourceStreamName;

        return $this;
    }

    /**
     * Gets connectionCode
     * @return string
     */
    public function getConnectionCode()
    {
        return $this->container['connectionCode'];
    }

    /**
     * Sets connectionCode
     * @param string $connectionCode
     * @return $this
     */
    public function setConnectionCode($connectionCode)
    {
        $this->container['connectionCode'] = $connectionCode;

        return $this;
    }

    /**
     * Gets localBindAddress
     * @return string
     */
    public function getLocalBindAddress()
    {
        return $this->container['localBindAddress'];
    }

    /**
     * Sets localBindAddress
     * @param string $localBindAddress
     * @return $this
     */
    public function setLocalBindAddress($localBindAddress)
    {
        $this->container['localBindAddress'] = $localBindAddress;

        return $this;
    }

    /**
     * Gets shoutcastProtocol
     * @return string
     */
    public function getShoutcastProtocol()
    {
        return $this->container['shoutcastProtocol'];
    }

    /**
     * Sets shoutcastProtocol
     * @param string $shoutcastProtocol
     * @return $this
     */
    public function setShoutcastProtocol($shoutcastProtocol)
    {
        $this->container['shoutcastProtocol'] = $shoutcastProtocol;

        return $this;
    }

    /**
     * Gets debugLogChildren
     * @return bool
     */
    public function getDebugLogChildren()
    {
        return $this->container['debugLogChildren'];
    }

    /**
     * Sets debugLogChildren
     * @param bool $debugLogChildren
     * @return $this
     */
    public function setDebugLogChildren($debugLogChildren)
    {
        $this->container['debugLogChildren'] = $debugLogChildren;

        return $this;
    }

    /**
     * Gets serverName
     * @return string
     */
    public function getServerName()
    {
        return $this->container['serverName'];
    }

    /**
     * Sets serverName
     * @param string $serverName
     * @return $this
     */
    public function setServerName($serverName)
    {
        $this->container['serverName'] = $serverName;

        return $this;
    }

    /**
     * Gets adaptiveStreaming
     * @return bool
     */
    public function getAdaptiveStreaming()
    {
        return $this->container['adaptiveStreaming'];
    }

    /**
     * Sets adaptiveStreaming
     * @param bool $adaptiveStreaming
     * @return $this
     */
    public function setAdaptiveStreaming($adaptiveStreaming)
    {
        $this->container['adaptiveStreaming'] = $adaptiveStreaming;

        return $this;
    }

    /**
     * Gets facebookEventSourceType
     * @return string
     */
    public function getFacebookEventSourceType()
    {
        return $this->container['facebookEventSourceType'];
    }

    /**
     * Sets facebookEventSourceType
     * @param string $facebookEventSourceType
     * @return $this
     */
    public function setFacebookEventSourceType($facebookEventSourceType)
    {
        $this->container['facebookEventSourceType'] = $facebookEventSourceType;

        return $this;
    }

    /**
     * Gets enabled
     * @return bool
     */
    public function getEnabled()
    {
        return $this->container['enabled'];
    }

    /**
     * Sets enabled
     * @param bool $enabled
     * @return $this
     */
    public function setEnabled($enabled)
    {
        $this->container['enabled'] = $enabled;

        return $this;
    }

    /**
     * Gets shoutcastIrc
     * @return string
     */
    public function getShoutcastIrc()
    {
        return $this->container['shoutcastIrc'];
    }

    /**
     * Sets shoutcastIrc
     * @param string $shoutcastIrc
     * @return $this
     */
    public function setShoutcastIrc($shoutcastIrc)
    {
        $this->container['shoutcastIrc'] = $shoutcastIrc;

        return $this;
    }

    /**
     * Gets sendReleaseStream
     * @return bool
     */
    public function getSendReleaseStream()
    {
        return $this->container['sendReleaseStream'];
    }

    /**
     * Sets sendReleaseStream
     * @param bool $sendReleaseStream
     * @return $this
     */
    public function setSendReleaseStream($sendReleaseStream)
    {
        $this->container['sendReleaseStream'] = $sendReleaseStream;

        return $this;
    }

    /**
     * Gets shoutcastUrl
     * @return string
     */
    public function getShoutcastUrl()
    {
        return $this->container['shoutcastUrl'];
    }

    /**
     * Sets shoutcastUrl
     * @param string $shoutcastUrl
     * @return $this
     */
    public function setShoutcastUrl($shoutcastUrl)
    {
        $this->container['shoutcastUrl'] = $shoutcastUrl;

        return $this;
    }

    /**
     * Gets icecast2Irc
     * @return string
     */
    public function getIcecast2Irc()
    {
        return $this->container['icecast2Irc'];
    }

    /**
     * Sets icecast2Irc
     * @param string $icecast2Irc
     * @return $this
     */
    public function setIcecast2Irc($icecast2Irc)
    {
        $this->container['icecast2Irc'] = $icecast2Irc;

        return $this;
    }

    /**
     * Gets facebookDescription
     * @return string
     */
    public function getFacebookDescription()
    {
        return $this->container['facebookDescription'];
    }

    /**
     * Sets facebookDescription
     * @param string $facebookDescription
     * @return $this
     */
    public function setFacebookDescription($facebookDescription)
    {
        $this->container['facebookDescription'] = $facebookDescription;

        return $this;
    }

    /**
     * Gets debugLog
     * @return bool
     */
    public function getDebugLog()
    {
        return $this->container['debugLog'];
    }

    /**
     * Sets debugLog
     * @param bool $debugLog
     * @return $this
     */
    public function setDebugLog($debugLog)
    {
        $this->container['debugLog'] = $debugLog;

        return $this;
    }

    /**
     * Gets shoutcastGenre
     * @return string
     */
    public function getShoutcastGenre()
    {
        return $this->container['shoutcastGenre'];
    }

    /**
     * Sets shoutcastGenre
     * @param string $shoutcastGenre
     * @return $this
     */
    public function setShoutcastGenre($shoutcastGenre)
    {
        $this->container['shoutcastGenre'] = $shoutcastGenre;

        return $this;
    }

    /**
     * Gets akamaiStreamId
     * @return string
     */
    public function getAkamaiStreamId()
    {
        return $this->container['akamaiStreamId'];
    }

    /**
     * Sets akamaiStreamId
     * @param string $akamaiStreamId
     * @return $this
     */
    public function setAkamaiStreamId($akamaiStreamId)
    {
        $this->container['akamaiStreamId'] = $akamaiStreamId;

        return $this;
    }

    /**
     * Gets akamaiHdNetwork
     * @return bool
     */
    public function getAkamaiHdNetwork()
    {
        return $this->container['akamaiHdNetwork'];
    }

    /**
     * Sets akamaiHdNetwork
     * @param bool $akamaiHdNetwork
     * @return $this
     */
    public function setAkamaiHdNetwork($akamaiHdNetwork)
    {
        $this->container['akamaiHdNetwork'] = $akamaiHdNetwork;

        return $this;
    }

    /**
     * Gets adaptiveGroups
     * @return string
     */
    public function getAdaptiveGroups()
    {
        return $this->container['adaptiveGroups'];
    }

    /**
     * Sets adaptiveGroups
     * @param string $adaptiveGroups
     * @return $this
     */
    public function setAdaptiveGroups($adaptiveGroups)
    {
        $this->container['adaptiveGroups'] = $adaptiveGroups;

        return $this;
    }

    /**
     * Gets saveFieldList
     * @return string[]
     */
    public function getSaveFieldList()
    {
        return $this->container['saveFieldList'];
    }

    /**
     * Sets saveFieldList
     * @param string[] $saveFieldList
     * @return $this
     */
    public function setSaveFieldList($saveFieldList)
    {
        $this->container['saveFieldList'] = $saveFieldList;

        return $this;
    }

    /**
     * Gets httpPlaylistAcrossSessions
     * @return bool
     */
    public function getHttpPlaylistAcrossSessions()
    {
        return $this->container['httpPlaylistAcrossSessions'];
    }

    /**
     * Sets httpPlaylistAcrossSessions
     * @param bool $httpPlaylistAcrossSessions
     * @return $this
     */
    public function setHttpPlaylistAcrossSessions($httpPlaylistAcrossSessions)
    {
        $this->container['httpPlaylistAcrossSessions'] = $httpPlaylistAcrossSessions;

        return $this;
    }

    /**
     * Gets secureTokenSharedSecret
     * @return string
     */
    public function getSecureTokenSharedSecret()
    {
        return $this->container['secureTokenSharedSecret'];
    }

    /**
     * Sets secureTokenSharedSecret
     * @param string $secureTokenSharedSecret
     * @return $this
     */
    public function setSecureTokenSharedSecret($secureTokenSharedSecret)
    {
        $this->container['secureTokenSharedSecret'] = $secureTokenSharedSecret;

        return $this;
    }

    /**
     * Gets httpFakePosts
     * @return bool
     */
    public function getHttpFakePosts()
    {
        return $this->container['httpFakePosts'];
    }

    /**
     * Sets httpFakePosts
     * @param bool $httpFakePosts
     * @return $this
     */
    public function setHttpFakePosts($httpFakePosts)
    {
        $this->container['httpFakePosts'] = $httpFakePosts;

        return $this;
    }

    /**
     * Gets sendSSL
     * @return bool
     */
    public function getSendSSL()
    {
        return $this->container['sendSSL'];
    }

    /**
     * Sets sendSSL
     * @param bool $sendSSL
     * @return $this
     */
    public function setSendSSL($sendSSL)
    {
        $this->container['sendSSL'] = $sendSSL;

        return $this;
    }

    /**
     * Gets sendOriginalTimecodes
     * @return bool
     */
    public function getSendOriginalTimecodes()
    {
        return $this->container['sendOriginalTimecodes'];
    }

    /**
     * Sets sendOriginalTimecodes
     * @param bool $sendOriginalTimecodes
     * @return $this
     */
    public function setSendOriginalTimecodes($sendOriginalTimecodes)
    {
        $this->container['sendOriginalTimecodes'] = $sendOriginalTimecodes;

        return $this;
    }

    /**
     * Gets icecast2Destination
     * @return string
     */
    public function getIcecast2Destination()
    {
        return $this->container['icecast2Destination'];
    }

    /**
     * Sets icecast2Destination
     * @param string $icecast2Destination
     * @return $this
     */
    public function setIcecast2Destination($icecast2Destination)
    {
        $this->container['icecast2Destination'] = $icecast2Destination;

        return $this;
    }

    /**
     * Gets facebookAccessToken
     * @return string
     */
    public function getFacebookAccessToken()
    {
        return $this->container['facebookAccessToken'];
    }

    /**
     * Sets facebookAccessToken
     * @param string $facebookAccessToken
     * @return $this
     */
    public function setFacebookAccessToken($facebookAccessToken)
    {
        $this->container['facebookAccessToken'] = $facebookAccessToken;

        return $this;
    }

    /**
     * Gets userName
     * @return string
     */
    public function getUserName()
    {
        return $this->container['userName'];
    }

    /**
     * Sets userName
     * @param string $userName
     * @return $this
     */
    public function setUserName($userName)
    {
        $this->container['userName'] = $userName;

        return $this;
    }

    /**
     * Gets facebookPrivacy
     * @return string
     */
    public function getFacebookPrivacy()
    {
        return $this->container['facebookPrivacy'];
    }

    /**
     * Sets facebookPrivacy
     * @param string $facebookPrivacy
     * @return $this
     */
    public function setFacebookPrivacy($facebookPrivacy)
    {
        $this->container['facebookPrivacy'] = $facebookPrivacy;

        return $this;
    }

    /**
     * Gets streamName
     * @return string
     */
    public function getStreamName()
    {
        return $this->container['streamName'];
    }

    /**
     * Sets streamName
     * @param string $streamName
     * @return $this
     */
    public function setStreamName($streamName)
    {
        $this->container['streamName'] = $streamName;

        return $this;
    }

    /**
     * Gets removeDefaultAppInstance
     * @return bool
     */
    public function getRemoveDefaultAppInstance()
    {
        return $this->container['removeDefaultAppInstance'];
    }

    /**
     * Sets removeDefaultAppInstance
     * @param bool $removeDefaultAppInstance
     * @return $this
     */
    public function setRemoveDefaultAppInstance($removeDefaultAppInstance)
    {
        $this->container['removeDefaultAppInstance'] = $removeDefaultAppInstance;

        return $this;
    }

    /**
     * Gets videoPort
     * @return string
     */
    public function getVideoPort()
    {
        return $this->container['videoPort'];
    }

    /**
     * Sets videoPort
     * @param string $videoPort
     * @return $this
     */
    public function setVideoPort($videoPort)
    {
        $this->container['videoPort'] = $videoPort;

        return $this;
    }

    /**
     * Gets httpWriterDebug
     * @return bool
     */
    public function getHttpWriterDebug()
    {
        return $this->container['httpWriterDebug'];
    }

    /**
     * Sets httpWriterDebug
     * @param bool $httpWriterDebug
     * @return $this
     */
    public function setHttpWriterDebug($httpWriterDebug)
    {
        $this->container['httpWriterDebug'] = $httpWriterDebug;

        return $this;
    }

    /**
     * Gets icecast2Url
     * @return string
     */
    public function getIcecast2Url()
    {
        return $this->container['icecast2Url'];
    }

    /**
     * Sets icecast2Url
     * @param string $icecast2Url
     * @return $this
     */
    public function setIcecast2Url($icecast2Url)
    {
        $this->container['icecast2Url'] = $icecast2Url;

        return $this;
    }

    /**
     * Gets akamaiSendToBackupServer
     * @return bool
     */
    public function getAkamaiSendToBackupServer()
    {
        return $this->container['akamaiSendToBackupServer'];
    }

    /**
     * Sets akamaiSendToBackupServer
     * @param bool $akamaiSendToBackupServer
     * @return $this
     */
    public function setAkamaiSendToBackupServer($akamaiSendToBackupServer)
    {
        $this->container['akamaiSendToBackupServer'] = $akamaiSendToBackupServer;

        return $this;
    }

    /**
     * Gets destinationServer
     * @return string
     */
    public function getDestinationServer()
    {
        return $this->container['destinationServer'];
    }

    /**
     * Sets destinationServer
     * @param string $destinationServer
     * @return $this
     */
    public function setDestinationServer($destinationServer)
    {
        $this->container['destinationServer'] = $destinationServer;

        return $this;
    }

    /**
     * Gets application
     * @return string
     */
    public function getApplication()
    {
        return $this->container['application'];
    }

    /**
     * Sets application
     * @param string $application
     * @return $this
     */
    public function setApplication($application)
    {
        $this->container['application'] = $application;

        return $this;
    }

    /**
     * Gets entryName
     * @return string
     */
    public function getEntryName()
    {
        return $this->container['entryName'];
    }

    /**
     * Sets entryName
     * @param string $entryName
     * @return $this
     */
    public function setEntryName($entryName)
    {
        $this->container['entryName'] = $entryName;

        return $this;
    }

    /**
     * Gets streamWaitTimeout
     * @return int
     */
    public function getStreamWaitTimeout()
    {
        return $this->container['streamWaitTimeout'];
    }

    /**
     * Sets streamWaitTimeout
     * @param int $streamWaitTimeout
     * @return $this
     */
    public function setStreamWaitTimeout($streamWaitTimeout)
    {
        $this->container['streamWaitTimeout'] = $streamWaitTimeout;

        return $this;
    }

    /**
     * Gets appInstance
     * @return string
     */
    public function getAppInstance()
    {
        return $this->container['appInstance'];
    }

    /**
     * Sets appInstance
     * @param string $appInstance
     * @return $this
     */
    public function setAppInstance($appInstance)
    {
        $this->container['appInstance'] = $appInstance;

        return $this;
    }

    /**
     * Gets originalTimecodeThreshold
     * @return string
     */
    public function getOriginalTimecodeThreshold()
    {
        return $this->container['originalTimecodeThreshold'];
    }

    /**
     * Sets originalTimecodeThreshold
     * @param string $originalTimecodeThreshold
     * @return $this
     */
    public function setOriginalTimecodeThreshold($originalTimecodeThreshold)
    {
        $this->container['originalTimecodeThreshold'] = $originalTimecodeThreshold;

        return $this;
    }

    /**
     * Gets autoStartTranscoder
     * @return bool
     */
    public function getAutoStartTranscoder()
    {
        return $this->container['autoStartTranscoder'];
    }

    /**
     * Sets autoStartTranscoder
     * @param bool $autoStartTranscoder
     * @return $this
     */
    public function setAutoStartTranscoder($autoStartTranscoder)
    {
        $this->container['autoStartTranscoder'] = $autoStartTranscoder;

        return $this;
    }

    /**
     * Gets sanjoseRepresentationId
     * @return string
     */
    public function getSanjoseRepresentationId()
    {
        return $this->container['sanjoseRepresentationId'];
    }

    /**
     * Sets sanjoseRepresentationId
     * @param string $sanjoseRepresentationId
     * @return $this
     */
    public function setSanjoseRepresentationId($sanjoseRepresentationId)
    {
        $this->container['sanjoseRepresentationId'] = $sanjoseRepresentationId;

        return $this;
}

}
