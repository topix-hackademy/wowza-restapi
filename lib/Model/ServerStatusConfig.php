<?php
/**
 * ServerStatusConfig
 *
 * PHP version 5
 *
 * @category Class
 * @package  WowzaApi
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Topix\Hackademy\WowzaApi\Model;


/**
 * ServerStatusConfig Class Doc Comment
 *
 * @category    Class
 * @package     WowzaApi
 * @author      http://github.com/swagger-api/swagger-codegen
 * @license     http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class ServerStatusConfig extends SwaggerModel
 {

    /**
      * The original name of the model.
      * @var string
      */
    protected static $swaggerModelName = 'ServerStatusConfig';

    /**
      * Array of property to type mappings. Used for (de)serialization
      * @var string[]
      */
    protected static $swaggerTypes = array(
        'transcoderWatermark' => 'bool',
        'serverVersion' => 'string',
        'gpuAcceleration' => 'string',
        'wseName' => 'string',
        'transcoderLicensed' => 'bool',
        'javaMaxHeapSize' => 'string',
        'transcoderLicensesInUse' => 'int',
        'javaVersion' => 'string',
        'httpOriginAvailable' => 'bool',
        'serverName' => 'string',
        'osArchitecture' => 'string',
        'drmApplications' => 'string[]',
        'javaVMVersion' => 'string',
        'transcoderLicenses' => 'int',
        'timeRunning' => 'double',
        'licenseType' => 'string',
        'osBitness' => 'string',
        'dvrApplications' => 'string[]',
        'osVersion' => 'string',
        'serverBuild' => 'string',
        'saveFieldList' => 'string[]',
        'javaName' => 'string',
        'maxConnections' => 'int',
        'dvrLicensed' => 'bool',
        'serverMode' => 'string',
        'javaBitness' => 'string',
        'currentConnections' => 'int',
        'drmLicensed' => 'bool',
        'javaVendor' => 'string',
        'osName' => 'string',
        'version' => 'string',
        'transcoderApplications' => 'string[]',
        'transcoderAvailable' => 'bool',
        'javaHome' => 'string',
        'maxIncommingStreams' => 'int',
        'totalMemory' => 'int',
        'availableMemory' => 'int',
        'nativeBase' => 'string',
        'dvrInUse' => 'bool',
        'drmInUse' => 'bool',
        'licenseExpireDate' => 'string',
        'processorCores' => 'int',
        'restAPIAvailable' => 'bool'
);

    /**
     * Array of attributes where the key is the local name, and the value is the original name
     * @var string[]
     */
    protected static $attributeMap = array(
        'transcoderWatermark' => 'transcoderWatermark',
        'serverVersion' => 'serverVersion',
        'gpuAcceleration' => 'gpuAcceleration',
        'wseName' => 'wseName',
        'transcoderLicensed' => 'transcoderLicensed',
        'javaMaxHeapSize' => 'javaMaxHeapSize',
        'transcoderLicensesInUse' => 'transcoderLicensesInUse',
        'javaVersion' => 'javaVersion',
        'httpOriginAvailable' => 'httpOriginAvailable',
        'serverName' => 'serverName',
        'osArchitecture' => 'osArchitecture',
        'drmApplications' => 'drmApplications',
        'javaVMVersion' => 'javaVMVersion',
        'transcoderLicenses' => 'transcoderLicenses',
        'timeRunning' => 'timeRunning',
        'licenseType' => 'licenseType',
        'osBitness' => 'osBitness',
        'dvrApplications' => 'dvrApplications',
        'osVersion' => 'osVersion',
        'serverBuild' => 'serverBuild',
        'saveFieldList' => 'saveFieldList',
        'javaName' => 'javaName',
        'maxConnections' => 'maxConnections',
        'dvrLicensed' => 'dvrLicensed',
        'serverMode' => 'serverMode',
        'javaBitness' => 'javaBitness',
        'currentConnections' => 'currentConnections',
        'drmLicensed' => 'drmLicensed',
        'javaVendor' => 'javaVendor',
        'osName' => 'osName',
        'version' => 'version',
        'transcoderApplications' => 'transcoderApplications',
        'transcoderAvailable' => 'transcoderAvailable',
        'javaHome' => 'javaHome',
        'maxIncommingStreams' => 'maxIncommingStreams',
        'totalMemory' => 'totalMemory',
        'availableMemory' => 'availableMemory',
        'nativeBase' => 'nativeBase',
        'dvrInUse' => 'dvrInUse',
        'drmInUse' => 'drmInUse',
        'licenseExpireDate' => 'licenseExpireDate',
        'processorCores' => 'processorCores',
        'restAPIAvailable' => 'restAPIAvailable'
);

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     * @var string[]
     */
    protected static $setters = array(
        'transcoderWatermark' => 'setTranscoderWatermark',
        'serverVersion' => 'setServerVersion',
        'gpuAcceleration' => 'setGpuAcceleration',
        'wseName' => 'setWseName',
        'transcoderLicensed' => 'setTranscoderLicensed',
        'javaMaxHeapSize' => 'setJavaMaxHeapSize',
        'transcoderLicensesInUse' => 'setTranscoderLicensesInUse',
        'javaVersion' => 'setJavaVersion',
        'httpOriginAvailable' => 'setHttpOriginAvailable',
        'serverName' => 'setServerName',
        'osArchitecture' => 'setOsArchitecture',
        'drmApplications' => 'setDrmApplications',
        'javaVMVersion' => 'setJavaVMVersion',
        'transcoderLicenses' => 'setTranscoderLicenses',
        'timeRunning' => 'setTimeRunning',
        'licenseType' => 'setLicenseType',
        'osBitness' => 'setOsBitness',
        'dvrApplications' => 'setDvrApplications',
        'osVersion' => 'setOsVersion',
        'serverBuild' => 'setServerBuild',
        'saveFieldList' => 'setSaveFieldList',
        'javaName' => 'setJavaName',
        'maxConnections' => 'setMaxConnections',
        'dvrLicensed' => 'setDvrLicensed',
        'serverMode' => 'setServerMode',
        'javaBitness' => 'setJavaBitness',
        'currentConnections' => 'setCurrentConnections',
        'drmLicensed' => 'setDrmLicensed',
        'javaVendor' => 'setJavaVendor',
        'osName' => 'setOsName',
        'version' => 'setVersion',
        'transcoderApplications' => 'setTranscoderApplications',
        'transcoderAvailable' => 'setTranscoderAvailable',
        'javaHome' => 'setJavaHome',
        'maxIncommingStreams' => 'setMaxIncommingStreams',
        'totalMemory' => 'setTotalMemory',
        'availableMemory' => 'setAvailableMemory',
        'nativeBase' => 'setNativeBase',
        'dvrInUse' => 'setDvrInUse',
        'drmInUse' => 'setDrmInUse',
        'licenseExpireDate' => 'setLicenseExpireDate',
        'processorCores' => 'setProcessorCores',
        'restAPIAvailable' => 'setRestAPIAvailable'
);

    /**
     * Array of attributes to getter functions (for serialization of requests)
     * @var string[]
     */
    protected static $getters = array(
        'transcoderWatermark' => 'getTranscoderWatermark',
        'serverVersion' => 'getServerVersion',
        'gpuAcceleration' => 'getGpuAcceleration',
        'wseName' => 'getWseName',
        'transcoderLicensed' => 'getTranscoderLicensed',
        'javaMaxHeapSize' => 'getJavaMaxHeapSize',
        'transcoderLicensesInUse' => 'getTranscoderLicensesInUse',
        'javaVersion' => 'getJavaVersion',
        'httpOriginAvailable' => 'getHttpOriginAvailable',
        'serverName' => 'getServerName',
        'osArchitecture' => 'getOsArchitecture',
        'drmApplications' => 'getDrmApplications',
        'javaVMVersion' => 'getJavaVMVersion',
        'transcoderLicenses' => 'getTranscoderLicenses',
        'timeRunning' => 'getTimeRunning',
        'licenseType' => 'getLicenseType',
        'osBitness' => 'getOsBitness',
        'dvrApplications' => 'getDvrApplications',
        'osVersion' => 'getOsVersion',
        'serverBuild' => 'getServerBuild',
        'saveFieldList' => 'getSaveFieldList',
        'javaName' => 'getJavaName',
        'maxConnections' => 'getMaxConnections',
        'dvrLicensed' => 'getDvrLicensed',
        'serverMode' => 'getServerMode',
        'javaBitness' => 'getJavaBitness',
        'currentConnections' => 'getCurrentConnections',
        'drmLicensed' => 'getDrmLicensed',
        'javaVendor' => 'getJavaVendor',
        'osName' => 'getOsName',
        'version' => 'getVersion',
        'transcoderApplications' => 'getTranscoderApplications',
        'transcoderAvailable' => 'getTranscoderAvailable',
        'javaHome' => 'getJavaHome',
        'maxIncommingStreams' => 'getMaxIncommingStreams',
        'totalMemory' => 'getTotalMemory',
        'availableMemory' => 'getAvailableMemory',
        'nativeBase' => 'getNativeBase',
        'dvrInUse' => 'getDvrInUse',
        'drmInUse' => 'getDrmInUse',
        'licenseExpireDate' => 'getLicenseExpireDate',
        'processorCores' => 'getProcessorCores',
        'restAPIAvailable' => 'getRestAPIAvailable'
);

    

    

    /**
     * Associative array for storing property values
     * @var mixed[]
     */
    protected $container = array();

    /**
     * Constructor
     * @param mixed[] $data Associated array of property value initalizing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['transcoderWatermark'] = isset($data['transcoderWatermark']) ? $data['transcoderWatermark'] : null;
        $this->container['serverVersion'] = isset($data['serverVersion']) ? $data['serverVersion'] : null;
        $this->container['gpuAcceleration'] = isset($data['gpuAcceleration']) ? $data['gpuAcceleration'] : null;
        $this->container['wseName'] = isset($data['wseName']) ? $data['wseName'] : null;
        $this->container['transcoderLicensed'] = isset($data['transcoderLicensed']) ? $data['transcoderLicensed'] : null;
        $this->container['javaMaxHeapSize'] = isset($data['javaMaxHeapSize']) ? $data['javaMaxHeapSize'] : null;
        $this->container['transcoderLicensesInUse'] = isset($data['transcoderLicensesInUse']) ? $data['transcoderLicensesInUse'] : null;
        $this->container['javaVersion'] = isset($data['javaVersion']) ? $data['javaVersion'] : null;
        $this->container['httpOriginAvailable'] = isset($data['httpOriginAvailable']) ? $data['httpOriginAvailable'] : null;
        $this->container['serverName'] = isset($data['serverName']) ? $data['serverName'] : null;
        $this->container['osArchitecture'] = isset($data['osArchitecture']) ? $data['osArchitecture'] : null;
        $this->container['drmApplications'] = isset($data['drmApplications']) ? $data['drmApplications'] : null;
        $this->container['javaVMVersion'] = isset($data['javaVMVersion']) ? $data['javaVMVersion'] : null;
        $this->container['transcoderLicenses'] = isset($data['transcoderLicenses']) ? $data['transcoderLicenses'] : null;
        $this->container['timeRunning'] = isset($data['timeRunning']) ? $data['timeRunning'] : null;
        $this->container['licenseType'] = isset($data['licenseType']) ? $data['licenseType'] : null;
        $this->container['osBitness'] = isset($data['osBitness']) ? $data['osBitness'] : null;
        $this->container['dvrApplications'] = isset($data['dvrApplications']) ? $data['dvrApplications'] : null;
        $this->container['osVersion'] = isset($data['osVersion']) ? $data['osVersion'] : null;
        $this->container['serverBuild'] = isset($data['serverBuild']) ? $data['serverBuild'] : null;
        $this->container['saveFieldList'] = isset($data['saveFieldList']) ? $data['saveFieldList'] : null;
        $this->container['javaName'] = isset($data['javaName']) ? $data['javaName'] : null;
        $this->container['maxConnections'] = isset($data['maxConnections']) ? $data['maxConnections'] : null;
        $this->container['dvrLicensed'] = isset($data['dvrLicensed']) ? $data['dvrLicensed'] : null;
        $this->container['serverMode'] = isset($data['serverMode']) ? $data['serverMode'] : null;
        $this->container['javaBitness'] = isset($data['javaBitness']) ? $data['javaBitness'] : null;
        $this->container['currentConnections'] = isset($data['currentConnections']) ? $data['currentConnections'] : null;
        $this->container['drmLicensed'] = isset($data['drmLicensed']) ? $data['drmLicensed'] : null;
        $this->container['javaVendor'] = isset($data['javaVendor']) ? $data['javaVendor'] : null;
        $this->container['osName'] = isset($data['osName']) ? $data['osName'] : null;
        $this->container['version'] = isset($data['version']) ? $data['version'] : null;
        $this->container['transcoderApplications'] = isset($data['transcoderApplications']) ? $data['transcoderApplications'] : null;
        $this->container['transcoderAvailable'] = isset($data['transcoderAvailable']) ? $data['transcoderAvailable'] : null;
        $this->container['javaHome'] = isset($data['javaHome']) ? $data['javaHome'] : null;
        $this->container['maxIncommingStreams'] = isset($data['maxIncommingStreams']) ? $data['maxIncommingStreams'] : null;
        $this->container['totalMemory'] = isset($data['totalMemory']) ? $data['totalMemory'] : null;
        $this->container['availableMemory'] = isset($data['availableMemory']) ? $data['availableMemory'] : null;
        $this->container['nativeBase'] = isset($data['nativeBase']) ? $data['nativeBase'] : null;
        $this->container['dvrInUse'] = isset($data['dvrInUse']) ? $data['dvrInUse'] : null;
        $this->container['drmInUse'] = isset($data['drmInUse']) ? $data['drmInUse'] : null;
        $this->container['licenseExpireDate'] = isset($data['licenseExpireDate']) ? $data['licenseExpireDate'] : null;
        $this->container['processorCores'] = isset($data['processorCores']) ? $data['processorCores'] : null;
        $this->container['restAPIAvailable'] = isset($data['restAPIAvailable']) ? $data['restAPIAvailable'] : null;
    }

    /**
     * show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalid_properties = array();
        if ($this->container['transcoderWatermark'] === null) {
            $invalid_properties[] = "'transcoderWatermark' can't be null";
        }
        if ($this->container['serverVersion'] === null) {
            $invalid_properties[] = "'serverVersion' can't be null";
        }
        if ($this->container['gpuAcceleration'] === null) {
            $invalid_properties[] = "'gpuAcceleration' can't be null";
        }
        if ($this->container['wseName'] === null) {
            $invalid_properties[] = "'wseName' can't be null";
        }
        if ($this->container['transcoderLicensed'] === null) {
            $invalid_properties[] = "'transcoderLicensed' can't be null";
        }
        if ($this->container['javaMaxHeapSize'] === null) {
            $invalid_properties[] = "'javaMaxHeapSize' can't be null";
        }
        if ($this->container['transcoderLicensesInUse'] === null) {
            $invalid_properties[] = "'transcoderLicensesInUse' can't be null";
        }
        if ($this->container['javaVersion'] === null) {
            $invalid_properties[] = "'javaVersion' can't be null";
        }
        if ($this->container['httpOriginAvailable'] === null) {
            $invalid_properties[] = "'httpOriginAvailable' can't be null";
        }
        if ($this->container['serverName'] === null) {
            $invalid_properties[] = "'serverName' can't be null";
        }
        if ($this->container['osArchitecture'] === null) {
            $invalid_properties[] = "'osArchitecture' can't be null";
        }
        if ($this->container['drmApplications'] === null) {
            $invalid_properties[] = "'drmApplications' can't be null";
        }
        if ($this->container['javaVMVersion'] === null) {
            $invalid_properties[] = "'javaVMVersion' can't be null";
        }
        if ($this->container['transcoderLicenses'] === null) {
            $invalid_properties[] = "'transcoderLicenses' can't be null";
        }
        if ($this->container['timeRunning'] === null) {
            $invalid_properties[] = "'timeRunning' can't be null";
        }
        if ($this->container['licenseType'] === null) {
            $invalid_properties[] = "'licenseType' can't be null";
        }
        if ($this->container['osBitness'] === null) {
            $invalid_properties[] = "'osBitness' can't be null";
        }
        if ($this->container['dvrApplications'] === null) {
            $invalid_properties[] = "'dvrApplications' can't be null";
        }
        if ($this->container['osVersion'] === null) {
            $invalid_properties[] = "'osVersion' can't be null";
        }
        if ($this->container['serverBuild'] === null) {
            $invalid_properties[] = "'serverBuild' can't be null";
        }
        if ($this->container['javaName'] === null) {
            $invalid_properties[] = "'javaName' can't be null";
        }
        if ($this->container['maxConnections'] === null) {
            $invalid_properties[] = "'maxConnections' can't be null";
        }
        if ($this->container['dvrLicensed'] === null) {
            $invalid_properties[] = "'dvrLicensed' can't be null";
        }
        if ($this->container['serverMode'] === null) {
            $invalid_properties[] = "'serverMode' can't be null";
        }
        if ($this->container['javaBitness'] === null) {
            $invalid_properties[] = "'javaBitness' can't be null";
        }
        if ($this->container['currentConnections'] === null) {
            $invalid_properties[] = "'currentConnections' can't be null";
        }
        if ($this->container['drmLicensed'] === null) {
            $invalid_properties[] = "'drmLicensed' can't be null";
        }
        if ($this->container['javaVendor'] === null) {
            $invalid_properties[] = "'javaVendor' can't be null";
        }
        if ($this->container['osName'] === null) {
            $invalid_properties[] = "'osName' can't be null";
        }
        if ($this->container['version'] === null) {
            $invalid_properties[] = "'version' can't be null";
        }
        if ($this->container['transcoderApplications'] === null) {
            $invalid_properties[] = "'transcoderApplications' can't be null";
        }
        if ($this->container['transcoderAvailable'] === null) {
            $invalid_properties[] = "'transcoderAvailable' can't be null";
        }
        if ($this->container['javaHome'] === null) {
            $invalid_properties[] = "'javaHome' can't be null";
        }
        if ($this->container['maxIncommingStreams'] === null) {
            $invalid_properties[] = "'maxIncommingStreams' can't be null";
        }
        if ($this->container['totalMemory'] === null) {
            $invalid_properties[] = "'totalMemory' can't be null";
        }
        if ($this->container['availableMemory'] === null) {
            $invalid_properties[] = "'availableMemory' can't be null";
        }
        if ($this->container['nativeBase'] === null) {
            $invalid_properties[] = "'nativeBase' can't be null";
        }
        if ($this->container['dvrInUse'] === null) {
            $invalid_properties[] = "'dvrInUse' can't be null";
        }
        if ($this->container['drmInUse'] === null) {
            $invalid_properties[] = "'drmInUse' can't be null";
        }
        if ($this->container['licenseExpireDate'] === null) {
            $invalid_properties[] = "'licenseExpireDate' can't be null";
        }
        if ($this->container['processorCores'] === null) {
            $invalid_properties[] = "'processorCores' can't be null";
        }
        if ($this->container['restAPIAvailable'] === null) {
            $invalid_properties[] = "'restAPIAvailable' can't be null";
        }
        return $invalid_properties;
    }

    /**
     * validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properteis are valid
     */
    public function valid()
    {
        if ($this->container['transcoderWatermark'] === null) {
            return false;
        }
        if ($this->container['serverVersion'] === null) {
            return false;
        }
        if ($this->container['gpuAcceleration'] === null) {
            return false;
        }
        if ($this->container['wseName'] === null) {
            return false;
        }
        if ($this->container['transcoderLicensed'] === null) {
            return false;
        }
        if ($this->container['javaMaxHeapSize'] === null) {
            return false;
        }
        if ($this->container['transcoderLicensesInUse'] === null) {
            return false;
        }
        if ($this->container['javaVersion'] === null) {
            return false;
        }
        if ($this->container['httpOriginAvailable'] === null) {
            return false;
        }
        if ($this->container['serverName'] === null) {
            return false;
        }
        if ($this->container['osArchitecture'] === null) {
            return false;
        }
        if ($this->container['drmApplications'] === null) {
            return false;
        }
        if ($this->container['javaVMVersion'] === null) {
            return false;
        }
        if ($this->container['transcoderLicenses'] === null) {
            return false;
        }
        if ($this->container['timeRunning'] === null) {
            return false;
        }
        if ($this->container['licenseType'] === null) {
            return false;
        }
        if ($this->container['osBitness'] === null) {
            return false;
        }
        if ($this->container['dvrApplications'] === null) {
            return false;
        }
        if ($this->container['osVersion'] === null) {
            return false;
        }
        if ($this->container['serverBuild'] === null) {
            return false;
        }
        if ($this->container['javaName'] === null) {
            return false;
        }
        if ($this->container['maxConnections'] === null) {
            return false;
        }
        if ($this->container['dvrLicensed'] === null) {
            return false;
        }
        if ($this->container['serverMode'] === null) {
            return false;
        }
        if ($this->container['javaBitness'] === null) {
            return false;
        }
        if ($this->container['currentConnections'] === null) {
            return false;
        }
        if ($this->container['drmLicensed'] === null) {
            return false;
        }
        if ($this->container['javaVendor'] === null) {
            return false;
        }
        if ($this->container['osName'] === null) {
            return false;
        }
        if ($this->container['version'] === null) {
            return false;
        }
        if ($this->container['transcoderApplications'] === null) {
            return false;
        }
        if ($this->container['transcoderAvailable'] === null) {
            return false;
        }
        if ($this->container['javaHome'] === null) {
            return false;
        }
        if ($this->container['maxIncommingStreams'] === null) {
            return false;
        }
        if ($this->container['totalMemory'] === null) {
            return false;
        }
        if ($this->container['availableMemory'] === null) {
            return false;
        }
        if ($this->container['nativeBase'] === null) {
            return false;
        }
        if ($this->container['dvrInUse'] === null) {
            return false;
        }
        if ($this->container['drmInUse'] === null) {
            return false;
        }
        if ($this->container['licenseExpireDate'] === null) {
            return false;
        }
        if ($this->container['processorCores'] === null) {
            return false;
        }
        if ($this->container['restAPIAvailable'] === null) {
            return false;
        }
        return true;
    }


    /**
     * Gets transcoderWatermark
     * @return bool
     */
    public function getTranscoderWatermark()
    {
        return $this->container['transcoderWatermark'];
    }

    /**
     * Sets transcoderWatermark
     * @param bool $transcoderWatermark
     * @return $this
     */
    public function setTranscoderWatermark($transcoderWatermark)
    {
        $this->container['transcoderWatermark'] = $transcoderWatermark;

        return $this;
    }

    /**
     * Gets serverVersion
     * @return string
     */
    public function getServerVersion()
    {
        return $this->container['serverVersion'];
    }

    /**
     * Sets serverVersion
     * @param string $serverVersion
     * @return $this
     */
    public function setServerVersion($serverVersion)
    {
        $this->container['serverVersion'] = $serverVersion;

        return $this;
    }

    /**
     * Gets gpuAcceleration
     * @return string
     */
    public function getGpuAcceleration()
    {
        return $this->container['gpuAcceleration'];
    }

    /**
     * Sets gpuAcceleration
     * @param string $gpuAcceleration
     * @return $this
     */
    public function setGpuAcceleration($gpuAcceleration)
    {
        $this->container['gpuAcceleration'] = $gpuAcceleration;

        return $this;
    }

    /**
     * Gets wseName
     * @return string
     */
    public function getWseName()
    {
        return $this->container['wseName'];
    }

    /**
     * Sets wseName
     * @param string $wseName
     * @return $this
     */
    public function setWseName($wseName)
    {
        $this->container['wseName'] = $wseName;

        return $this;
    }

    /**
     * Gets transcoderLicensed
     * @return bool
     */
    public function getTranscoderLicensed()
    {
        return $this->container['transcoderLicensed'];
    }

    /**
     * Sets transcoderLicensed
     * @param bool $transcoderLicensed
     * @return $this
     */
    public function setTranscoderLicensed($transcoderLicensed)
    {
        $this->container['transcoderLicensed'] = $transcoderLicensed;

        return $this;
    }

    /**
     * Gets javaMaxHeapSize
     * @return string
     */
    public function getJavaMaxHeapSize()
    {
        return $this->container['javaMaxHeapSize'];
    }

    /**
     * Sets javaMaxHeapSize
     * @param string $javaMaxHeapSize
     * @return $this
     */
    public function setJavaMaxHeapSize($javaMaxHeapSize)
    {
        $this->container['javaMaxHeapSize'] = $javaMaxHeapSize;

        return $this;
    }

    /**
     * Gets transcoderLicensesInUse
     * @return int
     */
    public function getTranscoderLicensesInUse()
    {
        return $this->container['transcoderLicensesInUse'];
    }

    /**
     * Sets transcoderLicensesInUse
     * @param int $transcoderLicensesInUse
     * @return $this
     */
    public function setTranscoderLicensesInUse($transcoderLicensesInUse)
    {
        $this->container['transcoderLicensesInUse'] = $transcoderLicensesInUse;

        return $this;
    }

    /**
     * Gets javaVersion
     * @return string
     */
    public function getJavaVersion()
    {
        return $this->container['javaVersion'];
    }

    /**
     * Sets javaVersion
     * @param string $javaVersion
     * @return $this
     */
    public function setJavaVersion($javaVersion)
    {
        $this->container['javaVersion'] = $javaVersion;

        return $this;
    }

    /**
     * Gets httpOriginAvailable
     * @return bool
     */
    public function getHttpOriginAvailable()
    {
        return $this->container['httpOriginAvailable'];
    }

    /**
     * Sets httpOriginAvailable
     * @param bool $httpOriginAvailable
     * @return $this
     */
    public function setHttpOriginAvailable($httpOriginAvailable)
    {
        $this->container['httpOriginAvailable'] = $httpOriginAvailable;

        return $this;
    }

    /**
     * Gets serverName
     * @return string
     */
    public function getServerName()
    {
        return $this->container['serverName'];
    }

    /**
     * Sets serverName
     * @param string $serverName
     * @return $this
     */
    public function setServerName($serverName)
    {
        $this->container['serverName'] = $serverName;

        return $this;
    }

    /**
     * Gets osArchitecture
     * @return string
     */
    public function getOsArchitecture()
    {
        return $this->container['osArchitecture'];
    }

    /**
     * Sets osArchitecture
     * @param string $osArchitecture
     * @return $this
     */
    public function setOsArchitecture($osArchitecture)
    {
        $this->container['osArchitecture'] = $osArchitecture;

        return $this;
    }

    /**
     * Gets drmApplications
     * @return string[]
     */
    public function getDrmApplications()
    {
        return $this->container['drmApplications'];
    }

    /**
     * Sets drmApplications
     * @param string[] $drmApplications
     * @return $this
     */
    public function setDrmApplications($drmApplications)
    {
        $this->container['drmApplications'] = $drmApplications;

        return $this;
    }

    /**
     * Gets javaVMVersion
     * @return string
     */
    public function getJavaVMVersion()
    {
        return $this->container['javaVMVersion'];
    }

    /**
     * Sets javaVMVersion
     * @param string $javaVMVersion
     * @return $this
     */
    public function setJavaVMVersion($javaVMVersion)
    {
        $this->container['javaVMVersion'] = $javaVMVersion;

        return $this;
    }

    /**
     * Gets transcoderLicenses
     * @return int
     */
    public function getTranscoderLicenses()
    {
        return $this->container['transcoderLicenses'];
    }

    /**
     * Sets transcoderLicenses
     * @param int $transcoderLicenses
     * @return $this
     */
    public function setTranscoderLicenses($transcoderLicenses)
    {
        $this->container['transcoderLicenses'] = $transcoderLicenses;

        return $this;
    }

    /**
     * Gets timeRunning
     * @return double
     */
    public function getTimeRunning()
    {
        return $this->container['timeRunning'];
    }

    /**
     * Sets timeRunning
     * @param double $timeRunning
     * @return $this
     */
    public function setTimeRunning($timeRunning)
    {
        $this->container['timeRunning'] = $timeRunning;

        return $this;
    }

    /**
     * Gets licenseType
     * @return string
     */
    public function getLicenseType()
    {
        return $this->container['licenseType'];
    }

    /**
     * Sets licenseType
     * @param string $licenseType
     * @return $this
     */
    public function setLicenseType($licenseType)
    {
        $this->container['licenseType'] = $licenseType;

        return $this;
    }

    /**
     * Gets osBitness
     * @return string
     */
    public function getOsBitness()
    {
        return $this->container['osBitness'];
    }

    /**
     * Sets osBitness
     * @param string $osBitness
     * @return $this
     */
    public function setOsBitness($osBitness)
    {
        $this->container['osBitness'] = $osBitness;

        return $this;
    }

    /**
     * Gets dvrApplications
     * @return string[]
     */
    public function getDvrApplications()
    {
        return $this->container['dvrApplications'];
    }

    /**
     * Sets dvrApplications
     * @param string[] $dvrApplications
     * @return $this
     */
    public function setDvrApplications($dvrApplications)
    {
        $this->container['dvrApplications'] = $dvrApplications;

        return $this;
    }

    /**
     * Gets osVersion
     * @return string
     */
    public function getOsVersion()
    {
        return $this->container['osVersion'];
    }

    /**
     * Sets osVersion
     * @param string $osVersion
     * @return $this
     */
    public function setOsVersion($osVersion)
    {
        $this->container['osVersion'] = $osVersion;

        return $this;
    }

    /**
     * Gets serverBuild
     * @return string
     */
    public function getServerBuild()
    {
        return $this->container['serverBuild'];
    }

    /**
     * Sets serverBuild
     * @param string $serverBuild
     * @return $this
     */
    public function setServerBuild($serverBuild)
    {
        $this->container['serverBuild'] = $serverBuild;

        return $this;
    }

    /**
     * Gets saveFieldList
     * @return string[]
     */
    public function getSaveFieldList()
    {
        return $this->container['saveFieldList'];
    }

    /**
     * Sets saveFieldList
     * @param string[] $saveFieldList
     * @return $this
     */
    public function setSaveFieldList($saveFieldList)
    {
        $this->container['saveFieldList'] = $saveFieldList;

        return $this;
    }

    /**
     * Gets javaName
     * @return string
     */
    public function getJavaName()
    {
        return $this->container['javaName'];
    }

    /**
     * Sets javaName
     * @param string $javaName
     * @return $this
     */
    public function setJavaName($javaName)
    {
        $this->container['javaName'] = $javaName;

        return $this;
    }

    /**
     * Gets maxConnections
     * @return int
     */
    public function getMaxConnections()
    {
        return $this->container['maxConnections'];
    }

    /**
     * Sets maxConnections
     * @param int $maxConnections
     * @return $this
     */
    public function setMaxConnections($maxConnections)
    {
        $this->container['maxConnections'] = $maxConnections;

        return $this;
    }

    /**
     * Gets dvrLicensed
     * @return bool
     */
    public function getDvrLicensed()
    {
        return $this->container['dvrLicensed'];
    }

    /**
     * Sets dvrLicensed
     * @param bool $dvrLicensed
     * @return $this
     */
    public function setDvrLicensed($dvrLicensed)
    {
        $this->container['dvrLicensed'] = $dvrLicensed;

        return $this;
    }

    /**
     * Gets serverMode
     * @return string
     */
    public function getServerMode()
    {
        return $this->container['serverMode'];
    }

    /**
     * Sets serverMode
     * @param string $serverMode
     * @return $this
     */
    public function setServerMode($serverMode)
    {
        $this->container['serverMode'] = $serverMode;

        return $this;
    }

    /**
     * Gets javaBitness
     * @return string
     */
    public function getJavaBitness()
    {
        return $this->container['javaBitness'];
    }

    /**
     * Sets javaBitness
     * @param string $javaBitness
     * @return $this
     */
    public function setJavaBitness($javaBitness)
    {
        $this->container['javaBitness'] = $javaBitness;

        return $this;
    }

    /**
     * Gets currentConnections
     * @return int
     */
    public function getCurrentConnections()
    {
        return $this->container['currentConnections'];
    }

    /**
     * Sets currentConnections
     * @param int $currentConnections
     * @return $this
     */
    public function setCurrentConnections($currentConnections)
    {
        $this->container['currentConnections'] = $currentConnections;

        return $this;
    }

    /**
     * Gets drmLicensed
     * @return bool
     */
    public function getDrmLicensed()
    {
        return $this->container['drmLicensed'];
    }

    /**
     * Sets drmLicensed
     * @param bool $drmLicensed
     * @return $this
     */
    public function setDrmLicensed($drmLicensed)
    {
        $this->container['drmLicensed'] = $drmLicensed;

        return $this;
    }

    /**
     * Gets javaVendor
     * @return string
     */
    public function getJavaVendor()
    {
        return $this->container['javaVendor'];
    }

    /**
     * Sets javaVendor
     * @param string $javaVendor
     * @return $this
     */
    public function setJavaVendor($javaVendor)
    {
        $this->container['javaVendor'] = $javaVendor;

        return $this;
    }

    /**
     * Gets osName
     * @return string
     */
    public function getOsName()
    {
        return $this->container['osName'];
    }

    /**
     * Sets osName
     * @param string $osName
     * @return $this
     */
    public function setOsName($osName)
    {
        $this->container['osName'] = $osName;

        return $this;
    }

    /**
     * Gets version
     * @return string
     */
    public function getVersion()
    {
        return $this->container['version'];
    }

    /**
     * Sets version
     * @param string $version
     * @return $this
     */
    public function setVersion($version)
    {
        $this->container['version'] = $version;

        return $this;
    }

    /**
     * Gets transcoderApplications
     * @return string[]
     */
    public function getTranscoderApplications()
    {
        return $this->container['transcoderApplications'];
    }

    /**
     * Sets transcoderApplications
     * @param string[] $transcoderApplications
     * @return $this
     */
    public function setTranscoderApplications($transcoderApplications)
    {
        $this->container['transcoderApplications'] = $transcoderApplications;

        return $this;
    }

    /**
     * Gets transcoderAvailable
     * @return bool
     */
    public function getTranscoderAvailable()
    {
        return $this->container['transcoderAvailable'];
    }

    /**
     * Sets transcoderAvailable
     * @param bool $transcoderAvailable
     * @return $this
     */
    public function setTranscoderAvailable($transcoderAvailable)
    {
        $this->container['transcoderAvailable'] = $transcoderAvailable;

        return $this;
    }

    /**
     * Gets javaHome
     * @return string
     */
    public function getJavaHome()
    {
        return $this->container['javaHome'];
    }

    /**
     * Sets javaHome
     * @param string $javaHome
     * @return $this
     */
    public function setJavaHome($javaHome)
    {
        $this->container['javaHome'] = $javaHome;

        return $this;
    }

    /**
     * Gets maxIncommingStreams
     * @return int
     */
    public function getMaxIncommingStreams()
    {
        return $this->container['maxIncommingStreams'];
    }

    /**
     * Sets maxIncommingStreams
     * @param int $maxIncommingStreams
     * @return $this
     */
    public function setMaxIncommingStreams($maxIncommingStreams)
    {
        $this->container['maxIncommingStreams'] = $maxIncommingStreams;

        return $this;
    }

    /**
     * Gets totalMemory
     * @return int
     */
    public function getTotalMemory()
    {
        return $this->container['totalMemory'];
    }

    /**
     * Sets totalMemory
     * @param int $totalMemory
     * @return $this
     */
    public function setTotalMemory($totalMemory)
    {
        $this->container['totalMemory'] = $totalMemory;

        return $this;
    }

    /**
     * Gets availableMemory
     * @return int
     */
    public function getAvailableMemory()
    {
        return $this->container['availableMemory'];
    }

    /**
     * Sets availableMemory
     * @param int $availableMemory
     * @return $this
     */
    public function setAvailableMemory($availableMemory)
    {
        $this->container['availableMemory'] = $availableMemory;

        return $this;
    }

    /**
     * Gets nativeBase
     * @return string
     */
    public function getNativeBase()
    {
        return $this->container['nativeBase'];
    }

    /**
     * Sets nativeBase
     * @param string $nativeBase
     * @return $this
     */
    public function setNativeBase($nativeBase)
    {
        $this->container['nativeBase'] = $nativeBase;

        return $this;
    }

    /**
     * Gets dvrInUse
     * @return bool
     */
    public function getDvrInUse()
    {
        return $this->container['dvrInUse'];
    }

    /**
     * Sets dvrInUse
     * @param bool $dvrInUse
     * @return $this
     */
    public function setDvrInUse($dvrInUse)
    {
        $this->container['dvrInUse'] = $dvrInUse;

        return $this;
    }

    /**
     * Gets drmInUse
     * @return bool
     */
    public function getDrmInUse()
    {
        return $this->container['drmInUse'];
    }

    /**
     * Sets drmInUse
     * @param bool $drmInUse
     * @return $this
     */
    public function setDrmInUse($drmInUse)
    {
        $this->container['drmInUse'] = $drmInUse;

        return $this;
    }

    /**
     * Gets licenseExpireDate
     * @return string
     */
    public function getLicenseExpireDate()
    {
        return $this->container['licenseExpireDate'];
    }

    /**
     * Sets licenseExpireDate
     * @param string $licenseExpireDate
     * @return $this
     */
    public function setLicenseExpireDate($licenseExpireDate)
    {
        $this->container['licenseExpireDate'] = $licenseExpireDate;

        return $this;
    }

    /**
     * Gets processorCores
     * @return int
     */
    public function getProcessorCores()
    {
        return $this->container['processorCores'];
    }

    /**
     * Sets processorCores
     * @param int $processorCores
     * @return $this
     */
    public function setProcessorCores($processorCores)
    {
        $this->container['processorCores'] = $processorCores;

        return $this;
    }

    /**
     * Gets restAPIAvailable
     * @return bool
     */
    public function getRestAPIAvailable()
    {
        return $this->container['restAPIAvailable'];
    }

    /**
     * Sets restAPIAvailable
     * @param bool $restAPIAvailable
     * @return $this
     */
    public function setRestAPIAvailable($restAPIAvailable)
    {
        $this->container['restAPIAvailable'] = $restAPIAvailable;

        return $this;
}

}
