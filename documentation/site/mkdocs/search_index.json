{
    "docs": [
        {
            "location": "/", 
            "text": "Welcome to Wowza Rest Api documentation\n\n\nThis PHP package is automatically generated by the \nSwagger Codegen\n project:\n\n\n\n\nAPI version: 1.0.0\n\n\nPackage version: 0.0.1\n\n\nBuild date: 2016-07-18T13:26:07.291Z\n\n\nBuild package: class io.swagger.codegen.languages.PhpClientCodegen\n\n\n\n\nAnyway for compatibility and better usage we had to do some change to the generated source.\n\n\nRequirements\n\n\nPHP 7.0 and later\n\n\nInstallation \n Usage\n\n\nComposer\n\n\nTo install the bindings via \nComposer\n, add the following to \ncomposer.json\n:\n\n\n{\n  \nrepositories\n: [\n    {\n      \ntype\n: \ngit\n,\n      \nurl\n: \nhttps://github.com/topix-hackademy/wowza-restapi.git\n\n    }\n  ],\n  \nrequire\n: {\n    \ntopix-hackademy/wowza-restapi\n: \n*@dev\n\n  }\n}\n\n\n\n\nInfo\n\n\nMuch of the documentation can be found in the repository and has been generated automatically, (see \nLegacy Docs\n) but is OBSOLETE regarding namespace and authorization.\n\n\nNamespace\n\n\nAll namespace reference to namespace \nTopix\\Hackademy\\WowzaApi\n. The children namespace Client reference to the api calls. \nThe children namespace Model to the return type of the apis.\n\n\nClient\n\n\nThe class names reference the api name. \n\n\ni.e. \nVserversserverNamevhostsvhostNameapplicationsApi\n reference the url \"/v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/\"\n\n\nIt's quite complicated to read and a refactor was outside the aim of the main project. Anyway it's possible and suggested to mantainers to plan it.\n\n\nIn the legacy doc you can find every method and class explaining the return type and information on the utilisation.\n\n\nModel\n\n\nThis api describes the return type of the apis describing the data and the resources that can be extracted.\n\n\nExample of Usage\n\n\n    $configurator = new Configuration();\n\n    $configurator-\nsetUsername('admin');\n    $configurator-\nsetPassword('password');\n    $configurator-\nsetHost('http://my.wowza.org:8087');\n    $configurator-\nsetSSLVerification(false);\n    $configurator-\nsetDebug(false); //turn on just if tests are failing for major debug\n\n    $apiClient = new ApiClient($configurator);\n\n    $api_instance = new RestinfoApi($this-\napiClient);\n\n\n\nAnyway is suggested to use the Laravel Wowza Api that include the ConnectionCounts endpoint and a better configuration handling", 
            "title": "Home"
        }, 
        {
            "location": "/#welcome-to-wowza-rest-api-documentation", 
            "text": "This PHP package is automatically generated by the  Swagger Codegen  project:   API version: 1.0.0  Package version: 0.0.1  Build date: 2016-07-18T13:26:07.291Z  Build package: class io.swagger.codegen.languages.PhpClientCodegen   Anyway for compatibility and better usage we had to do some change to the generated source.", 
            "title": "Welcome to Wowza Rest Api documentation"
        }, 
        {
            "location": "/#requirements", 
            "text": "PHP 7.0 and later", 
            "title": "Requirements"
        }, 
        {
            "location": "/#installation-usage", 
            "text": "", 
            "title": "Installation &amp; Usage"
        }, 
        {
            "location": "/#composer", 
            "text": "To install the bindings via  Composer , add the following to  composer.json :  {\n   repositories : [\n    {\n       type :  git ,\n       url :  https://github.com/topix-hackademy/wowza-restapi.git \n    }\n  ],\n   require : {\n     topix-hackademy/wowza-restapi :  *@dev \n  }\n}", 
            "title": "Composer"
        }, 
        {
            "location": "/#info", 
            "text": "Much of the documentation can be found in the repository and has been generated automatically, (see  Legacy Docs ) but is OBSOLETE regarding namespace and authorization.", 
            "title": "Info"
        }, 
        {
            "location": "/#namespace", 
            "text": "All namespace reference to namespace  Topix\\Hackademy\\WowzaApi . The children namespace Client reference to the api calls. \nThe children namespace Model to the return type of the apis.", 
            "title": "Namespace"
        }, 
        {
            "location": "/#client", 
            "text": "The class names reference the api name.   i.e.  VserversserverNamevhostsvhostNameapplicationsApi  reference the url \"/v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/\"  It's quite complicated to read and a refactor was outside the aim of the main project. Anyway it's possible and suggested to mantainers to plan it.  In the legacy doc you can find every method and class explaining the return type and information on the utilisation.", 
            "title": "Client"
        }, 
        {
            "location": "/#model", 
            "text": "This api describes the return type of the apis describing the data and the resources that can be extracted.", 
            "title": "Model"
        }, 
        {
            "location": "/#example-of-usage", 
            "text": "$configurator = new Configuration();\n\n    $configurator- setUsername('admin');\n    $configurator- setPassword('password');\n    $configurator- setHost('http://my.wowza.org:8087');\n    $configurator- setSSLVerification(false);\n    $configurator- setDebug(false); //turn on just if tests are failing for major debug\n\n    $apiClient = new ApiClient($configurator);\n\n    $api_instance = new RestinfoApi($this- apiClient);  Anyway is suggested to use the Laravel Wowza Api that include the ConnectionCounts endpoint and a better configuration handling", 
            "title": "Example of Usage"
        }, 
        {
            "location": "/legacy-docs/Api/RestinfoApi/", 
            "text": "WowzaApi\\RestinfoApi\n\n\nAll URIs are relative to \nhttp://localhost:8087/\n\n\n\n\n\n\n\n\nMethod\n\n\nHTTP request\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\ngetRESTInfoConfig\n\n\nGET\n /restinfo\n\n\nRetrieves the REST configuration information\n\n\n\n\n\n\n\n\ngetRESTInfoConfig\n\n\n\n\n\\Model\\RESTInfoConfig getRESTInfoConfig()\n\n\n\n\nRetrieves the REST configuration information\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\RestinfoApi();\n\ntry {\n    $result = $api_instance-\ngetRESTInfoConfig();\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling RestinfoApi-\ngetRESTInfoConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\nThis endpoint does not need any parameter.\n\n\nReturn type\n\n\n\\Model\\RESTInfoConfig\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: Not defined\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]", 
            "title": "RestinfoApi"
        }, 
        {
            "location": "/legacy-docs/Api/RestinfoApi/#wowzaapirestinfoapi", 
            "text": "All URIs are relative to  http://localhost:8087/     Method  HTTP request  Description      getRESTInfoConfig  GET  /restinfo  Retrieves the REST configuration information", 
            "title": "WowzaApi\\RestinfoApi"
        }, 
        {
            "location": "/legacy-docs/Api/RestinfoApi/#getrestinfoconfig", 
            "text": "\\Model\\RESTInfoConfig getRESTInfoConfig()   Retrieves the REST configuration information  This API is available in builds 15089 or later.", 
            "title": "getRESTInfoConfig"
        }, 
        {
            "location": "/legacy-docs/Api/RestinfoApi/#example", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\RestinfoApi();\n\ntry {\n    $result = $api_instance- getRESTInfoConfig();\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling RestinfoApi- getRESTInfoConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/RestinfoApi/#parameters", 
            "text": "This endpoint does not need any parameter.", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/RestinfoApi/#return-type", 
            "text": "\\Model\\RESTInfoConfig", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/RestinfoApi/#authorization", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/RestinfoApi/#http-request-headers", 
            "text": "Content-Type : Not defined  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VmachinemonitoringcurrentApi/", 
            "text": "WowzaApi\\VmachinemonitoringcurrentApi\n\n\nAll URIs are relative to \nhttp://localhost:8087/\n\n\n\n\n\n\n\n\nMethod\n\n\nHTTP request\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\ngetCurrentMachineStatistics\n\n\nGET\n /v2/machine/monitoring/current\n\n\nRetrieves current statictics for the machine\n\n\n\n\n\n\n\n\ngetCurrentMachineStatistics\n\n\n\n\n\\Model\\CurrentMachineStatistics getCurrentMachineStatistics()\n\n\n\n\nRetrieves current statictics for the machine\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VmachinemonitoringcurrentApi();\n\ntry {\n    $result = $api_instance-\ngetCurrentMachineStatistics();\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VmachinemonitoringcurrentApi-\ngetCurrentMachineStatistics: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\nThis endpoint does not need any parameter.\n\n\nReturn type\n\n\n\\Model\\CurrentMachineStatistics\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: Not defined\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]", 
            "title": "VmachinemonitoringcurrentApi"
        }, 
        {
            "location": "/legacy-docs/Api/VmachinemonitoringcurrentApi/#wowzaapivmachinemonitoringcurrentapi", 
            "text": "All URIs are relative to  http://localhost:8087/     Method  HTTP request  Description      getCurrentMachineStatistics  GET  /v2/machine/monitoring/current  Retrieves current statictics for the machine", 
            "title": "WowzaApi\\VmachinemonitoringcurrentApi"
        }, 
        {
            "location": "/legacy-docs/Api/VmachinemonitoringcurrentApi/#getcurrentmachinestatistics", 
            "text": "\\Model\\CurrentMachineStatistics getCurrentMachineStatistics()   Retrieves current statictics for the machine  This API is available in builds 15089 or later.", 
            "title": "getCurrentMachineStatistics"
        }, 
        {
            "location": "/legacy-docs/Api/VmachinemonitoringcurrentApi/#example", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VmachinemonitoringcurrentApi();\n\ntry {\n    $result = $api_instance- getCurrentMachineStatistics();\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VmachinemonitoringcurrentApi- getCurrentMachineStatistics: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VmachinemonitoringcurrentApi/#parameters", 
            "text": "This endpoint does not need any parameter.", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VmachinemonitoringcurrentApi/#return-type", 
            "text": "\\Model\\CurrentMachineStatistics", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VmachinemonitoringcurrentApi/#authorization", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VmachinemonitoringcurrentApi/#http-request-headers", 
            "text": "Content-Type : Not defined  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VmachinemonitoringhistoricApi/", 
            "text": "WowzaApi\\VmachinemonitoringhistoricApi\n\n\nAll URIs are relative to \nhttp://localhost:8087/\n\n\n\n\n\n\n\n\nMethod\n\n\nHTTP request\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\ngetHistoricMachineStatistics\n\n\nGET\n /v2/machine/monitoring/historic\n\n\nRetrieves historic statictics for the machine\n\n\n\n\n\n\n\n\ngetHistoricMachineStatistics\n\n\n\n\n\\Model\\HistoricMachineStatistics getHistoricMachineStatistics()\n\n\n\n\nRetrieves historic statictics for the machine\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VmachinemonitoringhistoricApi();\n\ntry {\n    $result = $api_instance-\ngetHistoricMachineStatistics();\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VmachinemonitoringhistoricApi-\ngetHistoricMachineStatistics: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\nThis endpoint does not need any parameter.\n\n\nReturn type\n\n\n\\Model\\HistoricMachineStatistics\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: Not defined\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]", 
            "title": "VmachinemonitoringhistoricApi"
        }, 
        {
            "location": "/legacy-docs/Api/VmachinemonitoringhistoricApi/#wowzaapivmachinemonitoringhistoricapi", 
            "text": "All URIs are relative to  http://localhost:8087/     Method  HTTP request  Description      getHistoricMachineStatistics  GET  /v2/machine/monitoring/historic  Retrieves historic statictics for the machine", 
            "title": "WowzaApi\\VmachinemonitoringhistoricApi"
        }, 
        {
            "location": "/legacy-docs/Api/VmachinemonitoringhistoricApi/#gethistoricmachinestatistics", 
            "text": "\\Model\\HistoricMachineStatistics getHistoricMachineStatistics()   Retrieves historic statictics for the machine  This API is available in builds 15089 or later.", 
            "title": "getHistoricMachineStatistics"
        }, 
        {
            "location": "/legacy-docs/Api/VmachinemonitoringhistoricApi/#example", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VmachinemonitoringhistoricApi();\n\ntry {\n    $result = $api_instance- getHistoricMachineStatistics();\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VmachinemonitoringhistoricApi- getHistoricMachineStatistics: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VmachinemonitoringhistoricApi/#parameters", 
            "text": "This endpoint does not need any parameter.", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VmachinemonitoringhistoricApi/#return-type", 
            "text": "\\Model\\HistoricMachineStatistics", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VmachinemonitoringhistoricApi/#authorization", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VmachinemonitoringhistoricApi/#http-request-headers", 
            "text": "Content-Type : Not defined  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversApi/", 
            "text": "WowzaApi\\VserversApi\n\n\nAll URIs are relative to \nhttp://localhost:8087/\n\n\n\n\n\n\n\n\nMethod\n\n\nHTTP request\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\ngetServerConfig\n\n\nGET\n /v2/servers/{serverName}\n\n\nRetrieves the Server configuration\n\n\n\n\n\n\ngetServerConfigAdv\n\n\nGET\n /v2/servers/{serverName}/adv\n\n\nRetrieves the advanced Server configuration\n\n\n\n\n\n\ngetServerLogFileConfig\n\n\nGET\n /v2/servers/{serverName}/logfiles/{logName}\n\n\nRetrieves the contents of a Server Log with the specified log name\n\n\n\n\n\n\ngetServerLogFileDownloadConfig\n\n\nGET\n /v2/servers/{serverName}/logfiles/{logName}/download\n\n\nRetrieves the Server Log file for the specified log name, zipped\n\n\n\n\n\n\ngetServerLogFilesConfig\n\n\nGET\n /v2/servers/{serverName}/logfiles\n\n\nRetrieves the list of server log files\n\n\n\n\n\n\ngetServerLogTypesConfig\n\n\nGET\n /v2/servers/{serverName}/logs\n\n\nRetrieves the list of available server Log Types\n\n\n\n\n\n\ngetServerLogsConfig\n\n\nGET\n /v2/servers/{serverName}/logs/{logType}\n\n\nRetrieves the contents of multiple Server Logs with the specified type in the log name\n\n\n\n\n\n\ngetServersConfig\n\n\nGET\n /v2/servers\n\n\nRetrieves the list of Servers\n\n\n\n\n\n\ngetSourceDriverNamesList\n\n\nGET\n /v2/servers/{serverName}/sourcecontrol/drivernames\n\n\nGet the list of source control drivers\n\n\n\n\n\n\nputServerAction\n\n\nPUT\n /v2/servers/{serverName}/actions/{action}\n\n\nTells the Server to perform an action\n\n\n\n\n\n\nputServerConfig\n\n\nPUT\n /v2/servers/{serverName}\n\n\nUpdates the Server configuration\n\n\n\n\n\n\nputServerConfigAdv\n\n\nPUT\n /v2/servers/{serverName}/adv\n\n\nUpdates the advanced Server configuration\n\n\n\n\n\n\n\n\ngetServerConfig\n\n\n\n\n\\Model\\ServerConfig getServerConfig($serverName)\n\n\n\n\nRetrieves the Server configuration\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n\ntry {\n    $result = $api_instance-\ngetServerConfig($serverName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversApi-\ngetServerConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\n\\Model\\ServerConfig\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\ngetServerConfigAdv\n\n\n\n\n\\Model\\ServerConfigAdv getServerConfigAdv($serverName)\n\n\n\n\nRetrieves the advanced Server configuration\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n\ntry {\n    $result = $api_instance-\ngetServerConfigAdv($serverName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversApi-\ngetServerConfigAdv: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\n\\Model\\ServerConfigAdv\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\ngetServerLogFileConfig\n\n\n\n\n\\Model\\ServerLogFileConfig getServerLogFileConfig($serverName, $logName, $lineCount, $startOffset, $filter, $search, $regexSearch, $head, $tail)\n\n\n\n\nRetrieves the contents of a Server Log with the specified log name\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$logName = \nlogName_example\n; // string | The name of the log\n$lineCount = \n100\n; // string | The number of log lines requested, where a postive number indicates log lines after startOffset and a negative number indicate log lines before startOffset\n$startOffset = \nstartOffset_example\n; // string | The byte offset in the file at which to begin getting log lines\n$filter = \nfilter_example\n; // string | A string containing a list of predefined search filters separated by | where valid strings are noDebug,noInfo,noWarn,noError,noHeader,noColumnHeadings\n$search = \nsearch_example\n; // string | A string containing a literal string on which to filter or a regex\n$regexSearch = \nfalse\n; // string | Indicates if the 'search' parameter is a regex or a literal string\n$head = \nhead_example\n; // string | Returns the first x lines from the requested log file, the overrides the startoffset and linecount values\n$tail = \ntail_example\n; // string | Returns the last x lines from the requested log file, the overrides the startoffset and linecount values\n\ntry {\n    $result = $api_instance-\ngetServerLogFileConfig($serverName, $logName, $lineCount, $startOffset, $filter, $search, $regexSearch, $head, $tail);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversApi-\ngetServerLogFileConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nlogName\n\n\nstring\n\n\nThe name of the log\n\n\n\n\n\n\n\n\nlineCount\n\n\nstring\n\n\nThe number of log lines requested, where a postive number indicates log lines after startOffset and a negative number indicate log lines before startOffset\n\n\n[optional] [default to 100]\n\n\n\n\n\n\nstartOffset\n\n\nstring\n\n\nThe byte offset in the file at which to begin getting log lines\n\n\n[optional]\n\n\n\n\n\n\nfilter\n\n\nstring\n\n\nA string containing a list of predefined search filters separated by\n\n\nwhere valid strings are noDebug,noInfo,noWarn,noError,noHeader,noColumnHeadings\n\n\n\n\n\n\nsearch\n\n\nstring\n\n\nA string containing a literal string on which to filter or a regex\n\n\n[optional]\n\n\n\n\n\n\nregexSearch\n\n\nstring\n\n\nIndicates if the \nsearch\n parameter is a regex or a literal string\n\n\n[optional] [default to false]\n\n\n\n\n\n\nhead\n\n\nstring\n\n\nReturns the first x lines from the requested log file, the overrides the startoffset and linecount values\n\n\n[optional]\n\n\n\n\n\n\ntail\n\n\nstring\n\n\nReturns the last x lines from the requested log file, the overrides the startoffset and linecount values\n\n\n[optional]\n\n\n\n\n\n\n\n\nReturn type\n\n\n\\Model\\ServerLogFileConfig\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\ngetServerLogFileDownloadConfig\n\n\n\n\n\\Model\\ServerLogFileDownloadConfig getServerLogFileDownloadConfig($serverName, $logName)\n\n\n\n\nRetrieves the Server Log file for the specified log name, zipped\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$logName = \nlogName_example\n; // string | The name of the log\n\ntry {\n    $result = $api_instance-\ngetServerLogFileDownloadConfig($serverName, $logName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversApi-\ngetServerLogFileDownloadConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nlogName\n\n\nstring\n\n\nThe name of the log\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\n\\Model\\ServerLogFileDownloadConfig\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\ngetServerLogFilesConfig\n\n\n\n\n\\Model\\ServerLogFilesConfig getServerLogFilesConfig($serverName, $order)\n\n\n\n\nRetrieves the list of server log files\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$order = \nnewestFirst\n; // string | The order of files in serverLogs list\n\ntry {\n    $result = $api_instance-\ngetServerLogFilesConfig($serverName, $order);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversApi-\ngetServerLogFilesConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\norder\n\n\nstring\n\n\nThe order of files in serverLogs list\n\n\n[optional] [default to newestFirst]\n\n\n\n\n\n\n\n\nReturn type\n\n\n\\Model\\ServerLogFilesConfig\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\ngetServerLogTypesConfig\n\n\n\n\n\\Model\\ServerLogTypesConfig getServerLogTypesConfig($serverName)\n\n\n\n\nRetrieves the list of available server Log Types\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n\ntry {\n    $result = $api_instance-\ngetServerLogTypesConfig($serverName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversApi-\ngetServerLogTypesConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\n\\Model\\ServerLogTypesConfig\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\ngetServerLogsConfig\n\n\n\n\n\\Model\\ServerLogsConfig getServerLogsConfig($serverName, $logType, $lineCount, $startOffset, $filter, $search, $regexSearch, $head, $tail, $startDate, $endDate)\n\n\n\n\nRetrieves the contents of multiple Server Logs with the specified type in the log name\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$logType = \nlogType_example\n; // string | The type of the log\n$lineCount = \n100\n; // string | The number of log lines requested, where a postive number indicates log lines after startOffset and a negative number indicate log lines before startOffset\n$startOffset = \nstartOffset_example\n; // string | The byte offset in the file at which to begin getting log lines\n$filter = \nfilter_example\n; // string | A string containing a list of predefined search filters separated by | where valid strings are noDebug,noInfo,noWarn,noError,noHeader,noColumnHeadings\n$search = \nsearch_example\n; // string | A string containing a literal string on which to filter or a regex\n$regexSearch = \nfalse\n; // string | Indicates if the 'search' parameter is a regex or a literal string\n$head = \nhead_example\n; // string | Returns the first x lines from the requested log file, the overrides the startoffset and linecount values\n$tail = \ntail_example\n; // string | Returns the last x lines from the requested log file, the overrides the startoffset and linecount values\n$startDate = \nstartDate_example\n; // string | The start date to filter on (UTC milliseconds)\n$endDate = \nendDate_example\n; // string | The end date to filter on (UTC milliseconds)\n\ntry {\n    $result = $api_instance-\ngetServerLogsConfig($serverName, $logType, $lineCount, $startOffset, $filter, $search, $regexSearch, $head, $tail, $startDate, $endDate);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversApi-\ngetServerLogsConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nlogType\n\n\nstring\n\n\nThe type of the log\n\n\n\n\n\n\n\n\nlineCount\n\n\nstring\n\n\nThe number of log lines requested, where a postive number indicates log lines after startOffset and a negative number indicate log lines before startOffset\n\n\n[optional] [default to 100]\n\n\n\n\n\n\nstartOffset\n\n\nstring\n\n\nThe byte offset in the file at which to begin getting log lines\n\n\n[optional]\n\n\n\n\n\n\nfilter\n\n\nstring\n\n\nA string containing a list of predefined search filters separated by\n\n\nwhere valid strings are noDebug,noInfo,noWarn,noError,noHeader,noColumnHeadings\n\n\n\n\n\n\nsearch\n\n\nstring\n\n\nA string containing a literal string on which to filter or a regex\n\n\n[optional]\n\n\n\n\n\n\nregexSearch\n\n\nstring\n\n\nIndicates if the \nsearch\n parameter is a regex or a literal string\n\n\n[optional] [default to false]\n\n\n\n\n\n\nhead\n\n\nstring\n\n\nReturns the first x lines from the requested log file, the overrides the startoffset and linecount values\n\n\n[optional]\n\n\n\n\n\n\ntail\n\n\nstring\n\n\nReturns the last x lines from the requested log file, the overrides the startoffset and linecount values\n\n\n[optional]\n\n\n\n\n\n\nstartDate\n\n\nstring\n\n\nThe start date to filter on (UTC milliseconds)\n\n\n[optional]\n\n\n\n\n\n\nendDate\n\n\nstring\n\n\nThe end date to filter on (UTC milliseconds)\n\n\n[optional]\n\n\n\n\n\n\n\n\nReturn type\n\n\n\\Model\\ServerLogsConfig\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\ngetServersConfig\n\n\n\n\n\\Model\\ServersConfig getServersConfig()\n\n\n\n\nRetrieves the list of Servers\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversApi();\n\ntry {\n    $result = $api_instance-\ngetServersConfig();\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversApi-\ngetServersConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\nThis endpoint does not need any parameter.\n\n\nReturn type\n\n\n\\Model\\ServersConfig\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\ngetSourceDriverNamesList\n\n\n\n\n\\Model\\SourceDriverNamesList getSourceDriverNamesList($serverName)\n\n\n\n\nGet the list of source control drivers\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n\ntry {\n    $result = $api_instance-\ngetSourceDriverNamesList($serverName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversApi-\ngetSourceDriverNamesList: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\n\\Model\\SourceDriverNamesList\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\nputServerAction\n\n\n\n\nputServerAction($serverName, $action)\n\n\n\n\nTells the Server to perform an action\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$action = \naction_example\n; // string | The action which should be performed by the server\n\ntry {\n    $api_instance-\nputServerAction($serverName, $action);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversApi-\nputServerAction: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\naction\n\n\nstring\n\n\nThe action which should be performed by the server\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\nvoid (empty response body)\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\nputServerConfig\n\n\n\n\nputServerConfig($serverName, $body)\n\n\n\n\nUpdates the Server configuration\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$body = new \\Model\\ServerConfig(); // \\Model\\ServerConfig | \n\ntry {\n    $api_instance-\nputServerConfig($serverName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversApi-\nputServerConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nbody\n\n\n\\Model\\ServerConfig\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\nvoid (empty response body)\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\nputServerConfigAdv\n\n\n\n\nputServerConfigAdv($serverName, $body)\n\n\n\n\nUpdates the advanced Server configuration\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$body = new \\Model\\ServerConfigAdv(); // \\Model\\ServerConfigAdv | \n\ntry {\n    $api_instance-\nputServerConfigAdv($serverName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversApi-\nputServerConfigAdv: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nbody\n\n\n\\Model\\ServerConfigAdv\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\nvoid (empty response body)\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]", 
            "title": "VserversApi"
        }, 
        {
            "location": "/legacy-docs/Api/VserversApi/#wowzaapivserversapi", 
            "text": "All URIs are relative to  http://localhost:8087/     Method  HTTP request  Description      getServerConfig  GET  /v2/servers/{serverName}  Retrieves the Server configuration    getServerConfigAdv  GET  /v2/servers/{serverName}/adv  Retrieves the advanced Server configuration    getServerLogFileConfig  GET  /v2/servers/{serverName}/logfiles/{logName}  Retrieves the contents of a Server Log with the specified log name    getServerLogFileDownloadConfig  GET  /v2/servers/{serverName}/logfiles/{logName}/download  Retrieves the Server Log file for the specified log name, zipped    getServerLogFilesConfig  GET  /v2/servers/{serverName}/logfiles  Retrieves the list of server log files    getServerLogTypesConfig  GET  /v2/servers/{serverName}/logs  Retrieves the list of available server Log Types    getServerLogsConfig  GET  /v2/servers/{serverName}/logs/{logType}  Retrieves the contents of multiple Server Logs with the specified type in the log name    getServersConfig  GET  /v2/servers  Retrieves the list of Servers    getSourceDriverNamesList  GET  /v2/servers/{serverName}/sourcecontrol/drivernames  Get the list of source control drivers    putServerAction  PUT  /v2/servers/{serverName}/actions/{action}  Tells the Server to perform an action    putServerConfig  PUT  /v2/servers/{serverName}  Updates the Server configuration    putServerConfigAdv  PUT  /v2/servers/{serverName}/adv  Updates the advanced Server configuration", 
            "title": "WowzaApi\\VserversApi"
        }, 
        {
            "location": "/legacy-docs/Api/VserversApi/#getserverconfig", 
            "text": "\\Model\\ServerConfig getServerConfig($serverName)   Retrieves the Server configuration  This API is available in builds 15089 or later.", 
            "title": "getServerConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversApi/#example", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n\ntry {\n    $result = $api_instance- getServerConfig($serverName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversApi- getServerConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversApi/#parameters", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversApi/#return-type", 
            "text": "\\Model\\ServerConfig", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversApi/#authorization", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversApi/#http-request-headers", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversApi/#getserverconfigadv", 
            "text": "\\Model\\ServerConfigAdv getServerConfigAdv($serverName)   Retrieves the advanced Server configuration  This API is available in builds 15089 or later.", 
            "title": "getServerConfigAdv"
        }, 
        {
            "location": "/legacy-docs/Api/VserversApi/#example_1", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n\ntry {\n    $result = $api_instance- getServerConfigAdv($serverName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversApi- getServerConfigAdv: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversApi/#parameters_1", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversApi/#return-type_1", 
            "text": "\\Model\\ServerConfigAdv", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversApi/#authorization_1", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversApi/#http-request-headers_1", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversApi/#getserverlogfileconfig", 
            "text": "\\Model\\ServerLogFileConfig getServerLogFileConfig($serverName, $logName, $lineCount, $startOffset, $filter, $search, $regexSearch, $head, $tail)   Retrieves the contents of a Server Log with the specified log name  This API is available in builds 15089 or later.", 
            "title": "getServerLogFileConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversApi/#example_2", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$logName =  logName_example ; // string | The name of the log\n$lineCount =  100 ; // string | The number of log lines requested, where a postive number indicates log lines after startOffset and a negative number indicate log lines before startOffset\n$startOffset =  startOffset_example ; // string | The byte offset in the file at which to begin getting log lines\n$filter =  filter_example ; // string | A string containing a list of predefined search filters separated by | where valid strings are noDebug,noInfo,noWarn,noError,noHeader,noColumnHeadings\n$search =  search_example ; // string | A string containing a literal string on which to filter or a regex\n$regexSearch =  false ; // string | Indicates if the 'search' parameter is a regex or a literal string\n$head =  head_example ; // string | Returns the first x lines from the requested log file, the overrides the startoffset and linecount values\n$tail =  tail_example ; // string | Returns the last x lines from the requested log file, the overrides the startoffset and linecount values\n\ntry {\n    $result = $api_instance- getServerLogFileConfig($serverName, $logName, $lineCount, $startOffset, $filter, $search, $regexSearch, $head, $tail);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversApi- getServerLogFileConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversApi/#parameters_2", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     logName  string  The name of the log     lineCount  string  The number of log lines requested, where a postive number indicates log lines after startOffset and a negative number indicate log lines before startOffset  [optional] [default to 100]    startOffset  string  The byte offset in the file at which to begin getting log lines  [optional]    filter  string  A string containing a list of predefined search filters separated by  where valid strings are noDebug,noInfo,noWarn,noError,noHeader,noColumnHeadings    search  string  A string containing a literal string on which to filter or a regex  [optional]    regexSearch  string  Indicates if the  search  parameter is a regex or a literal string  [optional] [default to false]    head  string  Returns the first x lines from the requested log file, the overrides the startoffset and linecount values  [optional]    tail  string  Returns the last x lines from the requested log file, the overrides the startoffset and linecount values  [optional]", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversApi/#return-type_2", 
            "text": "\\Model\\ServerLogFileConfig", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversApi/#authorization_2", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversApi/#http-request-headers_2", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversApi/#getserverlogfiledownloadconfig", 
            "text": "\\Model\\ServerLogFileDownloadConfig getServerLogFileDownloadConfig($serverName, $logName)   Retrieves the Server Log file for the specified log name, zipped  This API is available in builds 15089 or later.", 
            "title": "getServerLogFileDownloadConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversApi/#example_3", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$logName =  logName_example ; // string | The name of the log\n\ntry {\n    $result = $api_instance- getServerLogFileDownloadConfig($serverName, $logName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversApi- getServerLogFileDownloadConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversApi/#parameters_3", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     logName  string  The name of the log", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversApi/#return-type_3", 
            "text": "\\Model\\ServerLogFileDownloadConfig", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversApi/#authorization_3", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversApi/#http-request-headers_3", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversApi/#getserverlogfilesconfig", 
            "text": "\\Model\\ServerLogFilesConfig getServerLogFilesConfig($serverName, $order)   Retrieves the list of server log files  This API is available in builds 15089 or later.", 
            "title": "getServerLogFilesConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversApi/#example_4", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$order =  newestFirst ; // string | The order of files in serverLogs list\n\ntry {\n    $result = $api_instance- getServerLogFilesConfig($serverName, $order);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversApi- getServerLogFilesConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversApi/#parameters_4", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     order  string  The order of files in serverLogs list  [optional] [default to newestFirst]", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversApi/#return-type_4", 
            "text": "\\Model\\ServerLogFilesConfig", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversApi/#authorization_4", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversApi/#http-request-headers_4", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversApi/#getserverlogtypesconfig", 
            "text": "\\Model\\ServerLogTypesConfig getServerLogTypesConfig($serverName)   Retrieves the list of available server Log Types  This API is available in builds 15089 or later.", 
            "title": "getServerLogTypesConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversApi/#example_5", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n\ntry {\n    $result = $api_instance- getServerLogTypesConfig($serverName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversApi- getServerLogTypesConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversApi/#parameters_5", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversApi/#return-type_5", 
            "text": "\\Model\\ServerLogTypesConfig", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversApi/#authorization_5", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversApi/#http-request-headers_5", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversApi/#getserverlogsconfig", 
            "text": "\\Model\\ServerLogsConfig getServerLogsConfig($serverName, $logType, $lineCount, $startOffset, $filter, $search, $regexSearch, $head, $tail, $startDate, $endDate)   Retrieves the contents of multiple Server Logs with the specified type in the log name  This API is available in builds 15089 or later.", 
            "title": "getServerLogsConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversApi/#example_6", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$logType =  logType_example ; // string | The type of the log\n$lineCount =  100 ; // string | The number of log lines requested, where a postive number indicates log lines after startOffset and a negative number indicate log lines before startOffset\n$startOffset =  startOffset_example ; // string | The byte offset in the file at which to begin getting log lines\n$filter =  filter_example ; // string | A string containing a list of predefined search filters separated by | where valid strings are noDebug,noInfo,noWarn,noError,noHeader,noColumnHeadings\n$search =  search_example ; // string | A string containing a literal string on which to filter or a regex\n$regexSearch =  false ; // string | Indicates if the 'search' parameter is a regex or a literal string\n$head =  head_example ; // string | Returns the first x lines from the requested log file, the overrides the startoffset and linecount values\n$tail =  tail_example ; // string | Returns the last x lines from the requested log file, the overrides the startoffset and linecount values\n$startDate =  startDate_example ; // string | The start date to filter on (UTC milliseconds)\n$endDate =  endDate_example ; // string | The end date to filter on (UTC milliseconds)\n\ntry {\n    $result = $api_instance- getServerLogsConfig($serverName, $logType, $lineCount, $startOffset, $filter, $search, $regexSearch, $head, $tail, $startDate, $endDate);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversApi- getServerLogsConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversApi/#parameters_6", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     logType  string  The type of the log     lineCount  string  The number of log lines requested, where a postive number indicates log lines after startOffset and a negative number indicate log lines before startOffset  [optional] [default to 100]    startOffset  string  The byte offset in the file at which to begin getting log lines  [optional]    filter  string  A string containing a list of predefined search filters separated by  where valid strings are noDebug,noInfo,noWarn,noError,noHeader,noColumnHeadings    search  string  A string containing a literal string on which to filter or a regex  [optional]    regexSearch  string  Indicates if the  search  parameter is a regex or a literal string  [optional] [default to false]    head  string  Returns the first x lines from the requested log file, the overrides the startoffset and linecount values  [optional]    tail  string  Returns the last x lines from the requested log file, the overrides the startoffset and linecount values  [optional]    startDate  string  The start date to filter on (UTC milliseconds)  [optional]    endDate  string  The end date to filter on (UTC milliseconds)  [optional]", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversApi/#return-type_6", 
            "text": "\\Model\\ServerLogsConfig", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversApi/#authorization_6", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversApi/#http-request-headers_6", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversApi/#getserversconfig", 
            "text": "\\Model\\ServersConfig getServersConfig()   Retrieves the list of Servers  This API is available in builds 15089 or later.", 
            "title": "getServersConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversApi/#example_7", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversApi();\n\ntry {\n    $result = $api_instance- getServersConfig();\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversApi- getServersConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversApi/#parameters_7", 
            "text": "This endpoint does not need any parameter.", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversApi/#return-type_7", 
            "text": "\\Model\\ServersConfig", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversApi/#authorization_7", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversApi/#http-request-headers_7", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversApi/#getsourcedrivernameslist", 
            "text": "\\Model\\SourceDriverNamesList getSourceDriverNamesList($serverName)   Get the list of source control drivers  This API is available in builds 15089 or later.", 
            "title": "getSourceDriverNamesList"
        }, 
        {
            "location": "/legacy-docs/Api/VserversApi/#example_8", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n\ntry {\n    $result = $api_instance- getSourceDriverNamesList($serverName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversApi- getSourceDriverNamesList: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversApi/#parameters_8", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversApi/#return-type_8", 
            "text": "\\Model\\SourceDriverNamesList", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversApi/#authorization_8", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversApi/#http-request-headers_8", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversApi/#putserveraction", 
            "text": "putServerAction($serverName, $action)   Tells the Server to perform an action  This API is available in builds 15089 or later.", 
            "title": "putServerAction"
        }, 
        {
            "location": "/legacy-docs/Api/VserversApi/#example_9", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$action =  action_example ; // string | The action which should be performed by the server\n\ntry {\n    $api_instance- putServerAction($serverName, $action);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversApi- putServerAction: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversApi/#parameters_9", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     action  string  The action which should be performed by the server", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversApi/#return-type_9", 
            "text": "void (empty response body)", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversApi/#authorization_9", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversApi/#http-request-headers_9", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversApi/#putserverconfig", 
            "text": "putServerConfig($serverName, $body)   Updates the Server configuration  This API is available in builds 15089 or later.", 
            "title": "putServerConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversApi/#example_10", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$body = new \\Model\\ServerConfig(); // \\Model\\ServerConfig | \n\ntry {\n    $api_instance- putServerConfig($serverName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversApi- putServerConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversApi/#parameters_10", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     body  \\Model\\ServerConfig", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversApi/#return-type_10", 
            "text": "void (empty response body)", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversApi/#authorization_10", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversApi/#http-request-headers_10", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversApi/#putserverconfigadv", 
            "text": "putServerConfigAdv($serverName, $body)   Updates the advanced Server configuration  This API is available in builds 15089 or later.", 
            "title": "putServerConfigAdv"
        }, 
        {
            "location": "/legacy-docs/Api/VserversApi/#example_11", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$body = new \\Model\\ServerConfigAdv(); // \\Model\\ServerConfigAdv | \n\ntry {\n    $api_instance- putServerConfigAdv($serverName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversApi- putServerConfigAdv: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversApi/#parameters_11", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     body  \\Model\\ServerConfigAdv", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversApi/#return-type_11", 
            "text": "void (empty response body)", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversApi/#authorization_11", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversApi/#http-request-headers_11", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamelicensesApi/", 
            "text": "WowzaApi\\VserversserverNamelicensesApi\n\n\nAll URIs are relative to \nhttp://localhost:8087/\n\n\n\n\n\n\n\n\nMethod\n\n\nHTTP request\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\ngetServerLicensesConfig\n\n\nGET\n /v2/servers/{serverName}/licenses\n\n\nRetrieves the list of server Licenses\n\n\n\n\n\n\nputServerLicensesConfig\n\n\nPUT\n /v2/servers/{serverName}/licenses\n\n\nUpdates the Server License list\n\n\n\n\n\n\n\n\ngetServerLicensesConfig\n\n\n\n\n\\Model\\ServerLicensesConfig getServerLicensesConfig($serverName)\n\n\n\n\nRetrieves the list of server Licenses\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamelicensesApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n\ntry {\n    $result = $api_instance-\ngetServerLicensesConfig($serverName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamelicensesApi-\ngetServerLicensesConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\n\\Model\\ServerLicensesConfig\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\nputServerLicensesConfig\n\n\n\n\nputServerLicensesConfig($serverName, $body)\n\n\n\n\nUpdates the Server License list\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamelicensesApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$body = new \\Model\\ServerLicensesConfig(); // \\Model\\ServerLicensesConfig | \n\ntry {\n    $api_instance-\nputServerLicensesConfig($serverName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamelicensesApi-\nputServerLicensesConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nbody\n\n\n\\Model\\ServerLicensesConfig\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\nvoid (empty response body)\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]", 
            "title": "VserversserverNamelicensesApi"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamelicensesApi/#wowzaapivserversservernamelicensesapi", 
            "text": "All URIs are relative to  http://localhost:8087/     Method  HTTP request  Description      getServerLicensesConfig  GET  /v2/servers/{serverName}/licenses  Retrieves the list of server Licenses    putServerLicensesConfig  PUT  /v2/servers/{serverName}/licenses  Updates the Server License list", 
            "title": "WowzaApi\\VserversserverNamelicensesApi"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamelicensesApi/#getserverlicensesconfig", 
            "text": "\\Model\\ServerLicensesConfig getServerLicensesConfig($serverName)   Retrieves the list of server Licenses  This API is available in builds 15089 or later.", 
            "title": "getServerLicensesConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamelicensesApi/#example", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamelicensesApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n\ntry {\n    $result = $api_instance- getServerLicensesConfig($serverName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamelicensesApi- getServerLicensesConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamelicensesApi/#parameters", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamelicensesApi/#return-type", 
            "text": "\\Model\\ServerLicensesConfig", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamelicensesApi/#authorization", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamelicensesApi/#http-request-headers", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamelicensesApi/#putserverlicensesconfig", 
            "text": "putServerLicensesConfig($serverName, $body)   Updates the Server License list  This API is available in builds 15089 or later.", 
            "title": "putServerLicensesConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamelicensesApi/#example_1", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamelicensesApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$body = new \\Model\\ServerLicensesConfig(); // \\Model\\ServerLicensesConfig | \n\ntry {\n    $api_instance- putServerLicensesConfig($serverName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamelicensesApi- putServerLicensesConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamelicensesApi/#parameters_1", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     body  \\Model\\ServerLicensesConfig", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamelicensesApi/#return-type_1", 
            "text": "void (empty response body)", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamelicensesApi/#authorization_1", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamelicensesApi/#http-request-headers_1", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamelistenersApi/", 
            "text": "WowzaApi\\VserversserverNamelistenersApi\n\n\nAll URIs are relative to \nhttp://localhost:8087/\n\n\n\n\n\n\n\n\nMethod\n\n\nHTTP request\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\ngetServerListenersConfig\n\n\nGET\n /v2/servers/{serverName}/listeners\n\n\nRetrieves the list of server Listeners\n\n\n\n\n\n\nputServerListenersConfig\n\n\nPUT\n /v2/servers/{serverName}/listeners\n\n\nUpdates the server Listeners list\n\n\n\n\n\n\n\n\ngetServerListenersConfig\n\n\n\n\n\\Model\\ServerListenersConfig getServerListenersConfig($serverName)\n\n\n\n\nRetrieves the list of server Listeners\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamelistenersApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n\ntry {\n    $result = $api_instance-\ngetServerListenersConfig($serverName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamelistenersApi-\ngetServerListenersConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\n\\Model\\ServerListenersConfig\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\nputServerListenersConfig\n\n\n\n\nputServerListenersConfig($serverName, $body)\n\n\n\n\nUpdates the server Listeners list\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamelistenersApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$body = new \\Model\\ServerListenersConfig(); // \\Model\\ServerListenersConfig | \n\ntry {\n    $api_instance-\nputServerListenersConfig($serverName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamelistenersApi-\nputServerListenersConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nbody\n\n\n\\Model\\ServerListenersConfig\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\nvoid (empty response body)\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]", 
            "title": "VserversserverNamelistenersApi"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamelistenersApi/#wowzaapivserversservernamelistenersapi", 
            "text": "All URIs are relative to  http://localhost:8087/     Method  HTTP request  Description      getServerListenersConfig  GET  /v2/servers/{serverName}/listeners  Retrieves the list of server Listeners    putServerListenersConfig  PUT  /v2/servers/{serverName}/listeners  Updates the server Listeners list", 
            "title": "WowzaApi\\VserversserverNamelistenersApi"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamelistenersApi/#getserverlistenersconfig", 
            "text": "\\Model\\ServerListenersConfig getServerListenersConfig($serverName)   Retrieves the list of server Listeners  This API is available in builds 15089 or later.", 
            "title": "getServerListenersConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamelistenersApi/#example", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamelistenersApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n\ntry {\n    $result = $api_instance- getServerListenersConfig($serverName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamelistenersApi- getServerListenersConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamelistenersApi/#parameters", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamelistenersApi/#return-type", 
            "text": "\\Model\\ServerListenersConfig", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamelistenersApi/#authorization", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamelistenersApi/#http-request-headers", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamelistenersApi/#putserverlistenersconfig", 
            "text": "putServerListenersConfig($serverName, $body)   Updates the server Listeners list  This API is available in builds 15089 or later.", 
            "title": "putServerListenersConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamelistenersApi/#example_1", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamelistenersApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$body = new \\Model\\ServerListenersConfig(); // \\Model\\ServerListenersConfig | \n\ntry {\n    $api_instance- putServerListenersConfig($serverName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamelistenersApi- putServerListenersConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamelistenersApi/#parameters_1", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     body  \\Model\\ServerListenersConfig", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamelistenersApi/#return-type_1", 
            "text": "void (empty response body)", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamelistenersApi/#authorization_1", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamelistenersApi/#http-request-headers_1", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamelogjApi/", 
            "text": "WowzaApi\\VserversserverNamelogjApi\n\n\nAll URIs are relative to \nhttp://localhost:8087/\n\n\n\n\n\n\n\n\nMethod\n\n\nHTTP request\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\ngetLog4js\n\n\nGET\n /v2/servers/{serverName}/log4j\n\n\nRetrieves the Server log4j configuration\n\n\n\n\n\n\nputLog4jAction\n\n\nPUT\n /v2/servers/{serverName}/log4j/{loggerName}/actions/{action}\n\n\nTells the specified log4j logger to perform an action\n\n\n\n\n\n\nputLog4jsAction\n\n\nPUT\n /v2/servers/{serverName}/log4j/actions/{action}\n\n\nTells the log4j system to perform an action\n\n\n\n\n\n\n\n\ngetLog4js\n\n\n\n\n\\Model\\Log4js getLog4js($serverName)\n\n\n\n\nRetrieves the Server log4j configuration\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamelogjApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n\ntry {\n    $result = $api_instance-\ngetLog4js($serverName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamelogjApi-\ngetLog4js: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\n\\Model\\Log4js\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\nputLog4jAction\n\n\n\n\nputLog4jAction($serverName, $action, $loggerName)\n\n\n\n\nTells the specified log4j logger to perform an action\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamelogjApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$action = \naction_example\n; // string | The action which should be performed by the server\n$loggerName = \nloggerName_example\n; // string | The logger name needed for this REST call\n\ntry {\n    $api_instance-\nputLog4jAction($serverName, $action, $loggerName);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamelogjApi-\nputLog4jAction: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\naction\n\n\nstring\n\n\nThe action which should be performed by the server\n\n\n\n\n\n\n\n\nloggerName\n\n\nstring\n\n\nThe logger name needed for this REST call\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\nvoid (empty response body)\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\nputLog4jsAction\n\n\n\n\nputLog4jsAction($serverName, $action)\n\n\n\n\nTells the log4j system to perform an action\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamelogjApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$action = \naction_example\n; // string | The action which should be performed by the server\n\ntry {\n    $api_instance-\nputLog4jsAction($serverName, $action);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamelogjApi-\nputLog4jsAction: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\naction\n\n\nstring\n\n\nThe action which should be performed by the server\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\nvoid (empty response body)\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]", 
            "title": "VserversserverNamelogjApi"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamelogjApi/#wowzaapivserversservernamelogjapi", 
            "text": "All URIs are relative to  http://localhost:8087/     Method  HTTP request  Description      getLog4js  GET  /v2/servers/{serverName}/log4j  Retrieves the Server log4j configuration    putLog4jAction  PUT  /v2/servers/{serverName}/log4j/{loggerName}/actions/{action}  Tells the specified log4j logger to perform an action    putLog4jsAction  PUT  /v2/servers/{serverName}/log4j/actions/{action}  Tells the log4j system to perform an action", 
            "title": "WowzaApi\\VserversserverNamelogjApi"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamelogjApi/#getlog4js", 
            "text": "\\Model\\Log4js getLog4js($serverName)   Retrieves the Server log4j configuration  This API is available in builds 15089 or later.", 
            "title": "getLog4js"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamelogjApi/#example", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamelogjApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n\ntry {\n    $result = $api_instance- getLog4js($serverName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamelogjApi- getLog4js: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamelogjApi/#parameters", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamelogjApi/#return-type", 
            "text": "\\Model\\Log4js", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamelogjApi/#authorization", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamelogjApi/#http-request-headers", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamelogjApi/#putlog4jaction", 
            "text": "putLog4jAction($serverName, $action, $loggerName)   Tells the specified log4j logger to perform an action  This API is available in builds 15089 or later.", 
            "title": "putLog4jAction"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamelogjApi/#example_1", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamelogjApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$action =  action_example ; // string | The action which should be performed by the server\n$loggerName =  loggerName_example ; // string | The logger name needed for this REST call\n\ntry {\n    $api_instance- putLog4jAction($serverName, $action, $loggerName);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamelogjApi- putLog4jAction: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamelogjApi/#parameters_1", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     action  string  The action which should be performed by the server     loggerName  string  The logger name needed for this REST call", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamelogjApi/#return-type_1", 
            "text": "void (empty response body)", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamelogjApi/#authorization_1", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamelogjApi/#http-request-headers_1", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamelogjApi/#putlog4jsaction", 
            "text": "putLog4jsAction($serverName, $action)   Tells the log4j system to perform an action  This API is available in builds 15089 or later.", 
            "title": "putLog4jsAction"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamelogjApi/#example_2", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamelogjApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$action =  action_example ; // string | The action which should be performed by the server\n\ntry {\n    $api_instance- putLog4jsAction($serverName, $action);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamelogjApi- putLog4jsAction: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamelogjApi/#parameters_2", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     action  string  The action which should be performed by the server", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamelogjApi/#return-type_2", 
            "text": "void (empty response body)", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamelogjApi/#authorization_2", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamelogjApi/#http-request-headers_2", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/", 
            "text": "WowzaApi\\VserversserverNamemediacacheApi\n\n\nAll URIs are relative to \nhttp://localhost:8087/\n\n\n\n\n\n\n\n\nMethod\n\n\nHTTP request\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\ndeleteMediaCacheSourceConfig\n\n\nDELETE\n /v2/servers/{serverName}/mediacache/sources/{sourceName}\n\n\nDeletes the specified MediaCache Source configuration\n\n\n\n\n\n\ndeleteMediaCacheSourceConfig3\n\n\nDELETE\n /v3/servers/{serverName}/mediacache/sources/{sourceName}\n\n\nDeletes the specified MediaCache Source configuration\n\n\n\n\n\n\ndeleteMediaCacheStoreConfig\n\n\nDELETE\n /v2/servers/{serverName}/mediacache/stores/{storeName}\n\n\nDeletes the specified MediaCache Store configuration\n\n\n\n\n\n\ndeleteMediaCacheStoreConfig3\n\n\nDELETE\n /v3/servers/{serverName}/mediacache/stores/{storeName}\n\n\nDeletes the specified MediaCache Store configuration\n\n\n\n\n\n\ngetMediaCacheConfig\n\n\nGET\n /v2/servers/{serverName}/mediacache\n\n\nRetrieves the server MediaCache configuration\n\n\n\n\n\n\ngetMediaCacheConfig3\n\n\nGET\n /v3/servers/{serverName}/mediacache\n\n\nRetrieves the server MediaCache configuration\n\n\n\n\n\n\ngetMediaCacheConfigAdv\n\n\nGET\n /v2/servers/{serverName}/mediacache/adv\n\n\nRetrieves the advanced MediaCache configuration\n\n\n\n\n\n\ngetMediaCacheSourceConfig\n\n\nGET\n /v2/servers/{serverName}/mediacache/sources/{sourceName}\n\n\nRetrieves the specified MediaCache Source configuration\n\n\n\n\n\n\ngetMediaCacheSourceConfig3\n\n\nGET\n /v3/servers/{serverName}/mediacache/sources/{sourceName}\n\n\nRetrieves the specified MediaCache Source configuration\n\n\n\n\n\n\ngetMediaCacheSourceConfigAdv\n\n\nGET\n /v2/servers/{serverName}/mediacache/sources/{sourceName}/adv\n\n\nRetrieves the specified advanced MediaCache Source configuration\n\n\n\n\n\n\ngetMediaCacheSourceConfigAdv3\n\n\nGET\n /v3/servers/{serverName}/mediacache/sources/{sourceName}/adv\n\n\nRetrieves the specified advanced MediaCache Source configuration\n\n\n\n\n\n\ngetMediaCacheSourcesConfig\n\n\nGET\n /v2/servers/{serverName}/mediacache/sources\n\n\nRetrieves the list of MediaCache Sources\n\n\n\n\n\n\ngetMediaCacheSourcesConfig3\n\n\nGET\n /v3/servers/{serverName}/mediacache/sources\n\n\nRetrieves the list of MediaCache Sources\n\n\n\n\n\n\ngetMediaCacheStoreConfig\n\n\nGET\n /v2/servers/{serverName}/mediacache/stores/{storeName}\n\n\nRetrieves the specified MediaCache Store configuration\n\n\n\n\n\n\ngetMediaCacheStoreConfig3\n\n\nGET\n /v3/servers/{serverName}/mediacache/stores/{storeName}\n\n\nRetrieves the specified MediaCache Store configuration\n\n\n\n\n\n\ngetMediaCacheStoreConfigAdv\n\n\nGET\n /v2/servers/{serverName}/mediacache/stores/{storeName}/adv\n\n\nRetrieves the specified advanced MediaCache Store configuration\n\n\n\n\n\n\ngetMediaCacheStoresConfig\n\n\nGET\n /v2/servers/{serverName}/mediacache/stores\n\n\nRetrieves the list of MediaCache Stores\n\n\n\n\n\n\ngetMediaCacheStoresConfig3\n\n\nGET\n /v3/servers/{serverName}/mediacache/stores\n\n\nRetrieves the list of MediaCache Stores\n\n\n\n\n\n\npostMediaCacheConfigAdv\n\n\nPOST\n /v2/servers/{serverName}/mediacache/adv\n\n\nAdds an advanced MediaCache configuration\n\n\n\n\n\n\npostMediaCacheSourceConfig\n\n\nPOST\n /v2/servers/{serverName}/mediacache/sources/{sourceName}\n\n\nAdds the specified MediaCache Source configuration\n\n\n\n\n\n\npostMediaCacheSourceConfig3\n\n\nPOST\n /v3/servers/{serverName}/mediacache/sources/{sourceName}\n\n\nAdds the specified MediaCache Source configuration\n\n\n\n\n\n\npostMediaCacheSourceConfigAdv\n\n\nPOST\n /v2/servers/{serverName}/mediacache/sources/{sourceName}/adv\n\n\nAdds the specified advanced MediaCache Source configuration\n\n\n\n\n\n\npostMediaCacheSourceConfigAdv3\n\n\nPOST\n /v3/servers/{serverName}/mediacache/sources/{sourceName}/adv\n\n\nAdds the specified advanced MediaCache Source configuration\n\n\n\n\n\n\npostMediaCacheSourcesConfig\n\n\nPOST\n /v2/servers/{serverName}/mediacache/sources\n\n\nAdds the specified MediaCache Source to the list\n\n\n\n\n\n\npostMediaCacheSourcesConfig3\n\n\nPOST\n /v3/servers/{serverName}/mediacache/sources\n\n\nAdds the specified MediaCache Source to the list\n\n\n\n\n\n\npostMediaCacheStoreConfig\n\n\nPOST\n /v2/servers/{serverName}/mediacache/stores/{storeName}\n\n\nAdds the specified MediaCache Store configuration\n\n\n\n\n\n\npostMediaCacheStoreConfig3\n\n\nPOST\n /v3/servers/{serverName}/mediacache/stores/{storeName}\n\n\nAdds the specified MediaCache Store configuration\n\n\n\n\n\n\npostMediaCacheStoreConfigAdv\n\n\nPOST\n /v2/servers/{serverName}/mediacache/stores/{storeName}/adv\n\n\nAdds the specified advanced MediaCache Store configuration\n\n\n\n\n\n\npostMediaCacheStoresConfig\n\n\nPOST\n /v2/servers/{serverName}/mediacache/stores\n\n\nAdds the specified MediaCache Store to the list\n\n\n\n\n\n\npostMediaCacheStoresConfig3\n\n\nPOST\n /v3/servers/{serverName}/mediacache/stores\n\n\nAdds the specified MediaCache Store to the list\n\n\n\n\n\n\nputMediaCacheConfig\n\n\nPUT\n /v2/servers/{serverName}/mediacache\n\n\nUpdates the server MediaCache configuration\n\n\n\n\n\n\nputMediaCacheConfig3\n\n\nPUT\n /v3/servers/{serverName}/mediacache\n\n\nUpdates the server MediaCache configuration\n\n\n\n\n\n\nputMediaCacheConfigAdv\n\n\nPUT\n /v2/servers/{serverName}/mediacache/adv\n\n\nUpdates the advanced MediaCache configuration\n\n\n\n\n\n\nputMediaCacheSourceConfig\n\n\nPUT\n /v2/servers/{serverName}/mediacache/sources/{sourceName}\n\n\nUpdates the specified MediaCache Source configuration\n\n\n\n\n\n\nputMediaCacheSourceConfig3\n\n\nPUT\n /v3/servers/{serverName}/mediacache/sources/{sourceName}\n\n\nUpdates the specified MediaCache Source configuration\n\n\n\n\n\n\nputMediaCacheSourceConfigAdv\n\n\nPUT\n /v2/servers/{serverName}/mediacache/sources/{sourceName}/adv\n\n\nUpdates the specified advanced MediaCache Source configuration\n\n\n\n\n\n\nputMediaCacheSourceConfigAdv3\n\n\nPUT\n /v3/servers/{serverName}/mediacache/sources/{sourceName}/adv\n\n\nUpdates the specified advanced MediaCache Source configuration\n\n\n\n\n\n\nputMediaCacheStoreConfig\n\n\nPUT\n /v2/servers/{serverName}/mediacache/stores/{storeName}\n\n\nUpdates the specified MediaCache Store configuration\n\n\n\n\n\n\nputMediaCacheStoreConfig3\n\n\nPUT\n /v3/servers/{serverName}/mediacache/stores/{storeName}\n\n\nUpdates the specified MediaCache Store configuration\n\n\n\n\n\n\nputMediaCacheStoreConfigAdv\n\n\nPUT\n /v2/servers/{serverName}/mediacache/stores/{storeName}/adv\n\n\nUpdates the specified advanced MediaCache Store configuration\n\n\n\n\n\n\n\n\ndeleteMediaCacheSourceConfig\n\n\n\n\ndeleteMediaCacheSourceConfig($serverName)\n\n\n\n\nDeletes the specified MediaCache Source configuration\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamemediacacheApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n\ntry {\n    $api_instance-\ndeleteMediaCacheSourceConfig($serverName);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamemediacacheApi-\ndeleteMediaCacheSourceConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\nvoid (empty response body)\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\ndeleteMediaCacheSourceConfig3\n\n\n\n\ndeleteMediaCacheSourceConfig3($serverName, $sourceName)\n\n\n\n\nDeletes the specified MediaCache Source configuration\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamemediacacheApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$sourceName = \nsourceName_example\n; // string | \n\ntry {\n    $api_instance-\ndeleteMediaCacheSourceConfig3($serverName, $sourceName);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamemediacacheApi-\ndeleteMediaCacheSourceConfig3: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nsourceName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\nvoid (empty response body)\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\ndeleteMediaCacheStoreConfig\n\n\n\n\ndeleteMediaCacheStoreConfig($serverName)\n\n\n\n\nDeletes the specified MediaCache Store configuration\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamemediacacheApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n\ntry {\n    $api_instance-\ndeleteMediaCacheStoreConfig($serverName);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamemediacacheApi-\ndeleteMediaCacheStoreConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\nvoid (empty response body)\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\ndeleteMediaCacheStoreConfig3\n\n\n\n\ndeleteMediaCacheStoreConfig3($serverName, $storeName)\n\n\n\n\nDeletes the specified MediaCache Store configuration\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamemediacacheApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$storeName = \nstoreName_example\n; // string | \n\ntry {\n    $api_instance-\ndeleteMediaCacheStoreConfig3($serverName, $storeName);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamemediacacheApi-\ndeleteMediaCacheStoreConfig3: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nstoreName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\nvoid (empty response body)\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\ngetMediaCacheConfig\n\n\n\n\n\\Model\\MediaCacheConfig getMediaCacheConfig($serverName)\n\n\n\n\nRetrieves the server MediaCache configuration\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamemediacacheApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n\ntry {\n    $result = $api_instance-\ngetMediaCacheConfig($serverName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamemediacacheApi-\ngetMediaCacheConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\n\\Model\\MediaCacheConfig\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\ngetMediaCacheConfig3\n\n\n\n\n\\Model\\MediaCacheConfig3 getMediaCacheConfig3($serverName)\n\n\n\n\nRetrieves the server MediaCache configuration\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamemediacacheApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n\ntry {\n    $result = $api_instance-\ngetMediaCacheConfig3($serverName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamemediacacheApi-\ngetMediaCacheConfig3: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\n\\Model\\MediaCacheConfig3\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\ngetMediaCacheConfigAdv\n\n\n\n\n\\Model\\MediaCacheConfigAdv getMediaCacheConfigAdv($serverName)\n\n\n\n\nRetrieves the advanced MediaCache configuration\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamemediacacheApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n\ntry {\n    $result = $api_instance-\ngetMediaCacheConfigAdv($serverName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamemediacacheApi-\ngetMediaCacheConfigAdv: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\n\\Model\\MediaCacheConfigAdv\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\ngetMediaCacheSourceConfig\n\n\n\n\n\\Model\\MediaCacheSourceConfig getMediaCacheSourceConfig($serverName)\n\n\n\n\nRetrieves the specified MediaCache Source configuration\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamemediacacheApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n\ntry {\n    $result = $api_instance-\ngetMediaCacheSourceConfig($serverName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamemediacacheApi-\ngetMediaCacheSourceConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\n\\Model\\MediaCacheSourceConfig\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\ngetMediaCacheSourceConfig3\n\n\n\n\n\\Model\\MediaCacheSourceConfig3 getMediaCacheSourceConfig3($serverName, $sourceName)\n\n\n\n\nRetrieves the specified MediaCache Source configuration\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamemediacacheApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$sourceName = \nsourceName_example\n; // string | \n\ntry {\n    $result = $api_instance-\ngetMediaCacheSourceConfig3($serverName, $sourceName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamemediacacheApi-\ngetMediaCacheSourceConfig3: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nsourceName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\n\\Model\\MediaCacheSourceConfig3\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\ngetMediaCacheSourceConfigAdv\n\n\n\n\n\\Model\\MediaCacheSourceConfigAdv getMediaCacheSourceConfigAdv($serverName, $sourceName)\n\n\n\n\nRetrieves the specified advanced MediaCache Source configuration\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamemediacacheApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$sourceName = \nsourceName_example\n; // string | \n\ntry {\n    $result = $api_instance-\ngetMediaCacheSourceConfigAdv($serverName, $sourceName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamemediacacheApi-\ngetMediaCacheSourceConfigAdv: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nsourceName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\n\\Model\\MediaCacheSourceConfigAdv\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\ngetMediaCacheSourceConfigAdv3\n\n\n\n\n\\Model\\MediaCacheSourceConfigAdv3 getMediaCacheSourceConfigAdv3($serverName, $sourceName)\n\n\n\n\nRetrieves the specified advanced MediaCache Source configuration\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamemediacacheApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$sourceName = \nsourceName_example\n; // string | \n\ntry {\n    $result = $api_instance-\ngetMediaCacheSourceConfigAdv3($serverName, $sourceName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamemediacacheApi-\ngetMediaCacheSourceConfigAdv3: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nsourceName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\n\\Model\\MediaCacheSourceConfigAdv3\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\ngetMediaCacheSourcesConfig\n\n\n\n\n\\Model\\MediaCacheSourcesConfig getMediaCacheSourcesConfig($serverName)\n\n\n\n\nRetrieves the list of MediaCache Sources\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamemediacacheApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n\ntry {\n    $result = $api_instance-\ngetMediaCacheSourcesConfig($serverName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamemediacacheApi-\ngetMediaCacheSourcesConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\n\\Model\\MediaCacheSourcesConfig\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\ngetMediaCacheSourcesConfig3\n\n\n\n\n\\Model\\MediaCacheSourcesConfig3 getMediaCacheSourcesConfig3($serverName)\n\n\n\n\nRetrieves the list of MediaCache Sources\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamemediacacheApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n\ntry {\n    $result = $api_instance-\ngetMediaCacheSourcesConfig3($serverName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamemediacacheApi-\ngetMediaCacheSourcesConfig3: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\n\\Model\\MediaCacheSourcesConfig3\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\ngetMediaCacheStoreConfig\n\n\n\n\n\\Model\\MediaCacheStoreConfig getMediaCacheStoreConfig($serverName)\n\n\n\n\nRetrieves the specified MediaCache Store configuration\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamemediacacheApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n\ntry {\n    $result = $api_instance-\ngetMediaCacheStoreConfig($serverName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamemediacacheApi-\ngetMediaCacheStoreConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\n\\Model\\MediaCacheStoreConfig\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\ngetMediaCacheStoreConfig3\n\n\n\n\n\\Model\\MediaCacheStoreConfig3 getMediaCacheStoreConfig3($serverName, $storeName)\n\n\n\n\nRetrieves the specified MediaCache Store configuration\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamemediacacheApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$storeName = \nstoreName_example\n; // string | \n\ntry {\n    $result = $api_instance-\ngetMediaCacheStoreConfig3($serverName, $storeName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamemediacacheApi-\ngetMediaCacheStoreConfig3: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nstoreName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\n\\Model\\MediaCacheStoreConfig3\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\ngetMediaCacheStoreConfigAdv\n\n\n\n\n\\Model\\MediaCacheStoreConfigAdv getMediaCacheStoreConfigAdv($serverName, $storeName)\n\n\n\n\nRetrieves the specified advanced MediaCache Store configuration\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamemediacacheApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$storeName = \nstoreName_example\n; // string | \n\ntry {\n    $result = $api_instance-\ngetMediaCacheStoreConfigAdv($serverName, $storeName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamemediacacheApi-\ngetMediaCacheStoreConfigAdv: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nstoreName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\n\\Model\\MediaCacheStoreConfigAdv\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\ngetMediaCacheStoresConfig\n\n\n\n\n\\Model\\MediaCacheStoresConfig getMediaCacheStoresConfig($serverName)\n\n\n\n\nRetrieves the list of MediaCache Stores\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamemediacacheApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n\ntry {\n    $result = $api_instance-\ngetMediaCacheStoresConfig($serverName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamemediacacheApi-\ngetMediaCacheStoresConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\n\\Model\\MediaCacheStoresConfig\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\ngetMediaCacheStoresConfig3\n\n\n\n\n\\Model\\MediaCacheStoresConfig3 getMediaCacheStoresConfig3($serverName)\n\n\n\n\nRetrieves the list of MediaCache Stores\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamemediacacheApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n\ntry {\n    $result = $api_instance-\ngetMediaCacheStoresConfig3($serverName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamemediacacheApi-\ngetMediaCacheStoresConfig3: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\n\\Model\\MediaCacheStoresConfig3\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\npostMediaCacheConfigAdv\n\n\n\n\npostMediaCacheConfigAdv($serverName, $body)\n\n\n\n\nAdds an advanced MediaCache configuration\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamemediacacheApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$body = new \\Model\\MediaCacheConfigAdv(); // \\Model\\MediaCacheConfigAdv | \n\ntry {\n    $api_instance-\npostMediaCacheConfigAdv($serverName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamemediacacheApi-\npostMediaCacheConfigAdv: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nbody\n\n\n\\Model\\MediaCacheConfigAdv\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\nvoid (empty response body)\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\npostMediaCacheSourceConfig\n\n\n\n\npostMediaCacheSourceConfig($serverName, $body)\n\n\n\n\nAdds the specified MediaCache Source configuration\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamemediacacheApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$body = new \\Model\\MediaCacheSourceConfig(); // \\Model\\MediaCacheSourceConfig | \n\ntry {\n    $api_instance-\npostMediaCacheSourceConfig($serverName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamemediacacheApi-\npostMediaCacheSourceConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nbody\n\n\n\\Model\\MediaCacheSourceConfig\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\nvoid (empty response body)\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\npostMediaCacheSourceConfig3\n\n\n\n\npostMediaCacheSourceConfig3($serverName, $sourceName, $body)\n\n\n\n\nAdds the specified MediaCache Source configuration\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamemediacacheApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$sourceName = \nsourceName_example\n; // string | \n$body = new \\Model\\MediaCacheSourceConfig3(); // \\Model\\MediaCacheSourceConfig3 | \n\ntry {\n    $api_instance-\npostMediaCacheSourceConfig3($serverName, $sourceName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamemediacacheApi-\npostMediaCacheSourceConfig3: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nsourceName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nbody\n\n\n\\Model\\MediaCacheSourceConfig3\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\nvoid (empty response body)\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\npostMediaCacheSourceConfigAdv\n\n\n\n\npostMediaCacheSourceConfigAdv($serverName, $sourceName, $body)\n\n\n\n\nAdds the specified advanced MediaCache Source configuration\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamemediacacheApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$sourceName = \nsourceName_example\n; // string | \n$body = new \\Model\\MediaCacheSourceConfigAdv(); // \\Model\\MediaCacheSourceConfigAdv | \n\ntry {\n    $api_instance-\npostMediaCacheSourceConfigAdv($serverName, $sourceName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamemediacacheApi-\npostMediaCacheSourceConfigAdv: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nsourceName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nbody\n\n\n\\Model\\MediaCacheSourceConfigAdv\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\nvoid (empty response body)\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\npostMediaCacheSourceConfigAdv3\n\n\n\n\npostMediaCacheSourceConfigAdv3($serverName, $sourceName, $body)\n\n\n\n\nAdds the specified advanced MediaCache Source configuration\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamemediacacheApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$sourceName = \nsourceName_example\n; // string | \n$body = new \\Model\\MediaCacheSourceConfigAdv3(); // \\Model\\MediaCacheSourceConfigAdv3 | \n\ntry {\n    $api_instance-\npostMediaCacheSourceConfigAdv3($serverName, $sourceName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamemediacacheApi-\npostMediaCacheSourceConfigAdv3: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nsourceName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nbody\n\n\n\\Model\\MediaCacheSourceConfigAdv3\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\nvoid (empty response body)\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\npostMediaCacheSourcesConfig\n\n\n\n\npostMediaCacheSourcesConfig($serverName, $body)\n\n\n\n\nAdds the specified MediaCache Source to the list\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamemediacacheApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$body = new \\Model\\MediaCacheSourceConfig(); // \\Model\\MediaCacheSourceConfig | \n\ntry {\n    $api_instance-\npostMediaCacheSourcesConfig($serverName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamemediacacheApi-\npostMediaCacheSourcesConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nbody\n\n\n\\Model\\MediaCacheSourceConfig\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\nvoid (empty response body)\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\npostMediaCacheSourcesConfig3\n\n\n\n\npostMediaCacheSourcesConfig3($serverName, $body)\n\n\n\n\nAdds the specified MediaCache Source to the list\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamemediacacheApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$body = new \\Model\\MediaCacheSourceConfig(); // \\Model\\MediaCacheSourceConfig | \n\ntry {\n    $api_instance-\npostMediaCacheSourcesConfig3($serverName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamemediacacheApi-\npostMediaCacheSourcesConfig3: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nbody\n\n\n\\Model\\MediaCacheSourceConfig\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\nvoid (empty response body)\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\npostMediaCacheStoreConfig\n\n\n\n\npostMediaCacheStoreConfig($serverName, $body)\n\n\n\n\nAdds the specified MediaCache Store configuration\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamemediacacheApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$body = new \\Model\\MediaCacheStoreConfig(); // \\Model\\MediaCacheStoreConfig | \n\ntry {\n    $api_instance-\npostMediaCacheStoreConfig($serverName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamemediacacheApi-\npostMediaCacheStoreConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nbody\n\n\n\\Model\\MediaCacheStoreConfig\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\nvoid (empty response body)\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\npostMediaCacheStoreConfig3\n\n\n\n\npostMediaCacheStoreConfig3($serverName, $storeName, $body)\n\n\n\n\nAdds the specified MediaCache Store configuration\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamemediacacheApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$storeName = \nstoreName_example\n; // string | \n$body = new \\Model\\MediaCacheStoreConfig3(); // \\Model\\MediaCacheStoreConfig3 | \n\ntry {\n    $api_instance-\npostMediaCacheStoreConfig3($serverName, $storeName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamemediacacheApi-\npostMediaCacheStoreConfig3: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nstoreName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nbody\n\n\n\\Model\\MediaCacheStoreConfig3\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\nvoid (empty response body)\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\npostMediaCacheStoreConfigAdv\n\n\n\n\npostMediaCacheStoreConfigAdv($serverName, $storeName, $body)\n\n\n\n\nAdds the specified advanced MediaCache Store configuration\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamemediacacheApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$storeName = \nstoreName_example\n; // string | \n$body = new \\Model\\MediaCacheStoreConfigAdv(); // \\Model\\MediaCacheStoreConfigAdv | \n\ntry {\n    $api_instance-\npostMediaCacheStoreConfigAdv($serverName, $storeName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamemediacacheApi-\npostMediaCacheStoreConfigAdv: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nstoreName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nbody\n\n\n\\Model\\MediaCacheStoreConfigAdv\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\nvoid (empty response body)\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\npostMediaCacheStoresConfig\n\n\n\n\npostMediaCacheStoresConfig($serverName, $body)\n\n\n\n\nAdds the specified MediaCache Store to the list\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamemediacacheApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$body = new \\Model\\MediaCacheStoreConfig(); // \\Model\\MediaCacheStoreConfig | \n\ntry {\n    $api_instance-\npostMediaCacheStoresConfig($serverName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamemediacacheApi-\npostMediaCacheStoresConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nbody\n\n\n\\Model\\MediaCacheStoreConfig\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\nvoid (empty response body)\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\npostMediaCacheStoresConfig3\n\n\n\n\npostMediaCacheStoresConfig3($serverName, $body)\n\n\n\n\nAdds the specified MediaCache Store to the list\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamemediacacheApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$body = new \\Model\\MediaCacheStoreConfig(); // \\Model\\MediaCacheStoreConfig | \n\ntry {\n    $api_instance-\npostMediaCacheStoresConfig3($serverName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamemediacacheApi-\npostMediaCacheStoresConfig3: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nbody\n\n\n\\Model\\MediaCacheStoreConfig\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\nvoid (empty response body)\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\nputMediaCacheConfig\n\n\n\n\nputMediaCacheConfig($serverName, $body)\n\n\n\n\nUpdates the server MediaCache configuration\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamemediacacheApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$body = new \\Model\\MediaCacheConfig(); // \\Model\\MediaCacheConfig | \n\ntry {\n    $api_instance-\nputMediaCacheConfig($serverName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamemediacacheApi-\nputMediaCacheConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nbody\n\n\n\\Model\\MediaCacheConfig\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\nvoid (empty response body)\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\nputMediaCacheConfig3\n\n\n\n\nputMediaCacheConfig3($serverName, $body)\n\n\n\n\nUpdates the server MediaCache configuration\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamemediacacheApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$body = new \\Model\\MediaCacheConfig3(); // \\Model\\MediaCacheConfig3 | \n\ntry {\n    $api_instance-\nputMediaCacheConfig3($serverName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamemediacacheApi-\nputMediaCacheConfig3: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nbody\n\n\n\\Model\\MediaCacheConfig3\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\nvoid (empty response body)\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\nputMediaCacheConfigAdv\n\n\n\n\nputMediaCacheConfigAdv($serverName, $body)\n\n\n\n\nUpdates the advanced MediaCache configuration\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamemediacacheApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$body = new \\Model\\MediaCacheConfigAdv(); // \\Model\\MediaCacheConfigAdv | \n\ntry {\n    $api_instance-\nputMediaCacheConfigAdv($serverName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamemediacacheApi-\nputMediaCacheConfigAdv: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nbody\n\n\n\\Model\\MediaCacheConfigAdv\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\nvoid (empty response body)\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\nputMediaCacheSourceConfig\n\n\n\n\nputMediaCacheSourceConfig($serverName, $body)\n\n\n\n\nUpdates the specified MediaCache Source configuration\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamemediacacheApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$body = new \\Model\\MediaCacheSourceConfig(); // \\Model\\MediaCacheSourceConfig | \n\ntry {\n    $api_instance-\nputMediaCacheSourceConfig($serverName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamemediacacheApi-\nputMediaCacheSourceConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nbody\n\n\n\\Model\\MediaCacheSourceConfig\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\nvoid (empty response body)\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\nputMediaCacheSourceConfig3\n\n\n\n\nputMediaCacheSourceConfig3($serverName, $sourceName, $body)\n\n\n\n\nUpdates the specified MediaCache Source configuration\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamemediacacheApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$sourceName = \nsourceName_example\n; // string | \n$body = new \\Model\\MediaCacheSourceConfig3(); // \\Model\\MediaCacheSourceConfig3 | \n\ntry {\n    $api_instance-\nputMediaCacheSourceConfig3($serverName, $sourceName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamemediacacheApi-\nputMediaCacheSourceConfig3: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nsourceName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nbody\n\n\n\\Model\\MediaCacheSourceConfig3\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\nvoid (empty response body)\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\nputMediaCacheSourceConfigAdv\n\n\n\n\nputMediaCacheSourceConfigAdv($serverName, $sourceName, $body)\n\n\n\n\nUpdates the specified advanced MediaCache Source configuration\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamemediacacheApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$sourceName = \nsourceName_example\n; // string | \n$body = new \\Model\\MediaCacheSourceConfigAdv(); // \\Model\\MediaCacheSourceConfigAdv | \n\ntry {\n    $api_instance-\nputMediaCacheSourceConfigAdv($serverName, $sourceName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamemediacacheApi-\nputMediaCacheSourceConfigAdv: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nsourceName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nbody\n\n\n\\Model\\MediaCacheSourceConfigAdv\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\nvoid (empty response body)\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\nputMediaCacheSourceConfigAdv3\n\n\n\n\nputMediaCacheSourceConfigAdv3($serverName, $sourceName, $body)\n\n\n\n\nUpdates the specified advanced MediaCache Source configuration\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamemediacacheApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$sourceName = \nsourceName_example\n; // string | \n$body = new \\Model\\MediaCacheSourceConfigAdv3(); // \\Model\\MediaCacheSourceConfigAdv3 | \n\ntry {\n    $api_instance-\nputMediaCacheSourceConfigAdv3($serverName, $sourceName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamemediacacheApi-\nputMediaCacheSourceConfigAdv3: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nsourceName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nbody\n\n\n\\Model\\MediaCacheSourceConfigAdv3\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\nvoid (empty response body)\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\nputMediaCacheStoreConfig\n\n\n\n\nputMediaCacheStoreConfig($serverName, $body)\n\n\n\n\nUpdates the specified MediaCache Store configuration\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamemediacacheApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$body = new \\Model\\MediaCacheStoreConfig(); // \\Model\\MediaCacheStoreConfig | \n\ntry {\n    $api_instance-\nputMediaCacheStoreConfig($serverName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamemediacacheApi-\nputMediaCacheStoreConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nbody\n\n\n\\Model\\MediaCacheStoreConfig\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\nvoid (empty response body)\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\nputMediaCacheStoreConfig3\n\n\n\n\nputMediaCacheStoreConfig3($serverName, $storeName, $body)\n\n\n\n\nUpdates the specified MediaCache Store configuration\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamemediacacheApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$storeName = \nstoreName_example\n; // string | \n$body = new \\Model\\MediaCacheStoreConfig3(); // \\Model\\MediaCacheStoreConfig3 | \n\ntry {\n    $api_instance-\nputMediaCacheStoreConfig3($serverName, $storeName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamemediacacheApi-\nputMediaCacheStoreConfig3: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nstoreName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nbody\n\n\n\\Model\\MediaCacheStoreConfig3\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\nvoid (empty response body)\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\nputMediaCacheStoreConfigAdv\n\n\n\n\nputMediaCacheStoreConfigAdv($serverName, $storeName, $body)\n\n\n\n\nUpdates the specified advanced MediaCache Store configuration\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamemediacacheApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$storeName = \nstoreName_example\n; // string | \n$body = new \\Model\\MediaCacheStoreConfigAdv(); // \\Model\\MediaCacheStoreConfigAdv | \n\ntry {\n    $api_instance-\nputMediaCacheStoreConfigAdv($serverName, $storeName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamemediacacheApi-\nputMediaCacheStoreConfigAdv: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nstoreName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nbody\n\n\n\\Model\\MediaCacheStoreConfigAdv\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\nvoid (empty response body)\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]", 
            "title": "VserversserverNamemediacacheApi"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#wowzaapivserversservernamemediacacheapi", 
            "text": "All URIs are relative to  http://localhost:8087/     Method  HTTP request  Description      deleteMediaCacheSourceConfig  DELETE  /v2/servers/{serverName}/mediacache/sources/{sourceName}  Deletes the specified MediaCache Source configuration    deleteMediaCacheSourceConfig3  DELETE  /v3/servers/{serverName}/mediacache/sources/{sourceName}  Deletes the specified MediaCache Source configuration    deleteMediaCacheStoreConfig  DELETE  /v2/servers/{serverName}/mediacache/stores/{storeName}  Deletes the specified MediaCache Store configuration    deleteMediaCacheStoreConfig3  DELETE  /v3/servers/{serverName}/mediacache/stores/{storeName}  Deletes the specified MediaCache Store configuration    getMediaCacheConfig  GET  /v2/servers/{serverName}/mediacache  Retrieves the server MediaCache configuration    getMediaCacheConfig3  GET  /v3/servers/{serverName}/mediacache  Retrieves the server MediaCache configuration    getMediaCacheConfigAdv  GET  /v2/servers/{serverName}/mediacache/adv  Retrieves the advanced MediaCache configuration    getMediaCacheSourceConfig  GET  /v2/servers/{serverName}/mediacache/sources/{sourceName}  Retrieves the specified MediaCache Source configuration    getMediaCacheSourceConfig3  GET  /v3/servers/{serverName}/mediacache/sources/{sourceName}  Retrieves the specified MediaCache Source configuration    getMediaCacheSourceConfigAdv  GET  /v2/servers/{serverName}/mediacache/sources/{sourceName}/adv  Retrieves the specified advanced MediaCache Source configuration    getMediaCacheSourceConfigAdv3  GET  /v3/servers/{serverName}/mediacache/sources/{sourceName}/adv  Retrieves the specified advanced MediaCache Source configuration    getMediaCacheSourcesConfig  GET  /v2/servers/{serverName}/mediacache/sources  Retrieves the list of MediaCache Sources    getMediaCacheSourcesConfig3  GET  /v3/servers/{serverName}/mediacache/sources  Retrieves the list of MediaCache Sources    getMediaCacheStoreConfig  GET  /v2/servers/{serverName}/mediacache/stores/{storeName}  Retrieves the specified MediaCache Store configuration    getMediaCacheStoreConfig3  GET  /v3/servers/{serverName}/mediacache/stores/{storeName}  Retrieves the specified MediaCache Store configuration    getMediaCacheStoreConfigAdv  GET  /v2/servers/{serverName}/mediacache/stores/{storeName}/adv  Retrieves the specified advanced MediaCache Store configuration    getMediaCacheStoresConfig  GET  /v2/servers/{serverName}/mediacache/stores  Retrieves the list of MediaCache Stores    getMediaCacheStoresConfig3  GET  /v3/servers/{serverName}/mediacache/stores  Retrieves the list of MediaCache Stores    postMediaCacheConfigAdv  POST  /v2/servers/{serverName}/mediacache/adv  Adds an advanced MediaCache configuration    postMediaCacheSourceConfig  POST  /v2/servers/{serverName}/mediacache/sources/{sourceName}  Adds the specified MediaCache Source configuration    postMediaCacheSourceConfig3  POST  /v3/servers/{serverName}/mediacache/sources/{sourceName}  Adds the specified MediaCache Source configuration    postMediaCacheSourceConfigAdv  POST  /v2/servers/{serverName}/mediacache/sources/{sourceName}/adv  Adds the specified advanced MediaCache Source configuration    postMediaCacheSourceConfigAdv3  POST  /v3/servers/{serverName}/mediacache/sources/{sourceName}/adv  Adds the specified advanced MediaCache Source configuration    postMediaCacheSourcesConfig  POST  /v2/servers/{serverName}/mediacache/sources  Adds the specified MediaCache Source to the list    postMediaCacheSourcesConfig3  POST  /v3/servers/{serverName}/mediacache/sources  Adds the specified MediaCache Source to the list    postMediaCacheStoreConfig  POST  /v2/servers/{serverName}/mediacache/stores/{storeName}  Adds the specified MediaCache Store configuration    postMediaCacheStoreConfig3  POST  /v3/servers/{serverName}/mediacache/stores/{storeName}  Adds the specified MediaCache Store configuration    postMediaCacheStoreConfigAdv  POST  /v2/servers/{serverName}/mediacache/stores/{storeName}/adv  Adds the specified advanced MediaCache Store configuration    postMediaCacheStoresConfig  POST  /v2/servers/{serverName}/mediacache/stores  Adds the specified MediaCache Store to the list    postMediaCacheStoresConfig3  POST  /v3/servers/{serverName}/mediacache/stores  Adds the specified MediaCache Store to the list    putMediaCacheConfig  PUT  /v2/servers/{serverName}/mediacache  Updates the server MediaCache configuration    putMediaCacheConfig3  PUT  /v3/servers/{serverName}/mediacache  Updates the server MediaCache configuration    putMediaCacheConfigAdv  PUT  /v2/servers/{serverName}/mediacache/adv  Updates the advanced MediaCache configuration    putMediaCacheSourceConfig  PUT  /v2/servers/{serverName}/mediacache/sources/{sourceName}  Updates the specified MediaCache Source configuration    putMediaCacheSourceConfig3  PUT  /v3/servers/{serverName}/mediacache/sources/{sourceName}  Updates the specified MediaCache Source configuration    putMediaCacheSourceConfigAdv  PUT  /v2/servers/{serverName}/mediacache/sources/{sourceName}/adv  Updates the specified advanced MediaCache Source configuration    putMediaCacheSourceConfigAdv3  PUT  /v3/servers/{serverName}/mediacache/sources/{sourceName}/adv  Updates the specified advanced MediaCache Source configuration    putMediaCacheStoreConfig  PUT  /v2/servers/{serverName}/mediacache/stores/{storeName}  Updates the specified MediaCache Store configuration    putMediaCacheStoreConfig3  PUT  /v3/servers/{serverName}/mediacache/stores/{storeName}  Updates the specified MediaCache Store configuration    putMediaCacheStoreConfigAdv  PUT  /v2/servers/{serverName}/mediacache/stores/{storeName}/adv  Updates the specified advanced MediaCache Store configuration", 
            "title": "WowzaApi\\VserversserverNamemediacacheApi"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#deletemediacachesourceconfig", 
            "text": "deleteMediaCacheSourceConfig($serverName)   Deletes the specified MediaCache Source configuration  This API is available in builds 15089 or later.", 
            "title": "deleteMediaCacheSourceConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#example", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamemediacacheApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n\ntry {\n    $api_instance- deleteMediaCacheSourceConfig($serverName);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamemediacacheApi- deleteMediaCacheSourceConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#parameters", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#return-type", 
            "text": "void (empty response body)", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#authorization", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#http-request-headers", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#deletemediacachesourceconfig3", 
            "text": "deleteMediaCacheSourceConfig3($serverName, $sourceName)   Deletes the specified MediaCache Source configuration  This API is available in builds 15089 or later.", 
            "title": "deleteMediaCacheSourceConfig3"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#example_1", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamemediacacheApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$sourceName =  sourceName_example ; // string | \n\ntry {\n    $api_instance- deleteMediaCacheSourceConfig3($serverName, $sourceName);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamemediacacheApi- deleteMediaCacheSourceConfig3: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#parameters_1", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     sourceName  string", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#return-type_1", 
            "text": "void (empty response body)", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#authorization_1", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#http-request-headers_1", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#deletemediacachestoreconfig", 
            "text": "deleteMediaCacheStoreConfig($serverName)   Deletes the specified MediaCache Store configuration  This API is available in builds 15089 or later.", 
            "title": "deleteMediaCacheStoreConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#example_2", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamemediacacheApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n\ntry {\n    $api_instance- deleteMediaCacheStoreConfig($serverName);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamemediacacheApi- deleteMediaCacheStoreConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#parameters_2", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#return-type_2", 
            "text": "void (empty response body)", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#authorization_2", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#http-request-headers_2", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#deletemediacachestoreconfig3", 
            "text": "deleteMediaCacheStoreConfig3($serverName, $storeName)   Deletes the specified MediaCache Store configuration  This API is available in builds 15089 or later.", 
            "title": "deleteMediaCacheStoreConfig3"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#example_3", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamemediacacheApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$storeName =  storeName_example ; // string | \n\ntry {\n    $api_instance- deleteMediaCacheStoreConfig3($serverName, $storeName);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamemediacacheApi- deleteMediaCacheStoreConfig3: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#parameters_3", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     storeName  string", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#return-type_3", 
            "text": "void (empty response body)", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#authorization_3", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#http-request-headers_3", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#getmediacacheconfig", 
            "text": "\\Model\\MediaCacheConfig getMediaCacheConfig($serverName)   Retrieves the server MediaCache configuration  This API is available in builds 15089 or later.", 
            "title": "getMediaCacheConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#example_4", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamemediacacheApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n\ntry {\n    $result = $api_instance- getMediaCacheConfig($serverName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamemediacacheApi- getMediaCacheConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#parameters_4", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#return-type_4", 
            "text": "\\Model\\MediaCacheConfig", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#authorization_4", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#http-request-headers_4", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#getmediacacheconfig3", 
            "text": "\\Model\\MediaCacheConfig3 getMediaCacheConfig3($serverName)   Retrieves the server MediaCache configuration  This API is available in builds 15089 or later.", 
            "title": "getMediaCacheConfig3"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#example_5", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamemediacacheApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n\ntry {\n    $result = $api_instance- getMediaCacheConfig3($serverName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamemediacacheApi- getMediaCacheConfig3: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#parameters_5", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#return-type_5", 
            "text": "\\Model\\MediaCacheConfig3", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#authorization_5", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#http-request-headers_5", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#getmediacacheconfigadv", 
            "text": "\\Model\\MediaCacheConfigAdv getMediaCacheConfigAdv($serverName)   Retrieves the advanced MediaCache configuration  This API is available in builds 15089 or later.", 
            "title": "getMediaCacheConfigAdv"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#example_6", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamemediacacheApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n\ntry {\n    $result = $api_instance- getMediaCacheConfigAdv($serverName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamemediacacheApi- getMediaCacheConfigAdv: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#parameters_6", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#return-type_6", 
            "text": "\\Model\\MediaCacheConfigAdv", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#authorization_6", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#http-request-headers_6", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#getmediacachesourceconfig", 
            "text": "\\Model\\MediaCacheSourceConfig getMediaCacheSourceConfig($serverName)   Retrieves the specified MediaCache Source configuration  This API is available in builds 15089 or later.", 
            "title": "getMediaCacheSourceConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#example_7", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamemediacacheApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n\ntry {\n    $result = $api_instance- getMediaCacheSourceConfig($serverName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamemediacacheApi- getMediaCacheSourceConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#parameters_7", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#return-type_7", 
            "text": "\\Model\\MediaCacheSourceConfig", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#authorization_7", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#http-request-headers_7", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#getmediacachesourceconfig3", 
            "text": "\\Model\\MediaCacheSourceConfig3 getMediaCacheSourceConfig3($serverName, $sourceName)   Retrieves the specified MediaCache Source configuration  This API is available in builds 15089 or later.", 
            "title": "getMediaCacheSourceConfig3"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#example_8", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamemediacacheApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$sourceName =  sourceName_example ; // string | \n\ntry {\n    $result = $api_instance- getMediaCacheSourceConfig3($serverName, $sourceName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamemediacacheApi- getMediaCacheSourceConfig3: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#parameters_8", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     sourceName  string", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#return-type_8", 
            "text": "\\Model\\MediaCacheSourceConfig3", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#authorization_8", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#http-request-headers_8", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#getmediacachesourceconfigadv", 
            "text": "\\Model\\MediaCacheSourceConfigAdv getMediaCacheSourceConfigAdv($serverName, $sourceName)   Retrieves the specified advanced MediaCache Source configuration  This API is available in builds 15089 or later.", 
            "title": "getMediaCacheSourceConfigAdv"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#example_9", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamemediacacheApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$sourceName =  sourceName_example ; // string | \n\ntry {\n    $result = $api_instance- getMediaCacheSourceConfigAdv($serverName, $sourceName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamemediacacheApi- getMediaCacheSourceConfigAdv: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#parameters_9", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     sourceName  string", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#return-type_9", 
            "text": "\\Model\\MediaCacheSourceConfigAdv", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#authorization_9", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#http-request-headers_9", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#getmediacachesourceconfigadv3", 
            "text": "\\Model\\MediaCacheSourceConfigAdv3 getMediaCacheSourceConfigAdv3($serverName, $sourceName)   Retrieves the specified advanced MediaCache Source configuration  This API is available in builds 15089 or later.", 
            "title": "getMediaCacheSourceConfigAdv3"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#example_10", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamemediacacheApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$sourceName =  sourceName_example ; // string | \n\ntry {\n    $result = $api_instance- getMediaCacheSourceConfigAdv3($serverName, $sourceName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamemediacacheApi- getMediaCacheSourceConfigAdv3: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#parameters_10", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     sourceName  string", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#return-type_10", 
            "text": "\\Model\\MediaCacheSourceConfigAdv3", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#authorization_10", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#http-request-headers_10", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#getmediacachesourcesconfig", 
            "text": "\\Model\\MediaCacheSourcesConfig getMediaCacheSourcesConfig($serverName)   Retrieves the list of MediaCache Sources  This API is available in builds 15089 or later.", 
            "title": "getMediaCacheSourcesConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#example_11", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamemediacacheApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n\ntry {\n    $result = $api_instance- getMediaCacheSourcesConfig($serverName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamemediacacheApi- getMediaCacheSourcesConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#parameters_11", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#return-type_11", 
            "text": "\\Model\\MediaCacheSourcesConfig", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#authorization_11", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#http-request-headers_11", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#getmediacachesourcesconfig3", 
            "text": "\\Model\\MediaCacheSourcesConfig3 getMediaCacheSourcesConfig3($serverName)   Retrieves the list of MediaCache Sources  This API is available in builds 15089 or later.", 
            "title": "getMediaCacheSourcesConfig3"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#example_12", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamemediacacheApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n\ntry {\n    $result = $api_instance- getMediaCacheSourcesConfig3($serverName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamemediacacheApi- getMediaCacheSourcesConfig3: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#parameters_12", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#return-type_12", 
            "text": "\\Model\\MediaCacheSourcesConfig3", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#authorization_12", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#http-request-headers_12", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#getmediacachestoreconfig", 
            "text": "\\Model\\MediaCacheStoreConfig getMediaCacheStoreConfig($serverName)   Retrieves the specified MediaCache Store configuration  This API is available in builds 15089 or later.", 
            "title": "getMediaCacheStoreConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#example_13", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamemediacacheApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n\ntry {\n    $result = $api_instance- getMediaCacheStoreConfig($serverName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamemediacacheApi- getMediaCacheStoreConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#parameters_13", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#return-type_13", 
            "text": "\\Model\\MediaCacheStoreConfig", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#authorization_13", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#http-request-headers_13", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#getmediacachestoreconfig3", 
            "text": "\\Model\\MediaCacheStoreConfig3 getMediaCacheStoreConfig3($serverName, $storeName)   Retrieves the specified MediaCache Store configuration  This API is available in builds 15089 or later.", 
            "title": "getMediaCacheStoreConfig3"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#example_14", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamemediacacheApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$storeName =  storeName_example ; // string | \n\ntry {\n    $result = $api_instance- getMediaCacheStoreConfig3($serverName, $storeName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamemediacacheApi- getMediaCacheStoreConfig3: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#parameters_14", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     storeName  string", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#return-type_14", 
            "text": "\\Model\\MediaCacheStoreConfig3", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#authorization_14", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#http-request-headers_14", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#getmediacachestoreconfigadv", 
            "text": "\\Model\\MediaCacheStoreConfigAdv getMediaCacheStoreConfigAdv($serverName, $storeName)   Retrieves the specified advanced MediaCache Store configuration  This API is available in builds 15089 or later.", 
            "title": "getMediaCacheStoreConfigAdv"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#example_15", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamemediacacheApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$storeName =  storeName_example ; // string | \n\ntry {\n    $result = $api_instance- getMediaCacheStoreConfigAdv($serverName, $storeName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamemediacacheApi- getMediaCacheStoreConfigAdv: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#parameters_15", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     storeName  string", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#return-type_15", 
            "text": "\\Model\\MediaCacheStoreConfigAdv", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#authorization_15", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#http-request-headers_15", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#getmediacachestoresconfig", 
            "text": "\\Model\\MediaCacheStoresConfig getMediaCacheStoresConfig($serverName)   Retrieves the list of MediaCache Stores  This API is available in builds 15089 or later.", 
            "title": "getMediaCacheStoresConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#example_16", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamemediacacheApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n\ntry {\n    $result = $api_instance- getMediaCacheStoresConfig($serverName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamemediacacheApi- getMediaCacheStoresConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#parameters_16", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#return-type_16", 
            "text": "\\Model\\MediaCacheStoresConfig", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#authorization_16", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#http-request-headers_16", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#getmediacachestoresconfig3", 
            "text": "\\Model\\MediaCacheStoresConfig3 getMediaCacheStoresConfig3($serverName)   Retrieves the list of MediaCache Stores  This API is available in builds 15089 or later.", 
            "title": "getMediaCacheStoresConfig3"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#example_17", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamemediacacheApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n\ntry {\n    $result = $api_instance- getMediaCacheStoresConfig3($serverName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamemediacacheApi- getMediaCacheStoresConfig3: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#parameters_17", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#return-type_17", 
            "text": "\\Model\\MediaCacheStoresConfig3", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#authorization_17", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#http-request-headers_17", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#postmediacacheconfigadv", 
            "text": "postMediaCacheConfigAdv($serverName, $body)   Adds an advanced MediaCache configuration  This API is available in builds 15089 or later.", 
            "title": "postMediaCacheConfigAdv"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#example_18", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamemediacacheApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$body = new \\Model\\MediaCacheConfigAdv(); // \\Model\\MediaCacheConfigAdv | \n\ntry {\n    $api_instance- postMediaCacheConfigAdv($serverName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamemediacacheApi- postMediaCacheConfigAdv: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#parameters_18", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     body  \\Model\\MediaCacheConfigAdv", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#return-type_18", 
            "text": "void (empty response body)", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#authorization_18", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#http-request-headers_18", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#postmediacachesourceconfig", 
            "text": "postMediaCacheSourceConfig($serverName, $body)   Adds the specified MediaCache Source configuration  This API is available in builds 15089 or later.", 
            "title": "postMediaCacheSourceConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#example_19", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamemediacacheApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$body = new \\Model\\MediaCacheSourceConfig(); // \\Model\\MediaCacheSourceConfig | \n\ntry {\n    $api_instance- postMediaCacheSourceConfig($serverName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamemediacacheApi- postMediaCacheSourceConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#parameters_19", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     body  \\Model\\MediaCacheSourceConfig", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#return-type_19", 
            "text": "void (empty response body)", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#authorization_19", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#http-request-headers_19", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#postmediacachesourceconfig3", 
            "text": "postMediaCacheSourceConfig3($serverName, $sourceName, $body)   Adds the specified MediaCache Source configuration  This API is available in builds 15089 or later.", 
            "title": "postMediaCacheSourceConfig3"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#example_20", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamemediacacheApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$sourceName =  sourceName_example ; // string | \n$body = new \\Model\\MediaCacheSourceConfig3(); // \\Model\\MediaCacheSourceConfig3 | \n\ntry {\n    $api_instance- postMediaCacheSourceConfig3($serverName, $sourceName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamemediacacheApi- postMediaCacheSourceConfig3: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#parameters_20", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     sourceName  string      body  \\Model\\MediaCacheSourceConfig3", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#return-type_20", 
            "text": "void (empty response body)", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#authorization_20", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#http-request-headers_20", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#postmediacachesourceconfigadv", 
            "text": "postMediaCacheSourceConfigAdv($serverName, $sourceName, $body)   Adds the specified advanced MediaCache Source configuration  This API is available in builds 15089 or later.", 
            "title": "postMediaCacheSourceConfigAdv"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#example_21", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamemediacacheApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$sourceName =  sourceName_example ; // string | \n$body = new \\Model\\MediaCacheSourceConfigAdv(); // \\Model\\MediaCacheSourceConfigAdv | \n\ntry {\n    $api_instance- postMediaCacheSourceConfigAdv($serverName, $sourceName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamemediacacheApi- postMediaCacheSourceConfigAdv: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#parameters_21", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     sourceName  string      body  \\Model\\MediaCacheSourceConfigAdv", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#return-type_21", 
            "text": "void (empty response body)", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#authorization_21", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#http-request-headers_21", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#postmediacachesourceconfigadv3", 
            "text": "postMediaCacheSourceConfigAdv3($serverName, $sourceName, $body)   Adds the specified advanced MediaCache Source configuration  This API is available in builds 15089 or later.", 
            "title": "postMediaCacheSourceConfigAdv3"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#example_22", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamemediacacheApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$sourceName =  sourceName_example ; // string | \n$body = new \\Model\\MediaCacheSourceConfigAdv3(); // \\Model\\MediaCacheSourceConfigAdv3 | \n\ntry {\n    $api_instance- postMediaCacheSourceConfigAdv3($serverName, $sourceName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamemediacacheApi- postMediaCacheSourceConfigAdv3: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#parameters_22", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     sourceName  string      body  \\Model\\MediaCacheSourceConfigAdv3", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#return-type_22", 
            "text": "void (empty response body)", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#authorization_22", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#http-request-headers_22", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#postmediacachesourcesconfig", 
            "text": "postMediaCacheSourcesConfig($serverName, $body)   Adds the specified MediaCache Source to the list  This API is available in builds 15089 or later.", 
            "title": "postMediaCacheSourcesConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#example_23", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamemediacacheApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$body = new \\Model\\MediaCacheSourceConfig(); // \\Model\\MediaCacheSourceConfig | \n\ntry {\n    $api_instance- postMediaCacheSourcesConfig($serverName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamemediacacheApi- postMediaCacheSourcesConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#parameters_23", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     body  \\Model\\MediaCacheSourceConfig", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#return-type_23", 
            "text": "void (empty response body)", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#authorization_23", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#http-request-headers_23", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#postmediacachesourcesconfig3", 
            "text": "postMediaCacheSourcesConfig3($serverName, $body)   Adds the specified MediaCache Source to the list  This API is available in builds 15089 or later.", 
            "title": "postMediaCacheSourcesConfig3"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#example_24", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamemediacacheApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$body = new \\Model\\MediaCacheSourceConfig(); // \\Model\\MediaCacheSourceConfig | \n\ntry {\n    $api_instance- postMediaCacheSourcesConfig3($serverName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamemediacacheApi- postMediaCacheSourcesConfig3: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#parameters_24", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     body  \\Model\\MediaCacheSourceConfig", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#return-type_24", 
            "text": "void (empty response body)", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#authorization_24", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#http-request-headers_24", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#postmediacachestoreconfig", 
            "text": "postMediaCacheStoreConfig($serverName, $body)   Adds the specified MediaCache Store configuration  This API is available in builds 15089 or later.", 
            "title": "postMediaCacheStoreConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#example_25", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamemediacacheApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$body = new \\Model\\MediaCacheStoreConfig(); // \\Model\\MediaCacheStoreConfig | \n\ntry {\n    $api_instance- postMediaCacheStoreConfig($serverName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamemediacacheApi- postMediaCacheStoreConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#parameters_25", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     body  \\Model\\MediaCacheStoreConfig", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#return-type_25", 
            "text": "void (empty response body)", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#authorization_25", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#http-request-headers_25", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#postmediacachestoreconfig3", 
            "text": "postMediaCacheStoreConfig3($serverName, $storeName, $body)   Adds the specified MediaCache Store configuration  This API is available in builds 15089 or later.", 
            "title": "postMediaCacheStoreConfig3"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#example_26", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamemediacacheApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$storeName =  storeName_example ; // string | \n$body = new \\Model\\MediaCacheStoreConfig3(); // \\Model\\MediaCacheStoreConfig3 | \n\ntry {\n    $api_instance- postMediaCacheStoreConfig3($serverName, $storeName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamemediacacheApi- postMediaCacheStoreConfig3: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#parameters_26", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     storeName  string      body  \\Model\\MediaCacheStoreConfig3", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#return-type_26", 
            "text": "void (empty response body)", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#authorization_26", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#http-request-headers_26", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#postmediacachestoreconfigadv", 
            "text": "postMediaCacheStoreConfigAdv($serverName, $storeName, $body)   Adds the specified advanced MediaCache Store configuration  This API is available in builds 15089 or later.", 
            "title": "postMediaCacheStoreConfigAdv"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#example_27", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamemediacacheApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$storeName =  storeName_example ; // string | \n$body = new \\Model\\MediaCacheStoreConfigAdv(); // \\Model\\MediaCacheStoreConfigAdv | \n\ntry {\n    $api_instance- postMediaCacheStoreConfigAdv($serverName, $storeName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamemediacacheApi- postMediaCacheStoreConfigAdv: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#parameters_27", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     storeName  string      body  \\Model\\MediaCacheStoreConfigAdv", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#return-type_27", 
            "text": "void (empty response body)", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#authorization_27", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#http-request-headers_27", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#postmediacachestoresconfig", 
            "text": "postMediaCacheStoresConfig($serverName, $body)   Adds the specified MediaCache Store to the list  This API is available in builds 15089 or later.", 
            "title": "postMediaCacheStoresConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#example_28", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamemediacacheApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$body = new \\Model\\MediaCacheStoreConfig(); // \\Model\\MediaCacheStoreConfig | \n\ntry {\n    $api_instance- postMediaCacheStoresConfig($serverName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamemediacacheApi- postMediaCacheStoresConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#parameters_28", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     body  \\Model\\MediaCacheStoreConfig", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#return-type_28", 
            "text": "void (empty response body)", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#authorization_28", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#http-request-headers_28", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#postmediacachestoresconfig3", 
            "text": "postMediaCacheStoresConfig3($serverName, $body)   Adds the specified MediaCache Store to the list  This API is available in builds 15089 or later.", 
            "title": "postMediaCacheStoresConfig3"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#example_29", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamemediacacheApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$body = new \\Model\\MediaCacheStoreConfig(); // \\Model\\MediaCacheStoreConfig | \n\ntry {\n    $api_instance- postMediaCacheStoresConfig3($serverName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamemediacacheApi- postMediaCacheStoresConfig3: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#parameters_29", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     body  \\Model\\MediaCacheStoreConfig", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#return-type_29", 
            "text": "void (empty response body)", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#authorization_29", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#http-request-headers_29", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#putmediacacheconfig", 
            "text": "putMediaCacheConfig($serverName, $body)   Updates the server MediaCache configuration  This API is available in builds 15089 or later.", 
            "title": "putMediaCacheConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#example_30", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamemediacacheApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$body = new \\Model\\MediaCacheConfig(); // \\Model\\MediaCacheConfig | \n\ntry {\n    $api_instance- putMediaCacheConfig($serverName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamemediacacheApi- putMediaCacheConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#parameters_30", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     body  \\Model\\MediaCacheConfig", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#return-type_30", 
            "text": "void (empty response body)", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#authorization_30", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#http-request-headers_30", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#putmediacacheconfig3", 
            "text": "putMediaCacheConfig3($serverName, $body)   Updates the server MediaCache configuration  This API is available in builds 15089 or later.", 
            "title": "putMediaCacheConfig3"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#example_31", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamemediacacheApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$body = new \\Model\\MediaCacheConfig3(); // \\Model\\MediaCacheConfig3 | \n\ntry {\n    $api_instance- putMediaCacheConfig3($serverName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamemediacacheApi- putMediaCacheConfig3: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#parameters_31", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     body  \\Model\\MediaCacheConfig3", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#return-type_31", 
            "text": "void (empty response body)", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#authorization_31", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#http-request-headers_31", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#putmediacacheconfigadv", 
            "text": "putMediaCacheConfigAdv($serverName, $body)   Updates the advanced MediaCache configuration  This API is available in builds 15089 or later.", 
            "title": "putMediaCacheConfigAdv"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#example_32", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamemediacacheApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$body = new \\Model\\MediaCacheConfigAdv(); // \\Model\\MediaCacheConfigAdv | \n\ntry {\n    $api_instance- putMediaCacheConfigAdv($serverName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamemediacacheApi- putMediaCacheConfigAdv: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#parameters_32", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     body  \\Model\\MediaCacheConfigAdv", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#return-type_32", 
            "text": "void (empty response body)", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#authorization_32", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#http-request-headers_32", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#putmediacachesourceconfig", 
            "text": "putMediaCacheSourceConfig($serverName, $body)   Updates the specified MediaCache Source configuration  This API is available in builds 15089 or later.", 
            "title": "putMediaCacheSourceConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#example_33", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamemediacacheApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$body = new \\Model\\MediaCacheSourceConfig(); // \\Model\\MediaCacheSourceConfig | \n\ntry {\n    $api_instance- putMediaCacheSourceConfig($serverName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamemediacacheApi- putMediaCacheSourceConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#parameters_33", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     body  \\Model\\MediaCacheSourceConfig", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#return-type_33", 
            "text": "void (empty response body)", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#authorization_33", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#http-request-headers_33", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#putmediacachesourceconfig3", 
            "text": "putMediaCacheSourceConfig3($serverName, $sourceName, $body)   Updates the specified MediaCache Source configuration  This API is available in builds 15089 or later.", 
            "title": "putMediaCacheSourceConfig3"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#example_34", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamemediacacheApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$sourceName =  sourceName_example ; // string | \n$body = new \\Model\\MediaCacheSourceConfig3(); // \\Model\\MediaCacheSourceConfig3 | \n\ntry {\n    $api_instance- putMediaCacheSourceConfig3($serverName, $sourceName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamemediacacheApi- putMediaCacheSourceConfig3: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#parameters_34", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     sourceName  string      body  \\Model\\MediaCacheSourceConfig3", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#return-type_34", 
            "text": "void (empty response body)", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#authorization_34", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#http-request-headers_34", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#putmediacachesourceconfigadv", 
            "text": "putMediaCacheSourceConfigAdv($serverName, $sourceName, $body)   Updates the specified advanced MediaCache Source configuration  This API is available in builds 15089 or later.", 
            "title": "putMediaCacheSourceConfigAdv"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#example_35", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamemediacacheApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$sourceName =  sourceName_example ; // string | \n$body = new \\Model\\MediaCacheSourceConfigAdv(); // \\Model\\MediaCacheSourceConfigAdv | \n\ntry {\n    $api_instance- putMediaCacheSourceConfigAdv($serverName, $sourceName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamemediacacheApi- putMediaCacheSourceConfigAdv: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#parameters_35", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     sourceName  string      body  \\Model\\MediaCacheSourceConfigAdv", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#return-type_35", 
            "text": "void (empty response body)", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#authorization_35", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#http-request-headers_35", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#putmediacachesourceconfigadv3", 
            "text": "putMediaCacheSourceConfigAdv3($serverName, $sourceName, $body)   Updates the specified advanced MediaCache Source configuration  This API is available in builds 15089 or later.", 
            "title": "putMediaCacheSourceConfigAdv3"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#example_36", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamemediacacheApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$sourceName =  sourceName_example ; // string | \n$body = new \\Model\\MediaCacheSourceConfigAdv3(); // \\Model\\MediaCacheSourceConfigAdv3 | \n\ntry {\n    $api_instance- putMediaCacheSourceConfigAdv3($serverName, $sourceName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamemediacacheApi- putMediaCacheSourceConfigAdv3: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#parameters_36", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     sourceName  string      body  \\Model\\MediaCacheSourceConfigAdv3", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#return-type_36", 
            "text": "void (empty response body)", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#authorization_36", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#http-request-headers_36", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#putmediacachestoreconfig", 
            "text": "putMediaCacheStoreConfig($serverName, $body)   Updates the specified MediaCache Store configuration  This API is available in builds 15089 or later.", 
            "title": "putMediaCacheStoreConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#example_37", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamemediacacheApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$body = new \\Model\\MediaCacheStoreConfig(); // \\Model\\MediaCacheStoreConfig | \n\ntry {\n    $api_instance- putMediaCacheStoreConfig($serverName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamemediacacheApi- putMediaCacheStoreConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#parameters_37", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     body  \\Model\\MediaCacheStoreConfig", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#return-type_37", 
            "text": "void (empty response body)", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#authorization_37", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#http-request-headers_37", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#putmediacachestoreconfig3", 
            "text": "putMediaCacheStoreConfig3($serverName, $storeName, $body)   Updates the specified MediaCache Store configuration  This API is available in builds 15089 or later.", 
            "title": "putMediaCacheStoreConfig3"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#example_38", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamemediacacheApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$storeName =  storeName_example ; // string | \n$body = new \\Model\\MediaCacheStoreConfig3(); // \\Model\\MediaCacheStoreConfig3 | \n\ntry {\n    $api_instance- putMediaCacheStoreConfig3($serverName, $storeName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamemediacacheApi- putMediaCacheStoreConfig3: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#parameters_38", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     storeName  string      body  \\Model\\MediaCacheStoreConfig3", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#return-type_38", 
            "text": "void (empty response body)", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#authorization_38", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#http-request-headers_38", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#putmediacachestoreconfigadv", 
            "text": "putMediaCacheStoreConfigAdv($serverName, $storeName, $body)   Updates the specified advanced MediaCache Store configuration  This API is available in builds 15089 or later.", 
            "title": "putMediaCacheStoreConfigAdv"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#example_39", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamemediacacheApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$storeName =  storeName_example ; // string | \n$body = new \\Model\\MediaCacheStoreConfigAdv(); // \\Model\\MediaCacheStoreConfigAdv | \n\ntry {\n    $api_instance- putMediaCacheStoreConfigAdv($serverName, $storeName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamemediacacheApi- putMediaCacheStoreConfigAdv: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#parameters_39", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     storeName  string      body  \\Model\\MediaCacheStoreConfigAdv", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#return-type_39", 
            "text": "void (empty response body)", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#authorization_39", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacacheApi/#http-request-headers_39", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacastersApi/", 
            "text": "WowzaApi\\VserversserverNamemediacastersApi\n\n\nAll URIs are relative to \nhttp://localhost:8087/\n\n\n\n\n\n\n\n\nMethod\n\n\nHTTP request\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\ngetMediaCasterConfig\n\n\nGET\n /v2/servers/{serverName}/mediacasters/{mediacastername}\n\n\nRetrieves the specified MediaCaster configuration\n\n\n\n\n\n\ngetMediaCastersConfig\n\n\nGET\n /v2/servers/{serverName}/mediacasters\n\n\nRetrieves the list of MediaCasters\n\n\n\n\n\n\n\n\ngetMediaCasterConfig\n\n\n\n\n\\Model\\MediaCasterConfig getMediaCasterConfig($serverName, $mediacastername)\n\n\n\n\nRetrieves the specified MediaCaster configuration\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamemediacastersApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$mediacastername = \nmediacastername_example\n; // string | \n\ntry {\n    $result = $api_instance-\ngetMediaCasterConfig($serverName, $mediacastername);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamemediacastersApi-\ngetMediaCasterConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nmediacastername\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\n\\Model\\MediaCasterConfig\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: Not defined\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\ngetMediaCastersConfig\n\n\n\n\n\\Model\\MediaCastersConfig getMediaCastersConfig($serverName)\n\n\n\n\nRetrieves the list of MediaCasters\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamemediacastersApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n\ntry {\n    $result = $api_instance-\ngetMediaCastersConfig($serverName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamemediacastersApi-\ngetMediaCastersConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\n\\Model\\MediaCastersConfig\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: Not defined\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]", 
            "title": "VserversserverNamemediacastersApi"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacastersApi/#wowzaapivserversservernamemediacastersapi", 
            "text": "All URIs are relative to  http://localhost:8087/     Method  HTTP request  Description      getMediaCasterConfig  GET  /v2/servers/{serverName}/mediacasters/{mediacastername}  Retrieves the specified MediaCaster configuration    getMediaCastersConfig  GET  /v2/servers/{serverName}/mediacasters  Retrieves the list of MediaCasters", 
            "title": "WowzaApi\\VserversserverNamemediacastersApi"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacastersApi/#getmediacasterconfig", 
            "text": "\\Model\\MediaCasterConfig getMediaCasterConfig($serverName, $mediacastername)   Retrieves the specified MediaCaster configuration  This API is available in builds 15089 or later.", 
            "title": "getMediaCasterConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacastersApi/#example", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamemediacastersApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$mediacastername =  mediacastername_example ; // string | \n\ntry {\n    $result = $api_instance- getMediaCasterConfig($serverName, $mediacastername);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamemediacastersApi- getMediaCasterConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacastersApi/#parameters", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     mediacastername  string", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacastersApi/#return-type", 
            "text": "\\Model\\MediaCasterConfig", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacastersApi/#authorization", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacastersApi/#http-request-headers", 
            "text": "Content-Type : Not defined  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacastersApi/#getmediacastersconfig", 
            "text": "\\Model\\MediaCastersConfig getMediaCastersConfig($serverName)   Retrieves the list of MediaCasters  This API is available in builds 15089 or later.", 
            "title": "getMediaCastersConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacastersApi/#example_1", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamemediacastersApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n\ntry {\n    $result = $api_instance- getMediaCastersConfig($serverName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamemediacastersApi- getMediaCastersConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacastersApi/#parameters_1", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacastersApi/#return-type_1", 
            "text": "\\Model\\MediaCastersConfig", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacastersApi/#authorization_1", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemediacastersApi/#http-request-headers_1", 
            "text": "Content-Type : Not defined  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemonitoringApi/", 
            "text": "WowzaApi\\VserversserverNamemonitoringApi\n\n\nAll URIs are relative to \nhttp://localhost:8087/\n\n\n\n\n\n\n\n\nMethod\n\n\nHTTP request\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\ngetHistoricServerStatistics\n\n\nGET\n /v2/servers/{serverName}/monitoring/historic\n\n\nRetrieves the server historical statictics\n\n\n\n\n\n\ngetMonitoringConfig\n\n\nGET\n /v2/servers/{serverName}/monitoring\n\n\nRetrieves the server monitoring configuration\n\n\n\n\n\n\nputMonitoringConfig\n\n\nPUT\n /v2/servers/{serverName}/monitoring\n\n\nUpdates the server monitoring configuration\n\n\n\n\n\n\n\n\ngetHistoricServerStatistics\n\n\n\n\n\\Model\\HistoricServerStatistics getHistoricServerStatistics($serverName)\n\n\n\n\nRetrieves the server historical statictics\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamemonitoringApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n\ntry {\n    $result = $api_instance-\ngetHistoricServerStatistics($serverName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamemonitoringApi-\ngetHistoricServerStatistics: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\n\\Model\\HistoricServerStatistics\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\ngetMonitoringConfig\n\n\n\n\n\\Model\\MonitoringConfig getMonitoringConfig($serverName)\n\n\n\n\nRetrieves the server monitoring configuration\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamemonitoringApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n\ntry {\n    $result = $api_instance-\ngetMonitoringConfig($serverName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamemonitoringApi-\ngetMonitoringConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\n\\Model\\MonitoringConfig\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\nputMonitoringConfig\n\n\n\n\nputMonitoringConfig($serverName, $body)\n\n\n\n\nUpdates the server monitoring configuration\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamemonitoringApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$body = new \\Model\\MonitoringConfig(); // \\Model\\MonitoringConfig | \n\ntry {\n    $api_instance-\nputMonitoringConfig($serverName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamemonitoringApi-\nputMonitoringConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nbody\n\n\n\\Model\\MonitoringConfig\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\nvoid (empty response body)\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]", 
            "title": "VserversserverNamemonitoringApi"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemonitoringApi/#wowzaapivserversservernamemonitoringapi", 
            "text": "All URIs are relative to  http://localhost:8087/     Method  HTTP request  Description      getHistoricServerStatistics  GET  /v2/servers/{serverName}/monitoring/historic  Retrieves the server historical statictics    getMonitoringConfig  GET  /v2/servers/{serverName}/monitoring  Retrieves the server monitoring configuration    putMonitoringConfig  PUT  /v2/servers/{serverName}/monitoring  Updates the server monitoring configuration", 
            "title": "WowzaApi\\VserversserverNamemonitoringApi"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemonitoringApi/#gethistoricserverstatistics", 
            "text": "\\Model\\HistoricServerStatistics getHistoricServerStatistics($serverName)   Retrieves the server historical statictics  This API is available in builds 15089 or later.", 
            "title": "getHistoricServerStatistics"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemonitoringApi/#example", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamemonitoringApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n\ntry {\n    $result = $api_instance- getHistoricServerStatistics($serverName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamemonitoringApi- getHistoricServerStatistics: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemonitoringApi/#parameters", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemonitoringApi/#return-type", 
            "text": "\\Model\\HistoricServerStatistics", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemonitoringApi/#authorization", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemonitoringApi/#http-request-headers", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemonitoringApi/#getmonitoringconfig", 
            "text": "\\Model\\MonitoringConfig getMonitoringConfig($serverName)   Retrieves the server monitoring configuration  This API is available in builds 15089 or later.", 
            "title": "getMonitoringConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemonitoringApi/#example_1", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamemonitoringApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n\ntry {\n    $result = $api_instance- getMonitoringConfig($serverName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamemonitoringApi- getMonitoringConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemonitoringApi/#parameters_1", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemonitoringApi/#return-type_1", 
            "text": "\\Model\\MonitoringConfig", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemonitoringApi/#authorization_1", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemonitoringApi/#http-request-headers_1", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemonitoringApi/#putmonitoringconfig", 
            "text": "putMonitoringConfig($serverName, $body)   Updates the server monitoring configuration  This API is available in builds 15089 or later.", 
            "title": "putMonitoringConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemonitoringApi/#example_2", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamemonitoringApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$body = new \\Model\\MonitoringConfig(); // \\Model\\MonitoringConfig | \n\ntry {\n    $api_instance- putMonitoringConfig($serverName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamemonitoringApi- putMonitoringConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemonitoringApi/#parameters_2", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     body  \\Model\\MonitoringConfig", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemonitoringApi/#return-type_2", 
            "text": "void (empty response body)", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemonitoringApi/#authorization_2", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamemonitoringApi/#http-request-headers_2", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamepublishersApi/", 
            "text": "WowzaApi\\VserversserverNamepublishersApi\n\n\nAll URIs are relative to \nhttp://localhost:8087/\n\n\n\n\n\n\n\n\nMethod\n\n\nHTTP request\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\ndeletePublisherConfig\n\n\nDELETE\n /v2/servers/{serverName}/publishers/{publisher}\n\n\nDeletes the specified Publisher configuration\n\n\n\n\n\n\ndeletePublisherConfig3\n\n\nDELETE\n /v3/servers/{serverName}/publishers/{publisher}\n\n\nDeletes the specified Publisher configuration\n\n\n\n\n\n\ngetPublisherConfig\n\n\nGET\n /v2/servers/{serverName}/publishers/{publisher}\n\n\nRetrieves the specified Publisher configuration\n\n\n\n\n\n\ngetPublisherConfig3\n\n\nGET\n /v3/servers/{serverName}/publishers/{publisher}\n\n\nRetrieves the specified Publisher configuration\n\n\n\n\n\n\ngetPublishersConfig\n\n\nGET\n /v2/servers/{serverName}/publishers\n\n\nRetrieves the list of server Publishers\n\n\n\n\n\n\ngetPublishersConfig3\n\n\nGET\n /v3/servers/{serverName}/publishers\n\n\nRetrieves the list of server Publishers\n\n\n\n\n\n\npostPublisherConfig\n\n\nPOST\n /v2/servers/{serverName}/publishers/{publisher}\n\n\nAdds the specified Publisher configuration\n\n\n\n\n\n\npostPublisherConfig3\n\n\nPOST\n /v3/servers/{serverName}/publishers/{publisher}\n\n\nAdds the specified Publisher configuration\n\n\n\n\n\n\npostPublishersConfig\n\n\nPOST\n /v2/servers/{serverName}/publishers\n\n\nAdds a new Publisher to the list\n\n\n\n\n\n\npostPublishersConfig3\n\n\nPOST\n /v3/servers/{serverName}/publishers\n\n\nAdds a new Publisher to the list\n\n\n\n\n\n\nputPublisherConfig\n\n\nPUT\n /v2/servers/{serverName}/publishers/{publisher}\n\n\nUpdates the specified Publisher configuration\n\n\n\n\n\n\nputPublisherConfig3\n\n\nPUT\n /v3/servers/{serverName}/publishers/{publisher}\n\n\nUpdates the specified Publisher configuration\n\n\n\n\n\n\n\n\ndeletePublisherConfig\n\n\n\n\ndeletePublisherConfig($serverName)\n\n\n\n\nDeletes the specified Publisher configuration\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamepublishersApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n\ntry {\n    $api_instance-\ndeletePublisherConfig($serverName);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamepublishersApi-\ndeletePublisherConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\nvoid (empty response body)\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\ndeletePublisherConfig3\n\n\n\n\ndeletePublisherConfig3($serverName, $publisher)\n\n\n\n\nDeletes the specified Publisher configuration\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamepublishersApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$publisher = \npublisher_example\n; // string | \n\ntry {\n    $api_instance-\ndeletePublisherConfig3($serverName, $publisher);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamepublishersApi-\ndeletePublisherConfig3: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\npublisher\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\nvoid (empty response body)\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\ngetPublisherConfig\n\n\n\n\n\\Model\\PublisherConfig getPublisherConfig($serverName)\n\n\n\n\nRetrieves the specified Publisher configuration\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamepublishersApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n\ntry {\n    $result = $api_instance-\ngetPublisherConfig($serverName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamepublishersApi-\ngetPublisherConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\n\\Model\\PublisherConfig\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\ngetPublisherConfig3\n\n\n\n\n\\Model\\PublisherConfig3 getPublisherConfig3($serverName, $publisher)\n\n\n\n\nRetrieves the specified Publisher configuration\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamepublishersApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$publisher = \npublisher_example\n; // string | \n\ntry {\n    $result = $api_instance-\ngetPublisherConfig3($serverName, $publisher);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamepublishersApi-\ngetPublisherConfig3: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\npublisher\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\n\\Model\\PublisherConfig3\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\ngetPublishersConfig\n\n\n\n\n\\Model\\PublishersConfig getPublishersConfig($serverName)\n\n\n\n\nRetrieves the list of server Publishers\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamepublishersApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n\ntry {\n    $result = $api_instance-\ngetPublishersConfig($serverName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamepublishersApi-\ngetPublishersConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\n\\Model\\PublishersConfig\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\ngetPublishersConfig3\n\n\n\n\n\\Model\\PublishersConfig3 getPublishersConfig3($serverName)\n\n\n\n\nRetrieves the list of server Publishers\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamepublishersApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n\ntry {\n    $result = $api_instance-\ngetPublishersConfig3($serverName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamepublishersApi-\ngetPublishersConfig3: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\n\\Model\\PublishersConfig3\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\npostPublisherConfig\n\n\n\n\npostPublisherConfig($serverName, $body)\n\n\n\n\nAdds the specified Publisher configuration\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamepublishersApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$body = new \\Model\\PublisherConfig(); // \\Model\\PublisherConfig | \n\ntry {\n    $api_instance-\npostPublisherConfig($serverName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamepublishersApi-\npostPublisherConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nbody\n\n\n\\Model\\PublisherConfig\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\nvoid (empty response body)\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\npostPublisherConfig3\n\n\n\n\npostPublisherConfig3($serverName, $publisher, $body)\n\n\n\n\nAdds the specified Publisher configuration\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamepublishersApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$publisher = \npublisher_example\n; // string | \n$body = new \\Model\\PublisherConfig3(); // \\Model\\PublisherConfig3 | \n\ntry {\n    $api_instance-\npostPublisherConfig3($serverName, $publisher, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamepublishersApi-\npostPublisherConfig3: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\npublisher\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nbody\n\n\n\\Model\\PublisherConfig3\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\nvoid (empty response body)\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\npostPublishersConfig\n\n\n\n\npostPublishersConfig($serverName, $body)\n\n\n\n\nAdds a new Publisher to the list\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamepublishersApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$body = new \\Model\\PublisherConfig(); // \\Model\\PublisherConfig | \n\ntry {\n    $api_instance-\npostPublishersConfig($serverName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamepublishersApi-\npostPublishersConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nbody\n\n\n\\Model\\PublisherConfig\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\nvoid (empty response body)\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\npostPublishersConfig3\n\n\n\n\npostPublishersConfig3($serverName, $body)\n\n\n\n\nAdds a new Publisher to the list\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamepublishersApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$body = new \\Model\\PublisherConfig(); // \\Model\\PublisherConfig | \n\ntry {\n    $api_instance-\npostPublishersConfig3($serverName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamepublishersApi-\npostPublishersConfig3: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nbody\n\n\n\\Model\\PublisherConfig\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\nvoid (empty response body)\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\nputPublisherConfig\n\n\n\n\nputPublisherConfig($serverName, $body)\n\n\n\n\nUpdates the specified Publisher configuration\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamepublishersApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$body = new \\Model\\PublisherConfig(); // \\Model\\PublisherConfig | \n\ntry {\n    $api_instance-\nputPublisherConfig($serverName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamepublishersApi-\nputPublisherConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nbody\n\n\n\\Model\\PublisherConfig\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\nvoid (empty response body)\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\nputPublisherConfig3\n\n\n\n\nputPublisherConfig3($serverName, $publisher, $body)\n\n\n\n\nUpdates the specified Publisher configuration\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamepublishersApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$publisher = \npublisher_example\n; // string | \n$body = new \\Model\\PublisherConfig3(); // \\Model\\PublisherConfig3 | \n\ntry {\n    $api_instance-\nputPublisherConfig3($serverName, $publisher, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamepublishersApi-\nputPublisherConfig3: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\npublisher\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nbody\n\n\n\\Model\\PublisherConfig3\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\nvoid (empty response body)\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]", 
            "title": "VserversserverNamepublishersApi"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamepublishersApi/#wowzaapivserversservernamepublishersapi", 
            "text": "All URIs are relative to  http://localhost:8087/     Method  HTTP request  Description      deletePublisherConfig  DELETE  /v2/servers/{serverName}/publishers/{publisher}  Deletes the specified Publisher configuration    deletePublisherConfig3  DELETE  /v3/servers/{serverName}/publishers/{publisher}  Deletes the specified Publisher configuration    getPublisherConfig  GET  /v2/servers/{serverName}/publishers/{publisher}  Retrieves the specified Publisher configuration    getPublisherConfig3  GET  /v3/servers/{serverName}/publishers/{publisher}  Retrieves the specified Publisher configuration    getPublishersConfig  GET  /v2/servers/{serverName}/publishers  Retrieves the list of server Publishers    getPublishersConfig3  GET  /v3/servers/{serverName}/publishers  Retrieves the list of server Publishers    postPublisherConfig  POST  /v2/servers/{serverName}/publishers/{publisher}  Adds the specified Publisher configuration    postPublisherConfig3  POST  /v3/servers/{serverName}/publishers/{publisher}  Adds the specified Publisher configuration    postPublishersConfig  POST  /v2/servers/{serverName}/publishers  Adds a new Publisher to the list    postPublishersConfig3  POST  /v3/servers/{serverName}/publishers  Adds a new Publisher to the list    putPublisherConfig  PUT  /v2/servers/{serverName}/publishers/{publisher}  Updates the specified Publisher configuration    putPublisherConfig3  PUT  /v3/servers/{serverName}/publishers/{publisher}  Updates the specified Publisher configuration", 
            "title": "WowzaApi\\VserversserverNamepublishersApi"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamepublishersApi/#deletepublisherconfig", 
            "text": "deletePublisherConfig($serverName)   Deletes the specified Publisher configuration  This API is available in builds 15089 or later.", 
            "title": "deletePublisherConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamepublishersApi/#example", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamepublishersApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n\ntry {\n    $api_instance- deletePublisherConfig($serverName);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamepublishersApi- deletePublisherConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamepublishersApi/#parameters", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamepublishersApi/#return-type", 
            "text": "void (empty response body)", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamepublishersApi/#authorization", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamepublishersApi/#http-request-headers", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamepublishersApi/#deletepublisherconfig3", 
            "text": "deletePublisherConfig3($serverName, $publisher)   Deletes the specified Publisher configuration  This API is available in builds 15089 or later.", 
            "title": "deletePublisherConfig3"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamepublishersApi/#example_1", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamepublishersApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$publisher =  publisher_example ; // string | \n\ntry {\n    $api_instance- deletePublisherConfig3($serverName, $publisher);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamepublishersApi- deletePublisherConfig3: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamepublishersApi/#parameters_1", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     publisher  string", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamepublishersApi/#return-type_1", 
            "text": "void (empty response body)", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamepublishersApi/#authorization_1", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamepublishersApi/#http-request-headers_1", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamepublishersApi/#getpublisherconfig", 
            "text": "\\Model\\PublisherConfig getPublisherConfig($serverName)   Retrieves the specified Publisher configuration  This API is available in builds 15089 or later.", 
            "title": "getPublisherConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamepublishersApi/#example_2", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamepublishersApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n\ntry {\n    $result = $api_instance- getPublisherConfig($serverName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamepublishersApi- getPublisherConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamepublishersApi/#parameters_2", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamepublishersApi/#return-type_2", 
            "text": "\\Model\\PublisherConfig", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamepublishersApi/#authorization_2", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamepublishersApi/#http-request-headers_2", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamepublishersApi/#getpublisherconfig3", 
            "text": "\\Model\\PublisherConfig3 getPublisherConfig3($serverName, $publisher)   Retrieves the specified Publisher configuration  This API is available in builds 15089 or later.", 
            "title": "getPublisherConfig3"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamepublishersApi/#example_3", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamepublishersApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$publisher =  publisher_example ; // string | \n\ntry {\n    $result = $api_instance- getPublisherConfig3($serverName, $publisher);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamepublishersApi- getPublisherConfig3: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamepublishersApi/#parameters_3", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     publisher  string", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamepublishersApi/#return-type_3", 
            "text": "\\Model\\PublisherConfig3", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamepublishersApi/#authorization_3", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamepublishersApi/#http-request-headers_3", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamepublishersApi/#getpublishersconfig", 
            "text": "\\Model\\PublishersConfig getPublishersConfig($serverName)   Retrieves the list of server Publishers  This API is available in builds 15089 or later.", 
            "title": "getPublishersConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamepublishersApi/#example_4", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamepublishersApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n\ntry {\n    $result = $api_instance- getPublishersConfig($serverName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamepublishersApi- getPublishersConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamepublishersApi/#parameters_4", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamepublishersApi/#return-type_4", 
            "text": "\\Model\\PublishersConfig", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamepublishersApi/#authorization_4", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamepublishersApi/#http-request-headers_4", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamepublishersApi/#getpublishersconfig3", 
            "text": "\\Model\\PublishersConfig3 getPublishersConfig3($serverName)   Retrieves the list of server Publishers  This API is available in builds 15089 or later.", 
            "title": "getPublishersConfig3"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamepublishersApi/#example_5", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamepublishersApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n\ntry {\n    $result = $api_instance- getPublishersConfig3($serverName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamepublishersApi- getPublishersConfig3: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamepublishersApi/#parameters_5", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamepublishersApi/#return-type_5", 
            "text": "\\Model\\PublishersConfig3", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamepublishersApi/#authorization_5", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamepublishersApi/#http-request-headers_5", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamepublishersApi/#postpublisherconfig", 
            "text": "postPublisherConfig($serverName, $body)   Adds the specified Publisher configuration  This API is available in builds 15089 or later.", 
            "title": "postPublisherConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamepublishersApi/#example_6", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamepublishersApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$body = new \\Model\\PublisherConfig(); // \\Model\\PublisherConfig | \n\ntry {\n    $api_instance- postPublisherConfig($serverName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamepublishersApi- postPublisherConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamepublishersApi/#parameters_6", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     body  \\Model\\PublisherConfig", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamepublishersApi/#return-type_6", 
            "text": "void (empty response body)", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamepublishersApi/#authorization_6", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamepublishersApi/#http-request-headers_6", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamepublishersApi/#postpublisherconfig3", 
            "text": "postPublisherConfig3($serverName, $publisher, $body)   Adds the specified Publisher configuration  This API is available in builds 15089 or later.", 
            "title": "postPublisherConfig3"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamepublishersApi/#example_7", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamepublishersApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$publisher =  publisher_example ; // string | \n$body = new \\Model\\PublisherConfig3(); // \\Model\\PublisherConfig3 | \n\ntry {\n    $api_instance- postPublisherConfig3($serverName, $publisher, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamepublishersApi- postPublisherConfig3: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamepublishersApi/#parameters_7", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     publisher  string      body  \\Model\\PublisherConfig3", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamepublishersApi/#return-type_7", 
            "text": "void (empty response body)", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamepublishersApi/#authorization_7", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamepublishersApi/#http-request-headers_7", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamepublishersApi/#postpublishersconfig", 
            "text": "postPublishersConfig($serverName, $body)   Adds a new Publisher to the list  This API is available in builds 15089 or later.", 
            "title": "postPublishersConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamepublishersApi/#example_8", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamepublishersApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$body = new \\Model\\PublisherConfig(); // \\Model\\PublisherConfig | \n\ntry {\n    $api_instance- postPublishersConfig($serverName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamepublishersApi- postPublishersConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamepublishersApi/#parameters_8", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     body  \\Model\\PublisherConfig", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamepublishersApi/#return-type_8", 
            "text": "void (empty response body)", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamepublishersApi/#authorization_8", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamepublishersApi/#http-request-headers_8", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamepublishersApi/#postpublishersconfig3", 
            "text": "postPublishersConfig3($serverName, $body)   Adds a new Publisher to the list  This API is available in builds 15089 or later.", 
            "title": "postPublishersConfig3"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamepublishersApi/#example_9", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamepublishersApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$body = new \\Model\\PublisherConfig(); // \\Model\\PublisherConfig | \n\ntry {\n    $api_instance- postPublishersConfig3($serverName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamepublishersApi- postPublishersConfig3: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamepublishersApi/#parameters_9", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     body  \\Model\\PublisherConfig", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamepublishersApi/#return-type_9", 
            "text": "void (empty response body)", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamepublishersApi/#authorization_9", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamepublishersApi/#http-request-headers_9", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamepublishersApi/#putpublisherconfig", 
            "text": "putPublisherConfig($serverName, $body)   Updates the specified Publisher configuration  This API is available in builds 15089 or later.", 
            "title": "putPublisherConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamepublishersApi/#example_10", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamepublishersApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$body = new \\Model\\PublisherConfig(); // \\Model\\PublisherConfig | \n\ntry {\n    $api_instance- putPublisherConfig($serverName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamepublishersApi- putPublisherConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamepublishersApi/#parameters_10", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     body  \\Model\\PublisherConfig", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamepublishersApi/#return-type_10", 
            "text": "void (empty response body)", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamepublishersApi/#authorization_10", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamepublishersApi/#http-request-headers_10", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamepublishersApi/#putpublisherconfig3", 
            "text": "putPublisherConfig3($serverName, $publisher, $body)   Updates the specified Publisher configuration  This API is available in builds 15089 or later.", 
            "title": "putPublisherConfig3"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamepublishersApi/#example_11", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamepublishersApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$publisher =  publisher_example ; // string | \n$body = new \\Model\\PublisherConfig3(); // \\Model\\PublisherConfig3 | \n\ntry {\n    $api_instance- putPublisherConfig3($serverName, $publisher, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamepublishersApi- putPublisherConfig3: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamepublishersApi/#parameters_11", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     publisher  string      body  \\Model\\PublisherConfig3", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamepublishersApi/#return-type_11", 
            "text": "void (empty response body)", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamepublishersApi/#authorization_11", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamepublishersApi/#http-request-headers_11", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamestatusApi/", 
            "text": "WowzaApi\\VserversserverNamestatusApi\n\n\nAll URIs are relative to \nhttp://localhost:8087/\n\n\n\n\n\n\n\n\nMethod\n\n\nHTTP request\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\ngetServerStatusConfig\n\n\nGET\n /v2/servers/{serverName}/status\n\n\nRetrieves the server Status\n\n\n\n\n\n\n\n\ngetServerStatusConfig\n\n\n\n\n\\Model\\ServerStatusConfig getServerStatusConfig($serverName)\n\n\n\n\nRetrieves the server Status\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamestatusApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n\ntry {\n    $result = $api_instance-\ngetServerStatusConfig($serverName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamestatusApi-\ngetServerStatusConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\n\\Model\\ServerStatusConfig\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: Not defined\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]", 
            "title": "VserversserverNamestatusApi"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamestatusApi/#wowzaapivserversservernamestatusapi", 
            "text": "All URIs are relative to  http://localhost:8087/     Method  HTTP request  Description      getServerStatusConfig  GET  /v2/servers/{serverName}/status  Retrieves the server Status", 
            "title": "WowzaApi\\VserversserverNamestatusApi"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamestatusApi/#getserverstatusconfig", 
            "text": "\\Model\\ServerStatusConfig getServerStatusConfig($serverName)   Retrieves the server Status  This API is available in builds 15089 or later.", 
            "title": "getServerStatusConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamestatusApi/#example", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamestatusApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n\ntry {\n    $result = $api_instance- getServerStatusConfig($serverName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamestatusApi- getServerStatusConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamestatusApi/#parameters", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamestatusApi/#return-type", 
            "text": "\\Model\\ServerStatusConfig", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamestatusApi/#authorization", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamestatusApi/#http-request-headers", 
            "text": "Content-Type : Not defined  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNametranscoderApi/", 
            "text": "WowzaApi\\VserversserverNametranscoderApi\n\n\nAll URIs are relative to \nhttp://localhost:8087/\n\n\n\n\n\n\n\n\nMethod\n\n\nHTTP request\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\ngetTranscoderConfig\n\n\nGET\n /v2/servers/{serverName}/transcoder\n\n\nRetrieves the Transcoder information\n\n\n\n\n\n\n\n\ngetTranscoderConfig\n\n\n\n\n\\Model\\TranscoderConfig getTranscoderConfig($serverName)\n\n\n\n\nRetrieves the Transcoder information\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNametranscoderApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n\ntry {\n    $result = $api_instance-\ngetTranscoderConfig($serverName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNametranscoderApi-\ngetTranscoderConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\n\\Model\\TranscoderConfig\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: Not defined\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]", 
            "title": "VserversserverNametranscoderApi"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNametranscoderApi/#wowzaapivserversservernametranscoderapi", 
            "text": "All URIs are relative to  http://localhost:8087/     Method  HTTP request  Description      getTranscoderConfig  GET  /v2/servers/{serverName}/transcoder  Retrieves the Transcoder information", 
            "title": "WowzaApi\\VserversserverNametranscoderApi"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNametranscoderApi/#gettranscoderconfig", 
            "text": "\\Model\\TranscoderConfig getTranscoderConfig($serverName)   Retrieves the Transcoder information  This API is available in builds 15089 or later.", 
            "title": "getTranscoderConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNametranscoderApi/#example", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNametranscoderApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n\ntry {\n    $result = $api_instance- getTranscoderConfig($serverName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNametranscoderApi- getTranscoderConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNametranscoderApi/#parameters", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNametranscoderApi/#return-type", 
            "text": "\\Model\\TranscoderConfig", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNametranscoderApi/#authorization", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNametranscoderApi/#http-request-headers", 
            "text": "Content-Type : Not defined  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNametuneApi/", 
            "text": "WowzaApi\\VserversserverNametuneApi\n\n\nAll URIs are relative to \nhttp://localhost:8087/\n\n\n\n\n\n\n\n\nMethod\n\n\nHTTP request\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\ngetServerTuneConfig\n\n\nGET\n /v2/servers/{serverName}/tune\n\n\nRetrieves the server Tuning configuration\n\n\n\n\n\n\nputServerTuneConfig\n\n\nPUT\n /v2/servers/{serverName}/tune\n\n\nUpdates the server Tuning configuration\n\n\n\n\n\n\n\n\ngetServerTuneConfig\n\n\n\n\n\\Model\\ServerTuneConfig getServerTuneConfig($serverName)\n\n\n\n\nRetrieves the server Tuning configuration\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNametuneApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n\ntry {\n    $result = $api_instance-\ngetServerTuneConfig($serverName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNametuneApi-\ngetServerTuneConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\n\\Model\\ServerTuneConfig\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\nputServerTuneConfig\n\n\n\n\nputServerTuneConfig($serverName, $body)\n\n\n\n\nUpdates the server Tuning configuration\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNametuneApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$body = new \\Model\\ServerTuneConfig(); // \\Model\\ServerTuneConfig | \n\ntry {\n    $api_instance-\nputServerTuneConfig($serverName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNametuneApi-\nputServerTuneConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nbody\n\n\n\\Model\\ServerTuneConfig\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\nvoid (empty response body)\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]", 
            "title": "VserversserverNametuneApi"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNametuneApi/#wowzaapivserversservernametuneapi", 
            "text": "All URIs are relative to  http://localhost:8087/     Method  HTTP request  Description      getServerTuneConfig  GET  /v2/servers/{serverName}/tune  Retrieves the server Tuning configuration    putServerTuneConfig  PUT  /v2/servers/{serverName}/tune  Updates the server Tuning configuration", 
            "title": "WowzaApi\\VserversserverNametuneApi"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNametuneApi/#getservertuneconfig", 
            "text": "\\Model\\ServerTuneConfig getServerTuneConfig($serverName)   Retrieves the server Tuning configuration  This API is available in builds 15089 or later.", 
            "title": "getServerTuneConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNametuneApi/#example", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNametuneApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n\ntry {\n    $result = $api_instance- getServerTuneConfig($serverName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNametuneApi- getServerTuneConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNametuneApi/#parameters", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNametuneApi/#return-type", 
            "text": "\\Model\\ServerTuneConfig", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNametuneApi/#authorization", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNametuneApi/#http-request-headers", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNametuneApi/#putservertuneconfig", 
            "text": "putServerTuneConfig($serverName, $body)   Updates the server Tuning configuration  This API is available in builds 15089 or later.", 
            "title": "putServerTuneConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNametuneApi/#example_1", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNametuneApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$body = new \\Model\\ServerTuneConfig(); // \\Model\\ServerTuneConfig | \n\ntry {\n    $api_instance- putServerTuneConfig($serverName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNametuneApi- putServerTuneConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNametuneApi/#parameters_1", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     body  \\Model\\ServerTuneConfig", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNametuneApi/#return-type_1", 
            "text": "void (empty response body)", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNametuneApi/#authorization_1", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNametuneApi/#http-request-headers_1", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNameusersApi/", 
            "text": "WowzaApi\\VserversserverNameusersApi\n\n\nAll URIs are relative to \nhttp://localhost:8087/\n\n\n\n\n\n\n\n\nMethod\n\n\nHTTP request\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\ndeleteUserConfig\n\n\nDELETE\n /v2/servers/{serverName}/users/{userName}\n\n\nDeletes the specified User configuration\n\n\n\n\n\n\ngetUserConfig\n\n\nGET\n /v2/servers/{serverName}/users/{userName}\n\n\nRetrieves the specified User configuration\n\n\n\n\n\n\ngetUsersConfig\n\n\nGET\n /v2/servers/{serverName}/users\n\n\nRetrieves the list of server Users\n\n\n\n\n\n\npostUserConfig\n\n\nPOST\n /v2/servers/{serverName}/users/{userName}\n\n\nAdds the specified User configuration\n\n\n\n\n\n\npostUsersConfig\n\n\nPOST\n /v2/servers/{serverName}/users\n\n\nAdds a new server User to the list\n\n\n\n\n\n\nputUserConfig\n\n\nPUT\n /v2/servers/{serverName}/users/{userName}\n\n\nUpdates the specified User configuration\n\n\n\n\n\n\n\n\ndeleteUserConfig\n\n\n\n\ndeleteUserConfig($serverName, $userName)\n\n\n\n\nDeletes the specified User configuration\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNameusersApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$userName = \nuserName_example\n; // string | The user name\n\ntry {\n    $api_instance-\ndeleteUserConfig($serverName, $userName);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNameusersApi-\ndeleteUserConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nuserName\n\n\nstring\n\n\nThe user name\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\nvoid (empty response body)\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\ngetUserConfig\n\n\n\n\n\\Model\\UserConfig getUserConfig($serverName, $userName)\n\n\n\n\nRetrieves the specified User configuration\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNameusersApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$userName = \nuserName_example\n; // string | The user name\n\ntry {\n    $result = $api_instance-\ngetUserConfig($serverName, $userName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNameusersApi-\ngetUserConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nuserName\n\n\nstring\n\n\nThe user name\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\n\\Model\\UserConfig\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\ngetUsersConfig\n\n\n\n\n\\Model\\UsersConfig getUsersConfig($serverName)\n\n\n\n\nRetrieves the list of server Users\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNameusersApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n\ntry {\n    $result = $api_instance-\ngetUsersConfig($serverName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNameusersApi-\ngetUsersConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\n\\Model\\UsersConfig\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\npostUserConfig\n\n\n\n\npostUserConfig($serverName, $userName, $body)\n\n\n\n\nAdds the specified User configuration\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNameusersApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$userName = \nuserName_example\n; // string | The user name\n$body = new \\Model\\UserConfig(); // \\Model\\UserConfig | \n\ntry {\n    $api_instance-\npostUserConfig($serverName, $userName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNameusersApi-\npostUserConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nuserName\n\n\nstring\n\n\nThe user name\n\n\n\n\n\n\n\n\nbody\n\n\n\\Model\\UserConfig\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\nvoid (empty response body)\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\npostUsersConfig\n\n\n\n\npostUsersConfig($serverName, $body)\n\n\n\n\nAdds a new server User to the list\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNameusersApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$body = new \\Model\\UserConfig(); // \\Model\\UserConfig | \n\ntry {\n    $api_instance-\npostUsersConfig($serverName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNameusersApi-\npostUsersConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nbody\n\n\n\\Model\\UserConfig\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\nvoid (empty response body)\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\nputUserConfig\n\n\n\n\nputUserConfig($serverName, $userName, $body)\n\n\n\n\nUpdates the specified User configuration\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNameusersApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$userName = \nuserName_example\n; // string | The user name\n$body = new \\Model\\UserConfig(); // \\Model\\UserConfig | \n\ntry {\n    $api_instance-\nputUserConfig($serverName, $userName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNameusersApi-\nputUserConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nuserName\n\n\nstring\n\n\nThe user name\n\n\n\n\n\n\n\n\nbody\n\n\n\\Model\\UserConfig\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\nvoid (empty response body)\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]", 
            "title": "VserversserverNameusersApi"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNameusersApi/#wowzaapivserversservernameusersapi", 
            "text": "All URIs are relative to  http://localhost:8087/     Method  HTTP request  Description      deleteUserConfig  DELETE  /v2/servers/{serverName}/users/{userName}  Deletes the specified User configuration    getUserConfig  GET  /v2/servers/{serverName}/users/{userName}  Retrieves the specified User configuration    getUsersConfig  GET  /v2/servers/{serverName}/users  Retrieves the list of server Users    postUserConfig  POST  /v2/servers/{serverName}/users/{userName}  Adds the specified User configuration    postUsersConfig  POST  /v2/servers/{serverName}/users  Adds a new server User to the list    putUserConfig  PUT  /v2/servers/{serverName}/users/{userName}  Updates the specified User configuration", 
            "title": "WowzaApi\\VserversserverNameusersApi"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNameusersApi/#deleteuserconfig", 
            "text": "deleteUserConfig($serverName, $userName)   Deletes the specified User configuration  This API is available in builds 15089 or later.", 
            "title": "deleteUserConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNameusersApi/#example", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNameusersApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$userName =  userName_example ; // string | The user name\n\ntry {\n    $api_instance- deleteUserConfig($serverName, $userName);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNameusersApi- deleteUserConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNameusersApi/#parameters", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     userName  string  The user name", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNameusersApi/#return-type", 
            "text": "void (empty response body)", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNameusersApi/#authorization", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNameusersApi/#http-request-headers", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNameusersApi/#getuserconfig", 
            "text": "\\Model\\UserConfig getUserConfig($serverName, $userName)   Retrieves the specified User configuration  This API is available in builds 15089 or later.", 
            "title": "getUserConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNameusersApi/#example_1", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNameusersApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$userName =  userName_example ; // string | The user name\n\ntry {\n    $result = $api_instance- getUserConfig($serverName, $userName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNameusersApi- getUserConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNameusersApi/#parameters_1", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     userName  string  The user name", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNameusersApi/#return-type_1", 
            "text": "\\Model\\UserConfig", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNameusersApi/#authorization_1", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNameusersApi/#http-request-headers_1", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNameusersApi/#getusersconfig", 
            "text": "\\Model\\UsersConfig getUsersConfig($serverName)   Retrieves the list of server Users  This API is available in builds 15089 or later.", 
            "title": "getUsersConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNameusersApi/#example_2", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNameusersApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n\ntry {\n    $result = $api_instance- getUsersConfig($serverName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNameusersApi- getUsersConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNameusersApi/#parameters_2", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNameusersApi/#return-type_2", 
            "text": "\\Model\\UsersConfig", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNameusersApi/#authorization_2", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNameusersApi/#http-request-headers_2", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNameusersApi/#postuserconfig", 
            "text": "postUserConfig($serverName, $userName, $body)   Adds the specified User configuration  This API is available in builds 15089 or later.", 
            "title": "postUserConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNameusersApi/#example_3", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNameusersApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$userName =  userName_example ; // string | The user name\n$body = new \\Model\\UserConfig(); // \\Model\\UserConfig | \n\ntry {\n    $api_instance- postUserConfig($serverName, $userName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNameusersApi- postUserConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNameusersApi/#parameters_3", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     userName  string  The user name     body  \\Model\\UserConfig", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNameusersApi/#return-type_3", 
            "text": "void (empty response body)", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNameusersApi/#authorization_3", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNameusersApi/#http-request-headers_3", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNameusersApi/#postusersconfig", 
            "text": "postUsersConfig($serverName, $body)   Adds a new server User to the list  This API is available in builds 15089 or later.", 
            "title": "postUsersConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNameusersApi/#example_4", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNameusersApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$body = new \\Model\\UserConfig(); // \\Model\\UserConfig | \n\ntry {\n    $api_instance- postUsersConfig($serverName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNameusersApi- postUsersConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNameusersApi/#parameters_4", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     body  \\Model\\UserConfig", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNameusersApi/#return-type_4", 
            "text": "void (empty response body)", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNameusersApi/#authorization_4", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNameusersApi/#http-request-headers_4", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNameusersApi/#putuserconfig", 
            "text": "putUserConfig($serverName, $userName, $body)   Updates the specified User configuration  This API is available in builds 15089 or later.", 
            "title": "putUserConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNameusersApi/#example_5", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNameusersApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$userName =  userName_example ; // string | The user name\n$body = new \\Model\\UserConfig(); // \\Model\\UserConfig | \n\ntry {\n    $api_instance- putUserConfig($serverName, $userName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNameusersApi- putUserConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNameusersApi/#parameters_5", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     userName  string  The user name     body  \\Model\\UserConfig", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNameusersApi/#return-type_5", 
            "text": "void (empty response body)", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNameusersApi/#authorization_5", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNameusersApi/#http-request-headers_5", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/", 
            "text": "WowzaApi\\VserversserverNamevhostsApi\n\n\nAll URIs are relative to \nhttp://localhost:8087/\n\n\n\n\n\n\n\n\nMethod\n\n\nHTTP request\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\ndeletePublisherVhostConfig\n\n\nDELETE\n /v2/servers/{serverName}/vhosts/{vhostName}/publishers/{publisherName}\n\n\nDeletes the specified Publisher configuration\n\n\n\n\n\n\ndeleteSDPFileConfig\n\n\nDELETE\n /v2/servers/{serverName}/vhosts/{vhostName}/sdpfiles/{sdpfileName}\n\n\nDeletes the specified SDP file\n\n\n\n\n\n\ndeleteSMILFileConfig\n\n\nDELETE\n /v2/servers/{serverName}/vhosts/{vhostName}/smilfiles/{smilfileName}\n\n\nDeletes the specified SMIL File configuration\n\n\n\n\n\n\ndeleteStartupStreamConfig\n\n\nDELETE\n /v2/servers/{serverName}/vhosts/{vhostName}/startupstreams/applications/{appName}/instances/{instanceName}/streams/{streamName}\n\n\nDeletes the specified Startup Stream configuration\n\n\n\n\n\n\ndeleteStreamFileConfig\n\n\nDELETE\n /v2/servers/{serverName}/vhosts/{vhostName}/streamfiles/{streamfileName}\n\n\nDeletes the specified Stream File configuration\n\n\n\n\n\n\ndeleteTranscoderEncodeConfig\n\n\nDELETE\n /v2/servers/{serverName}/vhosts/{vhostName}/transcoder/templates/{templateName}/encodes/{encodeName}\n\n\nDeletes the specified Trancoder Encode configuration\n\n\n\n\n\n\ndeleteTranscoderOverlayDecodeConfig\n\n\nDELETE\n /v2/servers/{serverName}/vhosts/{vhostName}/transcoder/templates/{templateName}/decode/overlays/{overlayName}\n\n\nDeletes the specified Trancoder Overlay Decode configuration\n\n\n\n\n\n\ndeleteTranscoderOverlayEncodeConfig\n\n\nDELETE\n /v2/servers/{serverName}/vhosts/{vhostName}/transcoder/templates/{templateName}/encodes/{encodeName}/overlays/{overlayName}\n\n\nDeletes the specified Trancoder Overlay Encode configuration\n\n\n\n\n\n\ndeleteTranscoderStreamNameGroupConfig\n\n\nDELETE\n /v2/servers/{serverName}/vhosts/{vhostName}/transcoder/templates/{templateName}/streamnamegroups/{groupName}\n\n\nDeletes the specified Trancoder StreamNameGroup configuration\n\n\n\n\n\n\ndeleteTranscoderTemplateConfig\n\n\nDELETE\n /v2/servers/{serverName}/vhosts/{vhostName}/transcoder/templates/{templateName}\n\n\nDeletes the specified Trancoder Template configuration\n\n\n\n\n\n\ngetCurrentVHostStatistics\n\n\nGET\n /v2/servers/{serverName}/vhosts/{vhostName}/monitoring/current\n\n\nRetrieves the current VHost statistics\n\n\n\n\n\n\ngetHistoricVHostStatistics\n\n\nGET\n /v2/servers/{serverName}/vhosts/{vhostName}/monitoring/historic\n\n\nRetrieves the historic VHost statistics\n\n\n\n\n\n\ngetHostPortConfig\n\n\nGET\n /v2/servers/{serverName}/vhosts/{vhostName}/hostports/{portname}\n\n\nRetrieves the HostPort for the specifed vhost and port\n\n\n\n\n\n\ngetHostPortConfigAdv\n\n\nGET\n /v2/servers/{serverName}/vhosts/{vhostName}/hostports/{portname}/adv\n\n\nRetrieves the advanced HostPort configuration for the specified vhost and port\n\n\n\n\n\n\ngetHostPortsConfig\n\n\nGET\n /v2/servers/{serverName}/vhosts/{vhostName}/hostports\n\n\nRetrieves the list of server HostPorts for the specified vhost\n\n\n\n\n\n\ngetHostportsTuneConfig\n\n\nGET\n /v2/servers/{serverName}/vhosts/{vhostName}/tunehostports\n\n\nRetrieves the host port configuration used for server tuning for the specified vhost\n\n\n\n\n\n\ngetMediaCacheStoreList\n\n\nGET\n /v2/servers/{serverName}/vhosts/{vhostName}/mediacache/stores\n\n\nRetrieves all entries in the MediaCache system\n\n\n\n\n\n\ngetPublisherVhostConfig\n\n\nGET\n /v2/servers/{serverName}/vhosts/{vhostName}/publishers/{publisherName}\n\n\nRetrieves the specified Publisher configuration\n\n\n\n\n\n\ngetPublishersVhostConfig\n\n\nGET\n /v2/servers/{serverName}/vhosts/{vhostName}/publishers\n\n\nRetrieves the list of Publishers for the specified VHost\n\n\n\n\n\n\ngetSDPFilesConfig\n\n\nGET\n /v2/servers/{serverName}/vhosts/{vhostName}/sdpfiles\n\n\nRetrieves the list of SDP Files for the specified VHost\n\n\n\n\n\n\ngetSMILFileConfig\n\n\nGET\n /v2/servers/{serverName}/vhosts/{vhostName}/smilfiles/{smilfileName}\n\n\nRetrieves the specified SMIL File configuration\n\n\n\n\n\n\ngetSMILFilesConfig\n\n\nGET\n /v2/servers/{serverName}/vhosts/{vhostName}/smilfiles\n\n\nRetrieves the list of SMIL Files for the specified VHost\n\n\n\n\n\n\ngetSSLConfig\n\n\nGET\n /v2/servers/{serverName}/vhosts/{vhostName}/hostports/{portname}/ssl\n\n\nRetrieves the SSL configuration for the specified vhost and port\n\n\n\n\n\n\ngetStartupStreamConfig\n\n\nGET\n /v2/servers/{serverName}/vhosts/{vhostName}/startupstreams/applications/{appName}/instances/{instanceName}/streams/{streamName}\n\n\nRetrieves the specified Startup Stream configuration\n\n\n\n\n\n\ngetStartupStreamsConfig\n\n\nGET\n /v2/servers/{serverName}/vhosts/{vhostName}/startupstreams\n\n\nRetrieves the list of Startup Streams for the specified VHost\n\n\n\n\n\n\ngetStreamFileConfig\n\n\nGET\n /v2/servers/{serverName}/vhosts/{vhostName}/streamfiles/{streamfileName}\n\n\nRetrieves the specified Stream File configuration\n\n\n\n\n\n\ngetStreamFileConfigAdv\n\n\nGET\n /v2/servers/{serverName}/vhosts/{vhostName}/streamfiles/{streamfileName}/adv\n\n\nRetrieves the Advanced Stream File configuration\n\n\n\n\n\n\ngetStreamFilesConfig\n\n\nGET\n /v2/servers/{serverName}/vhosts/{vhostName}/streamfiles\n\n\nRetrieves the list of Stream Files for the specified VHost\n\n\n\n\n\n\ngetTranscoderConfig\n\n\nGET\n /v2/servers/{serverName}/vhosts/{vhostName}/transcoder\n\n\nRetrieves the Transcoder configuration for the specified VHost\n\n\n\n\n\n\ngetTranscoderEncodeConfig\n\n\nGET\n /v2/servers/{serverName}/vhosts/{vhostName}/transcoder/templates/{templateName}/encodes/{encodeName}\n\n\nRetrieves the specified Trancoder Encode configuration\n\n\n\n\n\n\ngetTranscoderEncodeConfigAdv\n\n\nGET\n /v2/servers/{serverName}/vhosts/{vhostName}/transcoder/templates/{templateName}/encodes/{encodeName}/adv\n\n\nRetrieves the Advanced Transcoder Encode configuration\n\n\n\n\n\n\ngetTranscoderEncodesConfig\n\n\nGET\n /v2/servers/{serverName}/vhosts/{vhostName}/transcoder/templates/{templateName}/encodes\n\n\nRetrieves the list of Transcoder Encode Configurations for the specified VHost\n\n\n\n\n\n\ngetTranscoderOverlayDecodeConfig\n\n\nGET\n /v2/servers/{serverName}/vhosts/{vhostName}/transcoder/templates/{templateName}/decode/overlays/{overlayName}\n\n\nRetrieves the specified Trancoder Overlay Decode configuration\n\n\n\n\n\n\ngetTranscoderOverlayEncodeConfig\n\n\nGET\n /v2/servers/{serverName}/vhosts/{vhostName}/transcoder/templates/{templateName}/encodes/{encodeName}/overlays/{overlayName}\n\n\nRetrieves the specified Trancoder Overlay Encode configuration\n\n\n\n\n\n\ngetTranscoderStreamNameGroupConfig\n\n\nGET\n /v2/servers/{serverName}/vhosts/{vhostName}/transcoder/templates/{templateName}/streamnamegroups/{groupName}\n\n\nRetrieves the specified Trancoder StreamNameGroup configuration\n\n\n\n\n\n\ngetTranscoderStreamNameGroupsConfig\n\n\nGET\n /v2/servers/{serverName}/vhosts/{vhostName}/transcoder/templates/{templateName}/streamnamegroups\n\n\nRetrieves the list of Transcoder Stream Name Groups for the specified Template\n\n\n\n\n\n\ngetTranscoderTemplateConfig\n\n\nGET\n /v2/servers/{serverName}/vhosts/{vhostName}/transcoder/templates/{templateName}\n\n\nRetrieves the specified Trancoder Template configuration\n\n\n\n\n\n\ngetTranscoderTemplateConfigAdv\n\n\nGET\n /v2/servers/{serverName}/vhosts/{vhostName}/transcoder/templates/{templateName}/adv\n\n\nRetrieves the Advanced Transcoder Template configuration\n\n\n\n\n\n\ngetTranscoderTemplatesConfig\n\n\nGET\n /v2/servers/{serverName}/vhosts/{vhostName}/transcoder/templates\n\n\nRetrieves the list of Transcoder Template Configurations for the specified VHost\n\n\n\n\n\n\ngetVHostConfig\n\n\nGET\n /v2/servers/{serverName}/vhosts/{vhostName}\n\n\nRetrieves the specified VHost configuration\n\n\n\n\n\n\ngetVHostConfigAdv\n\n\nGET\n /v2/servers/{serverName}/vhosts/{vhostName}/adv\n\n\nRetrieves the specified advanced VHost configuration\n\n\n\n\n\n\ngetVHostTuneConfig\n\n\nGET\n /v2/servers/{serverName}/vhosts/{vhostName}/tune\n\n\nRetrieves the Tuning configuration for the specifed vhost\n\n\n\n\n\n\ngetVHostsConfig\n\n\nGET\n /v2/servers/{serverName}/vhosts\n\n\nRetrieves the list of VHosts\n\n\n\n\n\n\npostPublisherVhostConfig\n\n\nPOST\n /v2/servers/{serverName}/vhosts/{vhostName}/publishers/{publisherName}\n\n\nAdds the specified Publisher configuration\n\n\n\n\n\n\npostPublishersVhostConfig\n\n\nPOST\n /v2/servers/{serverName}/vhosts/{vhostName}/publishers\n\n\nAdd a Publisher to list of Publishers for the specified VHost\n\n\n\n\n\n\npostSMILFileConfig\n\n\nPOST\n /v2/servers/{serverName}/vhosts/{vhostName}/smilfiles/{smilfileName}\n\n\nAdds the specified SMIL File configuration\n\n\n\n\n\n\npostSMILFilesConfig\n\n\nPOST\n /v2/servers/{serverName}/vhosts/{vhostName}/smilfiles\n\n\nAdds a SMIL File to the list of SMIL Files for the specified VHost\n\n\n\n\n\n\npostStartupStreamConfig\n\n\nPOST\n /v2/servers/{serverName}/vhosts/{vhostName}/startupstreams/applications/{appName}/instances/{instanceName}/streams/{streamName}\n\n\nAdds the specified Startup Stream configuration\n\n\n\n\n\n\npostStartupStreamsConfig\n\n\nPOST\n /v2/servers/{serverName}/vhosts/{vhostName}/startupstreams\n\n\nAdds a Startup Stream to the list of Startup Streams for the specified VHost\n\n\n\n\n\n\npostStreamFileConfig\n\n\nPOST\n /v2/servers/{serverName}/vhosts/{vhostName}/streamfiles/{streamfileName}\n\n\nAdds the specified Stream File configuration\n\n\n\n\n\n\npostStreamFilesConfig\n\n\nPOST\n /v2/servers/{serverName}/vhosts/{vhostName}/streamfiles\n\n\nAdds a Stream File to the list of Stream Files for the specified VHost\n\n\n\n\n\n\npostTranscoderEncodeConfig\n\n\nPOST\n /v2/servers/{serverName}/vhosts/{vhostName}/transcoder/templates/{templateName}/encodes/{encodeName}\n\n\nAdds the specified Trancoder Encode configuration\n\n\n\n\n\n\npostTranscoderEncodesConfig\n\n\nPOST\n /v2/servers/{serverName}/vhosts/{vhostName}/transcoder/templates/{templateName}/encodes\n\n\nAdds a Transcoder Encode Configuration to the specified VHost\n\n\n\n\n\n\npostTranscoderStreamNameGroupConfig\n\n\nPOST\n /v2/servers/{serverName}/vhosts/{vhostName}/transcoder/templates/{templateName}/streamnamegroups/{groupName}\n\n\nAdds the specified Trancoder StreamNameGroup configuration\n\n\n\n\n\n\npostTranscoderStreamNameGroupsConfig\n\n\nPOST\n /v2/servers/{serverName}/vhosts/{vhostName}/transcoder/templates/{templateName}/streamnamegroups\n\n\nAdds a Transcoder Stream Name Groups Configuration to the specified Template\n\n\n\n\n\n\npostTranscoderTemplateConfig\n\n\nPOST\n /v2/servers/{serverName}/vhosts/{vhostName}/transcoder/templates/{templateName}\n\n\nAdds the specified Trancoder Template configuration\n\n\n\n\n\n\npostTranscoderTemplatesConfig\n\n\nPOST\n /v2/servers/{serverName}/vhosts/{vhostName}/transcoder/templates\n\n\nAdds a Transcoder Templates Configuration to the specified VHost\n\n\n\n\n\n\nputHostPortConfigAdv\n\n\nPUT\n /v2/servers/{serverName}/vhosts/{vhostName}/hostports/{portname}/adv\n\n\n\n\n\n\n\n\nputHostportsTuneConfig\n\n\nPUT\n /v2/servers/{serverName}/vhosts/{vhostName}/tunehostports\n\n\nUpdates the host port configuration used for server tuning for the specified vhost\n\n\n\n\n\n\nputMediaCacheStoreAction\n\n\nPUT\n /v2/servers/{serverName}/vhosts/{vhostName}/mediacache/stores/actions/{action}\n\n\n\n\n\n\n\n\nputPublisherVhostConfig\n\n\nPUT\n /v2/servers/{serverName}/vhosts/{vhostName}/publishers/{publisherName}\n\n\nUpdates the specified Publisher configuration\n\n\n\n\n\n\nputSDPFileAction\n\n\nPUT\n /v2/servers/{serverName}/vhosts/{vhostName}/sdpfiles/{sdpfileName}/actions/{action}\n\n\n\n\n\n\n\n\nputSMILFileAction\n\n\nPUT\n /v2/servers/{serverName}/vhosts/{vhostName}/smilfiles/{smilfileName}/actions/{action}\n\n\n\n\n\n\n\n\nputSMILFileConfig\n\n\nPUT\n /v2/servers/{serverName}/vhosts/{vhostName}/smilfiles/{smilfileName}\n\n\nUpdates the specified SMIL File configuration\n\n\n\n\n\n\nputSSLConfig\n\n\nPUT\n /v2/servers/{serverName}/vhosts/{vhostName}/hostports/{portname}/ssl\n\n\nUpdates the SSL configuration for the specified vhost and port\n\n\n\n\n\n\nputStartupStreamConfig\n\n\nPUT\n /v2/servers/{serverName}/vhosts/{vhostName}/startupstreams/applications/{appName}/instances/{instanceName}/streams/{streamName}\n\n\nUpdates the specified Startup Stream configuration\n\n\n\n\n\n\nputStreamFileAction\n\n\nPUT\n /v2/servers/{serverName}/vhosts/{vhostName}/streamfiles/{streamfileName}/actions/{action}\n\n\n\n\n\n\n\n\nputStreamFileConfig\n\n\nPUT\n /v2/servers/{serverName}/vhosts/{vhostName}/streamfiles/{streamfileName}\n\n\nUpdates the specified Stream File configuration\n\n\n\n\n\n\nputStreamFileConfigAdv\n\n\nPUT\n /v2/servers/{serverName}/vhosts/{vhostName}/streamfiles/{streamfileName}/adv\n\n\nUpdates the Advanced Stream File configuration\n\n\n\n\n\n\nputTranscoderConfig\n\n\nPUT\n /v2/servers/{serverName}/vhosts/{vhostName}/transcoder\n\n\nUpdates the Transcoder configuration for the specified VHost\n\n\n\n\n\n\nputTranscoderEncodeConfig\n\n\nPUT\n /v2/servers/{serverName}/vhosts/{vhostName}/transcoder/templates/{templateName}/encodes/{encodeName}\n\n\nUpdates the specified Trancoder Encode configuration\n\n\n\n\n\n\nputTranscoderEncodeConfigAdv\n\n\nPUT\n /v2/servers/{serverName}/vhosts/{vhostName}/transcoder/templates/{templateName}/encodes/{encodeName}/adv\n\n\nUpdates the Advanced Transcoder Encode configuration\n\n\n\n\n\n\nputTranscoderOverlayDecodeConfig\n\n\nPUT\n /v2/servers/{serverName}/vhosts/{vhostName}/transcoder/templates/{templateName}/decode/overlays/{overlayName}\n\n\nUpdates the specified Trancoder Overlay Decode configuration\n\n\n\n\n\n\nputTranscoderOverlayEncodeConfig\n\n\nPUT\n /v2/servers/{serverName}/vhosts/{vhostName}/transcoder/templates/{templateName}/encodes/{encodeName}/overlays/{overlayName}\n\n\nUpdates the specified Trancoder Overlay Encode configuration\n\n\n\n\n\n\nputTranscoderStreamNameGroupConfig\n\n\nPUT\n /v2/servers/{serverName}/vhosts/{vhostName}/transcoder/templates/{templateName}/streamnamegroups/{groupName}\n\n\nUpdates the specified Trancoder StreamNameGroup configuration\n\n\n\n\n\n\nputTranscoderTemplateAction\n\n\nPUT\n /v2/servers/{serverName}/vhosts/{vhostName}/transcoder/templates/{templateName}/actions/{action}\n\n\n\n\n\n\n\n\nputTranscoderTemplateConfig\n\n\nPUT\n /v2/servers/{serverName}/vhosts/{vhostName}/transcoder/templates/{templateName}\n\n\nUpdates the specified Trancoder Template configuration\n\n\n\n\n\n\nputTranscoderTemplateConfigAdv\n\n\nPUT\n /v2/servers/{serverName}/vhosts/{vhostName}/transcoder/templates/{templateName}/adv\n\n\nUpdates the Advanced Transcoder Template configuration\n\n\n\n\n\n\nputVHostAction\n\n\nPUT\n /v2/servers/{serverName}/vhosts/{vhostName}/actions/{action}\n\n\n\n\n\n\n\n\nputVHostConfig\n\n\nPUT\n /v2/servers/{serverName}/vhosts/{vhostName}\n\n\nUpdates the specified VHost configuration\n\n\n\n\n\n\nputVHostConfigAdv\n\n\nPUT\n /v2/servers/{serverName}/vhosts/{vhostName}/adv\n\n\nUpdates the specified advanced VHost configuration\n\n\n\n\n\n\nputVHostTuneConfig\n\n\nPUT\n /v2/servers/{serverName}/vhosts/{vhostName}/tune\n\n\nUpdates the Tuning configuration for the specifed vhost\n\n\n\n\n\n\n\n\ndeletePublisherVhostConfig\n\n\n\n\ndeletePublisherVhostConfig($serverName, $vhostName, $publisherName)\n\n\n\n\nDeletes the specified Publisher configuration\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | The vhost name\n$publisherName = \npublisherName_example\n; // string | The publisher name\n\ntry {\n    $api_instance-\ndeletePublisherVhostConfig($serverName, $vhostName, $publisherName);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsApi-\ndeletePublisherVhostConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\nThe vhost name\n\n\n\n\n\n\n\n\npublisherName\n\n\nstring\n\n\nThe publisher name\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\nvoid (empty response body)\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\ndeleteSDPFileConfig\n\n\n\n\ndeleteSDPFileConfig($serverName, $vhostName, $sdpfileName)\n\n\n\n\nDeletes the specified SDP file\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | \n$sdpfileName = \nsdpfileName_example\n; // string | The SDP file name without the extension\n\ntry {\n    $api_instance-\ndeleteSDPFileConfig($serverName, $vhostName, $sdpfileName);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsApi-\ndeleteSDPFileConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nsdpfileName\n\n\nstring\n\n\nThe SDP file name without the extension\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\nvoid (empty response body)\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\ndeleteSMILFileConfig\n\n\n\n\ndeleteSMILFileConfig($serverName, $vhostName, $smilfileName)\n\n\n\n\nDeletes the specified SMIL File configuration\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | \n$smilfileName = \nsmilfileName_example\n; // string | The SMIL file name without the extension\n\ntry {\n    $api_instance-\ndeleteSMILFileConfig($serverName, $vhostName, $smilfileName);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsApi-\ndeleteSMILFileConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nsmilfileName\n\n\nstring\n\n\nThe SMIL file name without the extension\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\nvoid (empty response body)\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\ndeleteStartupStreamConfig\n\n\n\n\ndeleteStartupStreamConfig($serverName, $vhostName, $streamName, $appName, $instanceName)\n\n\n\n\nDeletes the specified Startup Stream configuration\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | \n$streamName = \nstreamName_example\n; // string | \n$appName = \nappName_example\n; // string | \n$instanceName = \ninstanceName_example\n; // string | \n\ntry {\n    $api_instance-\ndeleteStartupStreamConfig($serverName, $vhostName, $streamName, $appName, $instanceName);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsApi-\ndeleteStartupStreamConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nstreamName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nappName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ninstanceName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\nvoid (empty response body)\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\ndeleteStreamFileConfig\n\n\n\n\ndeleteStreamFileConfig($serverName, $vhostName, $streamfileName)\n\n\n\n\nDeletes the specified Stream File configuration\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | \n$streamfileName = \nstreamfileName_example\n; // string | The stream file name without the extension\n\ntry {\n    $api_instance-\ndeleteStreamFileConfig($serverName, $vhostName, $streamfileName);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsApi-\ndeleteStreamFileConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nstreamfileName\n\n\nstring\n\n\nThe stream file name without the extension\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\nvoid (empty response body)\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\ndeleteTranscoderEncodeConfig\n\n\n\n\ndeleteTranscoderEncodeConfig($serverName, $vhostName, $templateName, $encodeName)\n\n\n\n\nDeletes the specified Trancoder Encode configuration\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | \n$templateName = \ntemplateName_example\n; // string | \n$encodeName = \nencodeName_example\n; // string | \n\ntry {\n    $api_instance-\ndeleteTranscoderEncodeConfig($serverName, $vhostName, $templateName, $encodeName);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsApi-\ndeleteTranscoderEncodeConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ntemplateName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nencodeName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\nvoid (empty response body)\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\ndeleteTranscoderOverlayDecodeConfig\n\n\n\n\ndeleteTranscoderOverlayDecodeConfig($serverName, $vhostName, $templateName, $overlayName)\n\n\n\n\nDeletes the specified Trancoder Overlay Decode configuration\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | \n$templateName = \ntemplateName_example\n; // string | \n$overlayName = \noverlayName_example\n; // string | \n\ntry {\n    $api_instance-\ndeleteTranscoderOverlayDecodeConfig($serverName, $vhostName, $templateName, $overlayName);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsApi-\ndeleteTranscoderOverlayDecodeConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ntemplateName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\noverlayName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\nvoid (empty response body)\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\ndeleteTranscoderOverlayEncodeConfig\n\n\n\n\ndeleteTranscoderOverlayEncodeConfig($serverName, $vhostName, $templateName, $overlayName, $encodeName)\n\n\n\n\nDeletes the specified Trancoder Overlay Encode configuration\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | \n$templateName = \ntemplateName_example\n; // string | \n$overlayName = \noverlayName_example\n; // string | \n$encodeName = \nencodeName_example\n; // string | \n\ntry {\n    $api_instance-\ndeleteTranscoderOverlayEncodeConfig($serverName, $vhostName, $templateName, $overlayName, $encodeName);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsApi-\ndeleteTranscoderOverlayEncodeConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ntemplateName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\noverlayName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nencodeName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\nvoid (empty response body)\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\ndeleteTranscoderStreamNameGroupConfig\n\n\n\n\ndeleteTranscoderStreamNameGroupConfig($serverName, $vhostName, $templateName, $groupName)\n\n\n\n\nDeletes the specified Trancoder StreamNameGroup configuration\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | \n$templateName = \ntemplateName_example\n; // string | \n$groupName = \ngroupName_example\n; // string | \n\ntry {\n    $api_instance-\ndeleteTranscoderStreamNameGroupConfig($serverName, $vhostName, $templateName, $groupName);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsApi-\ndeleteTranscoderStreamNameGroupConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ntemplateName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ngroupName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\nvoid (empty response body)\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\ndeleteTranscoderTemplateConfig\n\n\n\n\ndeleteTranscoderTemplateConfig($serverName, $vhostName, $templateName)\n\n\n\n\nDeletes the specified Trancoder Template configuration\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | \n$templateName = \ntemplateName_example\n; // string | \n\ntry {\n    $api_instance-\ndeleteTranscoderTemplateConfig($serverName, $vhostName, $templateName);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsApi-\ndeleteTranscoderTemplateConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ntemplateName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\nvoid (empty response body)\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\ngetCurrentVHostStatistics\n\n\n\n\n\\Model\\CurrentVHostStatistics getCurrentVHostStatistics($serverName, $vhostName)\n\n\n\n\nRetrieves the current VHost statistics\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | \n\ntry {\n    $result = $api_instance-\ngetCurrentVHostStatistics($serverName, $vhostName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsApi-\ngetCurrentVHostStatistics: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\n\\Model\\CurrentVHostStatistics\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\ngetHistoricVHostStatistics\n\n\n\n\n\\Model\\HistoricVHostStatistics getHistoricVHostStatistics($serverName, $vhostName)\n\n\n\n\nRetrieves the historic VHost statistics\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | \n\ntry {\n    $result = $api_instance-\ngetHistoricVHostStatistics($serverName, $vhostName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsApi-\ngetHistoricVHostStatistics: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\n\\Model\\HistoricVHostStatistics\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\ngetHostPortConfig\n\n\n\n\n\\Model\\HostPortConfig getHostPortConfig($serverName, $vhostName, $portname)\n\n\n\n\nRetrieves the HostPort for the specifed vhost and port\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | \n$portname = \nportname_example\n; // string | The port name\n\ntry {\n    $result = $api_instance-\ngetHostPortConfig($serverName, $vhostName, $portname);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsApi-\ngetHostPortConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nportname\n\n\nstring\n\n\nThe port name\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\n\\Model\\HostPortConfig\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\ngetHostPortConfigAdv\n\n\n\n\n\\Model\\HostPortConfigAdv getHostPortConfigAdv($serverName, $vhostName, $portname)\n\n\n\n\nRetrieves the advanced HostPort configuration for the specified vhost and port\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | \n$portname = \nportname_example\n; // string | The port name\n\ntry {\n    $result = $api_instance-\ngetHostPortConfigAdv($serverName, $vhostName, $portname);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsApi-\ngetHostPortConfigAdv: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nportname\n\n\nstring\n\n\nThe port name\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\n\\Model\\HostPortConfigAdv\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\ngetHostPortsConfig\n\n\n\n\n\\Model\\HostPortsConfig getHostPortsConfig($serverName, $vhostName)\n\n\n\n\nRetrieves the list of server HostPorts for the specified vhost\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | \n\ntry {\n    $result = $api_instance-\ngetHostPortsConfig($serverName, $vhostName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsApi-\ngetHostPortsConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\n\\Model\\HostPortsConfig\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\ngetHostportsTuneConfig\n\n\n\n\n\\Model\\HostportsTuneConfig getHostportsTuneConfig($serverName, $vhostName)\n\n\n\n\nRetrieves the host port configuration used for server tuning for the specified vhost\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | The vhost name\n\ntry {\n    $result = $api_instance-\ngetHostportsTuneConfig($serverName, $vhostName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsApi-\ngetHostportsTuneConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\nThe vhost name\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\n\\Model\\HostportsTuneConfig\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\ngetMediaCacheStoreList\n\n\n\n\n\\Model\\MediaCacheStoreList getMediaCacheStoreList($serverName, $vhostName)\n\n\n\n\nRetrieves all entries in the MediaCache system\n\n\nThis API is available in builds 15942 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | \n\ntry {\n    $result = $api_instance-\ngetMediaCacheStoreList($serverName, $vhostName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsApi-\ngetMediaCacheStoreList: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\n\\Model\\MediaCacheStoreList\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\ngetPublisherVhostConfig\n\n\n\n\n\\Model\\PublisherVhostConfig getPublisherVhostConfig($serverName, $vhostName, $publisherName)\n\n\n\n\nRetrieves the specified Publisher configuration\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | The vhost name\n$publisherName = \npublisherName_example\n; // string | The publisher name\n\ntry {\n    $result = $api_instance-\ngetPublisherVhostConfig($serverName, $vhostName, $publisherName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsApi-\ngetPublisherVhostConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\nThe vhost name\n\n\n\n\n\n\n\n\npublisherName\n\n\nstring\n\n\nThe publisher name\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\n\\Model\\PublisherVhostConfig\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\ngetPublishersVhostConfig\n\n\n\n\n\\Model\\PublishersVhostConfig getPublishersVhostConfig($serverName, $vhostName)\n\n\n\n\nRetrieves the list of Publishers for the specified VHost\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | The vhost name\n\ntry {\n    $result = $api_instance-\ngetPublishersVhostConfig($serverName, $vhostName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsApi-\ngetPublishersVhostConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\nThe vhost name\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\n\\Model\\PublishersVhostConfig\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\ngetSDPFilesConfig\n\n\n\n\n\\Model\\SDPFilesConfig getSDPFilesConfig($serverName, $vhostName)\n\n\n\n\nRetrieves the list of SDP Files for the specified VHost\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | \n\ntry {\n    $result = $api_instance-\ngetSDPFilesConfig($serverName, $vhostName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsApi-\ngetSDPFilesConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\n\\Model\\SDPFilesConfig\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\ngetSMILFileConfig\n\n\n\n\n\\Model\\SMILFileConfig getSMILFileConfig($serverName, $vhostName, $smilfileName)\n\n\n\n\nRetrieves the specified SMIL File configuration\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | \n$smilfileName = \nsmilfileName_example\n; // string | The SMIL file name without the extension\n\ntry {\n    $result = $api_instance-\ngetSMILFileConfig($serverName, $vhostName, $smilfileName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsApi-\ngetSMILFileConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nsmilfileName\n\n\nstring\n\n\nThe SMIL file name without the extension\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\n\\Model\\SMILFileConfig\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\ngetSMILFilesConfig\n\n\n\n\n\\Model\\SMILFilesConfig getSMILFilesConfig($serverName, $vhostName)\n\n\n\n\nRetrieves the list of SMIL Files for the specified VHost\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | The name of the current VHost the action will be performed on\n\ntry {\n    $result = $api_instance-\ngetSMILFilesConfig($serverName, $vhostName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsApi-\ngetSMILFilesConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\nThe name of the current VHost the action will be performed on\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\n\\Model\\SMILFilesConfig\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\ngetSSLConfig\n\n\n\n\n\\Model\\SSLConfig getSSLConfig($serverName, $vhostName, $portname)\n\n\n\n\nRetrieves the SSL configuration for the specified vhost and port\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | \n$portname = \nportname_example\n; // string | The port name\n\ntry {\n    $result = $api_instance-\ngetSSLConfig($serverName, $vhostName, $portname);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsApi-\ngetSSLConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nportname\n\n\nstring\n\n\nThe port name\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\n\\Model\\SSLConfig\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\ngetStartupStreamConfig\n\n\n\n\n\\Model\\StartupStreamConfig getStartupStreamConfig($serverName, $vhostName, $streamName, $appName, $instanceName)\n\n\n\n\nRetrieves the specified Startup Stream configuration\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | \n$streamName = \nstreamName_example\n; // string | \n$appName = \nappName_example\n; // string | \n$instanceName = \ninstanceName_example\n; // string | \n\ntry {\n    $result = $api_instance-\ngetStartupStreamConfig($serverName, $vhostName, $streamName, $appName, $instanceName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsApi-\ngetStartupStreamConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nstreamName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nappName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ninstanceName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\n\\Model\\StartupStreamConfig\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\ngetStartupStreamsConfig\n\n\n\n\n\\Model\\StartupStreamsConfig getStartupStreamsConfig($serverName, $vhostName)\n\n\n\n\nRetrieves the list of Startup Streams for the specified VHost\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | \n\ntry {\n    $result = $api_instance-\ngetStartupStreamsConfig($serverName, $vhostName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsApi-\ngetStartupStreamsConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\n\\Model\\StartupStreamsConfig\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\ngetStreamFileConfig\n\n\n\n\n\\Model\\StreamFileConfig getStreamFileConfig($serverName, $vhostName, $streamfileName)\n\n\n\n\nRetrieves the specified Stream File configuration\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | \n$streamfileName = \nstreamfileName_example\n; // string | The stream file name without the extension\n\ntry {\n    $result = $api_instance-\ngetStreamFileConfig($serverName, $vhostName, $streamfileName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsApi-\ngetStreamFileConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nstreamfileName\n\n\nstring\n\n\nThe stream file name without the extension\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\n\\Model\\StreamFileConfig\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\ngetStreamFileConfigAdv\n\n\n\n\n\\Model\\StreamFileConfigAdv getStreamFileConfigAdv($serverName, $vhostName, $streamfileName)\n\n\n\n\nRetrieves the Advanced Stream File configuration\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | \n$streamfileName = \nstreamfileName_example\n; // string | The stream file name without the .stream extension\n\ntry {\n    $result = $api_instance-\ngetStreamFileConfigAdv($serverName, $vhostName, $streamfileName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsApi-\ngetStreamFileConfigAdv: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nstreamfileName\n\n\nstring\n\n\nThe stream file name without the .stream extension\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\n\\Model\\StreamFileConfigAdv\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\ngetStreamFilesConfig\n\n\n\n\n\\Model\\StreamFilesConfig getStreamFilesConfig($serverName, $vhostName)\n\n\n\n\nRetrieves the list of Stream Files for the specified VHost\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | \n\ntry {\n    $result = $api_instance-\ngetStreamFilesConfig($serverName, $vhostName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsApi-\ngetStreamFilesConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\n\\Model\\StreamFilesConfig\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\ngetTranscoderConfig\n\n\n\n\n\\Model\\TranscoderConfig getTranscoderConfig($serverName, $vhostName)\n\n\n\n\nRetrieves the Transcoder configuration for the specified VHost\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | \n\ntry {\n    $result = $api_instance-\ngetTranscoderConfig($serverName, $vhostName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsApi-\ngetTranscoderConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\n\\Model\\TranscoderConfig\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\ngetTranscoderEncodeConfig\n\n\n\n\n\\Model\\TranscoderEncodeConfig getTranscoderEncodeConfig($serverName, $vhostName, $templateName, $encodeName)\n\n\n\n\nRetrieves the specified Trancoder Encode configuration\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | \n$templateName = \ntemplateName_example\n; // string | \n$encodeName = \nencodeName_example\n; // string | \n\ntry {\n    $result = $api_instance-\ngetTranscoderEncodeConfig($serverName, $vhostName, $templateName, $encodeName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsApi-\ngetTranscoderEncodeConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ntemplateName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nencodeName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\n\\Model\\TranscoderEncodeConfig\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\ngetTranscoderEncodeConfigAdv\n\n\n\n\n\\Model\\TranscoderEncodeConfigAdv getTranscoderEncodeConfigAdv($serverName, $vhostName, $templateName, $encodeName)\n\n\n\n\nRetrieves the Advanced Transcoder Encode configuration\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | \n$templateName = \ntemplateName_example\n; // string | \n$encodeName = \nencodeName_example\n; // string | \n\ntry {\n    $result = $api_instance-\ngetTranscoderEncodeConfigAdv($serverName, $vhostName, $templateName, $encodeName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsApi-\ngetTranscoderEncodeConfigAdv: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ntemplateName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nencodeName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\n\\Model\\TranscoderEncodeConfigAdv\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\ngetTranscoderEncodesConfig\n\n\n\n\n\\Model\\TranscoderEncodesConfig getTranscoderEncodesConfig($serverName, $vhostName, $templateName)\n\n\n\n\nRetrieves the list of Transcoder Encode Configurations for the specified VHost\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | \n$templateName = \ntemplateName_example\n; // string | \n\ntry {\n    $result = $api_instance-\ngetTranscoderEncodesConfig($serverName, $vhostName, $templateName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsApi-\ngetTranscoderEncodesConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ntemplateName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\n\\Model\\TranscoderEncodesConfig\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\ngetTranscoderOverlayDecodeConfig\n\n\n\n\n\\Model\\TranscoderOverlayDecodeConfig getTranscoderOverlayDecodeConfig($serverName, $vhostName, $templateName, $overlayName)\n\n\n\n\nRetrieves the specified Trancoder Overlay Decode configuration\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | \n$templateName = \ntemplateName_example\n; // string | \n$overlayName = \noverlayName_example\n; // string | \n\ntry {\n    $result = $api_instance-\ngetTranscoderOverlayDecodeConfig($serverName, $vhostName, $templateName, $overlayName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsApi-\ngetTranscoderOverlayDecodeConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ntemplateName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\noverlayName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\n\\Model\\TranscoderOverlayDecodeConfig\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\ngetTranscoderOverlayEncodeConfig\n\n\n\n\n\\Model\\TranscoderOverlayEncodeConfig getTranscoderOverlayEncodeConfig($serverName, $vhostName, $templateName, $overlayName, $encodeName)\n\n\n\n\nRetrieves the specified Trancoder Overlay Encode configuration\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | \n$templateName = \ntemplateName_example\n; // string | \n$overlayName = \noverlayName_example\n; // string | \n$encodeName = \nencodeName_example\n; // string | \n\ntry {\n    $result = $api_instance-\ngetTranscoderOverlayEncodeConfig($serverName, $vhostName, $templateName, $overlayName, $encodeName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsApi-\ngetTranscoderOverlayEncodeConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ntemplateName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\noverlayName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nencodeName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\n\\Model\\TranscoderOverlayEncodeConfig\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\ngetTranscoderStreamNameGroupConfig\n\n\n\n\n\\Model\\TranscoderStreamNameGroupConfig getTranscoderStreamNameGroupConfig($serverName, $vhostName, $templateName, $groupName)\n\n\n\n\nRetrieves the specified Trancoder StreamNameGroup configuration\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | \n$templateName = \ntemplateName_example\n; // string | \n$groupName = \ngroupName_example\n; // string | \n\ntry {\n    $result = $api_instance-\ngetTranscoderStreamNameGroupConfig($serverName, $vhostName, $templateName, $groupName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsApi-\ngetTranscoderStreamNameGroupConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ntemplateName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ngroupName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\n\\Model\\TranscoderStreamNameGroupConfig\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\ngetTranscoderStreamNameGroupsConfig\n\n\n\n\n\\Model\\TranscoderStreamNameGroupsConfig getTranscoderStreamNameGroupsConfig($serverName, $vhostName, $templateName)\n\n\n\n\nRetrieves the list of Transcoder Stream Name Groups for the specified Template\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | \n$templateName = \ntemplateName_example\n; // string | \n\ntry {\n    $result = $api_instance-\ngetTranscoderStreamNameGroupsConfig($serverName, $vhostName, $templateName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsApi-\ngetTranscoderStreamNameGroupsConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ntemplateName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\n\\Model\\TranscoderStreamNameGroupsConfig\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\ngetTranscoderTemplateConfig\n\n\n\n\n\\Model\\TranscoderTemplateConfig getTranscoderTemplateConfig($serverName, $vhostName, $templateName)\n\n\n\n\nRetrieves the specified Trancoder Template configuration\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | \n$templateName = \ntemplateName_example\n; // string | \n\ntry {\n    $result = $api_instance-\ngetTranscoderTemplateConfig($serverName, $vhostName, $templateName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsApi-\ngetTranscoderTemplateConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ntemplateName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\n\\Model\\TranscoderTemplateConfig\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\ngetTranscoderTemplateConfigAdv\n\n\n\n\n\\Model\\TranscoderTemplateConfigAdv getTranscoderTemplateConfigAdv($serverName, $vhostName, $templateName)\n\n\n\n\nRetrieves the Advanced Transcoder Template configuration\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | \n$templateName = \ntemplateName_example\n; // string | \n\ntry {\n    $result = $api_instance-\ngetTranscoderTemplateConfigAdv($serverName, $vhostName, $templateName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsApi-\ngetTranscoderTemplateConfigAdv: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ntemplateName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\n\\Model\\TranscoderTemplateConfigAdv\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\ngetTranscoderTemplatesConfig\n\n\n\n\n\\Model\\TranscoderTemplatesConfig getTranscoderTemplatesConfig($serverName, $vhostName)\n\n\n\n\nRetrieves the list of Transcoder Template Configurations for the specified VHost\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | The name of the current VHost the action will be performed on\n\ntry {\n    $result = $api_instance-\ngetTranscoderTemplatesConfig($serverName, $vhostName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsApi-\ngetTranscoderTemplatesConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\nThe name of the current VHost the action will be performed on\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\n\\Model\\TranscoderTemplatesConfig\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\ngetVHostConfig\n\n\n\n\n\\Model\\VHostConfig getVHostConfig($serverName, $vhostName)\n\n\n\n\nRetrieves the specified VHost configuration\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | The vhost name\n\ntry {\n    $result = $api_instance-\ngetVHostConfig($serverName, $vhostName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsApi-\ngetVHostConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\nThe vhost name\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\n\\Model\\VHostConfig\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\ngetVHostConfigAdv\n\n\n\n\n\\Model\\VHostConfigAdv getVHostConfigAdv($serverName, $vhostName)\n\n\n\n\nRetrieves the specified advanced VHost configuration\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | \n\ntry {\n    $result = $api_instance-\ngetVHostConfigAdv($serverName, $vhostName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsApi-\ngetVHostConfigAdv: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\n\\Model\\VHostConfigAdv\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\ngetVHostTuneConfig\n\n\n\n\n\\Model\\VHostTuneConfig getVHostTuneConfig($serverName, $vhostName)\n\n\n\n\nRetrieves the Tuning configuration for the specifed vhost\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | The vhost name\n\ntry {\n    $result = $api_instance-\ngetVHostTuneConfig($serverName, $vhostName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsApi-\ngetVHostTuneConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\nThe vhost name\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\n\\Model\\VHostTuneConfig\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\ngetVHostsConfig\n\n\n\n\n\\Model\\VHostsConfig getVHostsConfig($serverName)\n\n\n\n\nRetrieves the list of VHosts\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n\ntry {\n    $result = $api_instance-\ngetVHostsConfig($serverName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsApi-\ngetVHostsConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\n\\Model\\VHostsConfig\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\npostPublisherVhostConfig\n\n\n\n\npostPublisherVhostConfig($serverName, $vhostName, $publisherName, $body)\n\n\n\n\nAdds the specified Publisher configuration\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | The vhost name\n$publisherName = \npublisherName_example\n; // string | The publisher name\n$body = new \\Model\\PublisherVhostConfig(); // \\Model\\PublisherVhostConfig | \n\ntry {\n    $api_instance-\npostPublisherVhostConfig($serverName, $vhostName, $publisherName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsApi-\npostPublisherVhostConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\nThe vhost name\n\n\n\n\n\n\n\n\npublisherName\n\n\nstring\n\n\nThe publisher name\n\n\n\n\n\n\n\n\nbody\n\n\n\\Model\\PublisherVhostConfig\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\nvoid (empty response body)\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\npostPublishersVhostConfig\n\n\n\n\npostPublishersVhostConfig($serverName, $vhostName, $body)\n\n\n\n\nAdd a Publisher to list of Publishers for the specified VHost\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | The vhost name\n$body = new \\Model\\PublisherVhostConfig(); // \\Model\\PublisherVhostConfig | \n\ntry {\n    $api_instance-\npostPublishersVhostConfig($serverName, $vhostName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsApi-\npostPublishersVhostConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\nThe vhost name\n\n\n\n\n\n\n\n\nbody\n\n\n\\Model\\PublisherVhostConfig\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\nvoid (empty response body)\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\npostSMILFileConfig\n\n\n\n\npostSMILFileConfig($serverName, $vhostName, $smilfileName, $body)\n\n\n\n\nAdds the specified SMIL File configuration\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | \n$smilfileName = \nsmilfileName_example\n; // string | The SMIL file name without the extension\n$body = new \\Model\\SMILFileConfig(); // \\Model\\SMILFileConfig | \n\ntry {\n    $api_instance-\npostSMILFileConfig($serverName, $vhostName, $smilfileName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsApi-\npostSMILFileConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nsmilfileName\n\n\nstring\n\n\nThe SMIL file name without the extension\n\n\n\n\n\n\n\n\nbody\n\n\n\\Model\\SMILFileConfig\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\nvoid (empty response body)\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\npostSMILFilesConfig\n\n\n\n\npostSMILFilesConfig($serverName, $vhostName, $body)\n\n\n\n\nAdds a SMIL File to the list of SMIL Files for the specified VHost\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | The name of the current VHost the action will be performed on\n$body = new \\Model\\SMILFileConfig(); // \\Model\\SMILFileConfig | \n\ntry {\n    $api_instance-\npostSMILFilesConfig($serverName, $vhostName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsApi-\npostSMILFilesConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\nThe name of the current VHost the action will be performed on\n\n\n\n\n\n\n\n\nbody\n\n\n\\Model\\SMILFileConfig\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\nvoid (empty response body)\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\npostStartupStreamConfig\n\n\n\n\npostStartupStreamConfig($serverName, $vhostName, $streamName, $appName, $instanceName, $body)\n\n\n\n\nAdds the specified Startup Stream configuration\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | \n$streamName = \nstreamName_example\n; // string | \n$appName = \nappName_example\n; // string | \n$instanceName = \ninstanceName_example\n; // string | \n$body = new \\Model\\StartupStreamConfig(); // \\Model\\StartupStreamConfig | \n\ntry {\n    $api_instance-\npostStartupStreamConfig($serverName, $vhostName, $streamName, $appName, $instanceName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsApi-\npostStartupStreamConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nstreamName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nappName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ninstanceName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nbody\n\n\n\\Model\\StartupStreamConfig\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\nvoid (empty response body)\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\npostStartupStreamsConfig\n\n\n\n\npostStartupStreamsConfig($serverName, $vhostName, $body)\n\n\n\n\nAdds a Startup Stream to the list of Startup Streams for the specified VHost\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | \n$body = new \\Model\\StartupStreamConfig(); // \\Model\\StartupStreamConfig | \n\ntry {\n    $api_instance-\npostStartupStreamsConfig($serverName, $vhostName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsApi-\npostStartupStreamsConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nbody\n\n\n\\Model\\StartupStreamConfig\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\nvoid (empty response body)\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\npostStreamFileConfig\n\n\n\n\npostStreamFileConfig($serverName, $vhostName, $streamfileName, $body)\n\n\n\n\nAdds the specified Stream File configuration\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | \n$streamfileName = \nstreamfileName_example\n; // string | The stream file name without the extension\n$body = new \\Model\\StreamFileConfig(); // \\Model\\StreamFileConfig | \n\ntry {\n    $api_instance-\npostStreamFileConfig($serverName, $vhostName, $streamfileName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsApi-\npostStreamFileConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nstreamfileName\n\n\nstring\n\n\nThe stream file name without the extension\n\n\n\n\n\n\n\n\nbody\n\n\n\\Model\\StreamFileConfig\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\nvoid (empty response body)\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\npostStreamFilesConfig\n\n\n\n\npostStreamFilesConfig($serverName, $vhostName, $body)\n\n\n\n\nAdds a Stream File to the list of Stream Files for the specified VHost\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | \n$body = new \\Model\\StreamFileConfig(); // \\Model\\StreamFileConfig | \n\ntry {\n    $api_instance-\npostStreamFilesConfig($serverName, $vhostName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsApi-\npostStreamFilesConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nbody\n\n\n\\Model\\StreamFileConfig\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\nvoid (empty response body)\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\npostTranscoderEncodeConfig\n\n\n\n\npostTranscoderEncodeConfig($serverName, $vhostName, $templateName, $encodeName, $body)\n\n\n\n\nAdds the specified Trancoder Encode configuration\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | \n$templateName = \ntemplateName_example\n; // string | \n$encodeName = \nencodeName_example\n; // string | \n$body = new \\Model\\TranscoderEncodeConfig(); // \\Model\\TranscoderEncodeConfig | \n\ntry {\n    $api_instance-\npostTranscoderEncodeConfig($serverName, $vhostName, $templateName, $encodeName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsApi-\npostTranscoderEncodeConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ntemplateName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nencodeName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nbody\n\n\n\\Model\\TranscoderEncodeConfig\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\nvoid (empty response body)\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\npostTranscoderEncodesConfig\n\n\n\n\npostTranscoderEncodesConfig($serverName, $vhostName, $templateName, $body)\n\n\n\n\nAdds a Transcoder Encode Configuration to the specified VHost\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | \n$templateName = \ntemplateName_example\n; // string | \n$body = new \\Model\\TranscoderEncodeConfig(); // \\Model\\TranscoderEncodeConfig | \n\ntry {\n    $api_instance-\npostTranscoderEncodesConfig($serverName, $vhostName, $templateName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsApi-\npostTranscoderEncodesConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ntemplateName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nbody\n\n\n\\Model\\TranscoderEncodeConfig\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\nvoid (empty response body)\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\npostTranscoderStreamNameGroupConfig\n\n\n\n\npostTranscoderStreamNameGroupConfig($serverName, $vhostName, $templateName, $groupName, $body)\n\n\n\n\nAdds the specified Trancoder StreamNameGroup configuration\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | \n$templateName = \ntemplateName_example\n; // string | \n$groupName = \ngroupName_example\n; // string | \n$body = new \\Model\\TranscoderStreamNameGroupConfig(); // \\Model\\TranscoderStreamNameGroupConfig | \n\ntry {\n    $api_instance-\npostTranscoderStreamNameGroupConfig($serverName, $vhostName, $templateName, $groupName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsApi-\npostTranscoderStreamNameGroupConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ntemplateName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ngroupName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nbody\n\n\n\\Model\\TranscoderStreamNameGroupConfig\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\nvoid (empty response body)\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\npostTranscoderStreamNameGroupsConfig\n\n\n\n\npostTranscoderStreamNameGroupsConfig($serverName, $vhostName, $templateName, $body)\n\n\n\n\nAdds a Transcoder Stream Name Groups Configuration to the specified Template\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | \n$templateName = \ntemplateName_example\n; // string | \n$body = new \\Model\\TranscoderStreamNameGroupConfig(); // \\Model\\TranscoderStreamNameGroupConfig | \n\ntry {\n    $api_instance-\npostTranscoderStreamNameGroupsConfig($serverName, $vhostName, $templateName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsApi-\npostTranscoderStreamNameGroupsConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ntemplateName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nbody\n\n\n\\Model\\TranscoderStreamNameGroupConfig\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\nvoid (empty response body)\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\npostTranscoderTemplateConfig\n\n\n\n\npostTranscoderTemplateConfig($serverName, $vhostName, $templateName, $body)\n\n\n\n\nAdds the specified Trancoder Template configuration\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | \n$templateName = \ntemplateName_example\n; // string | \n$body = new \\Model\\TranscoderTemplateConfig(); // \\Model\\TranscoderTemplateConfig | \n\ntry {\n    $api_instance-\npostTranscoderTemplateConfig($serverName, $vhostName, $templateName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsApi-\npostTranscoderTemplateConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ntemplateName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nbody\n\n\n\\Model\\TranscoderTemplateConfig\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\nvoid (empty response body)\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\npostTranscoderTemplatesConfig\n\n\n\n\npostTranscoderTemplatesConfig($serverName, $vhostName, $body)\n\n\n\n\nAdds a Transcoder Templates Configuration to the specified VHost\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | The name of the current VHost the action will be performed on\n$body = new \\Model\\TranscoderTemplateConfig(); // \\Model\\TranscoderTemplateConfig | \n\ntry {\n    $api_instance-\npostTranscoderTemplatesConfig($serverName, $vhostName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsApi-\npostTranscoderTemplatesConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\nThe name of the current VHost the action will be performed on\n\n\n\n\n\n\n\n\nbody\n\n\n\\Model\\TranscoderTemplateConfig\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\nvoid (empty response body)\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\nputHostPortConfigAdv\n\n\n\n\nputHostPortConfigAdv($serverName, $vhostName, $portname, $body)\n\n\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | \n$portname = \nportname_example\n; // string | The port name\n$body = new \\Model\\HostPortConfigAdv(); // \\Model\\HostPortConfigAdv | \n\ntry {\n    $api_instance-\nputHostPortConfigAdv($serverName, $vhostName, $portname, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsApi-\nputHostPortConfigAdv: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nportname\n\n\nstring\n\n\nThe port name\n\n\n\n\n\n\n\n\nbody\n\n\n\\Model\\HostPortConfigAdv\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\nvoid (empty response body)\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\nputHostportsTuneConfig\n\n\n\n\nputHostportsTuneConfig($serverName, $vhostName, $body)\n\n\n\n\nUpdates the host port configuration used for server tuning for the specified vhost\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | The vhost name\n$body = new \\Model\\HostportsTuneConfig(); // \\Model\\HostportsTuneConfig | \n\ntry {\n    $api_instance-\nputHostportsTuneConfig($serverName, $vhostName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsApi-\nputHostportsTuneConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\nThe vhost name\n\n\n\n\n\n\n\n\nbody\n\n\n\\Model\\HostportsTuneConfig\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\nvoid (empty response body)\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\nputMediaCacheStoreAction\n\n\n\n\nputMediaCacheStoreAction($serverName, $action, $vhostName, $filename)\n\n\n\n\nThis API is available in builds 15942 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$action = \naction_example\n; // string | The action which should be performed by the server\n$vhostName = \nvhostName_example\n; // string | The name of the current VHost the action will be performed on\n$filename = \nfilename_example\n; // string | The file or stream name item to be used in all rest action requests\n\ntry {\n    $api_instance-\nputMediaCacheStoreAction($serverName, $action, $vhostName, $filename);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsApi-\nputMediaCacheStoreAction: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\naction\n\n\nstring\n\n\nThe action which should be performed by the server\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\nThe name of the current VHost the action will be performed on\n\n\n\n\n\n\n\n\nfilename\n\n\nstring\n\n\nThe file or stream name item to be used in all rest action requests\n\n\n[optional]\n\n\n\n\n\n\n\n\nReturn type\n\n\nvoid (empty response body)\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\nputPublisherVhostConfig\n\n\n\n\nputPublisherVhostConfig($serverName, $vhostName, $publisherName, $body)\n\n\n\n\nUpdates the specified Publisher configuration\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | The vhost name\n$publisherName = \npublisherName_example\n; // string | The publisher name\n$body = new \\Model\\PublisherVhostConfig(); // \\Model\\PublisherVhostConfig | \n\ntry {\n    $api_instance-\nputPublisherVhostConfig($serverName, $vhostName, $publisherName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsApi-\nputPublisherVhostConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\nThe vhost name\n\n\n\n\n\n\n\n\npublisherName\n\n\nstring\n\n\nThe publisher name\n\n\n\n\n\n\n\n\nbody\n\n\n\\Model\\PublisherVhostConfig\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\nvoid (empty response body)\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\nputSDPFileAction\n\n\n\n\nputSDPFileAction($serverName, $action, $mediaCasterType, $vhostName, $sdpfileName, $connectAppName, $appInstance)\n\n\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$action = \naction_example\n; // string | The action which should be performed by the server\n$mediaCasterType = \nrtp\n; // string | The MediaCasterType to use for the connection\n$vhostName = \nvhostName_example\n; // string | The name of the current VHost the action will be performed on\n$sdpfileName = \nsdpfileName_example\n; // string | The SDP file name needed for this REST call\n$connectAppName = \nconnectAppName_example\n; // string | The name of the application to connect to\n$appInstance = \nappInstance_example\n; // string | The name of the application instance to connect to\n\ntry {\n    $api_instance-\nputSDPFileAction($serverName, $action, $mediaCasterType, $vhostName, $sdpfileName, $connectAppName, $appInstance);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsApi-\nputSDPFileAction: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\naction\n\n\nstring\n\n\nThe action which should be performed by the server\n\n\n\n\n\n\n\n\nmediaCasterType\n\n\nstring\n\n\nThe MediaCasterType to use for the connection\n\n\n[default to rtp]\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\nThe name of the current VHost the action will be performed on\n\n\n\n\n\n\n\n\nsdpfileName\n\n\nstring\n\n\nThe SDP file name needed for this REST call\n\n\n\n\n\n\n\n\nconnectAppName\n\n\nstring\n\n\nThe name of the application to connect to\n\n\n[optional]\n\n\n\n\n\n\nappInstance\n\n\nstring\n\n\nThe name of the application instance to connect to\n\n\n[optional]\n\n\n\n\n\n\n\n\nReturn type\n\n\nvoid (empty response body)\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\nputSMILFileAction\n\n\n\n\nputSMILFileAction($serverName, $action, $mediaCasterType, $vhostName, $smilfileName, $connectAppName, $appInstance, $dstEntryName)\n\n\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$action = \naction_example\n; // string | The action which should be performed by the server\n$mediaCasterType = \nrtp\n; // string | The MediaCasterType to use for the connection\n$vhostName = \nvhostName_example\n; // string | The name of the current VHost the action will be performed on\n$smilfileName = \nsmilfileName_example\n; // string | The SMIL file, file name needed for this REST call\n$connectAppName = \nconnectAppName_example\n; // string | The name of the application to connect to\n$appInstance = \nappInstance_example\n; // string | The name of the application instance to connect to\n$dstEntryName = \ndstEntryName_example\n; // string | The destination SMIL file name when copying\n\ntry {\n    $api_instance-\nputSMILFileAction($serverName, $action, $mediaCasterType, $vhostName, $smilfileName, $connectAppName, $appInstance, $dstEntryName);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsApi-\nputSMILFileAction: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\naction\n\n\nstring\n\n\nThe action which should be performed by the server\n\n\n\n\n\n\n\n\nmediaCasterType\n\n\nstring\n\n\nThe MediaCasterType to use for the connection\n\n\n[default to rtp]\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\nThe name of the current VHost the action will be performed on\n\n\n\n\n\n\n\n\nsmilfileName\n\n\nstring\n\n\nThe SMIL file, file name needed for this REST call\n\n\n\n\n\n\n\n\nconnectAppName\n\n\nstring\n\n\nThe name of the application to connect to\n\n\n[optional]\n\n\n\n\n\n\nappInstance\n\n\nstring\n\n\nThe name of the application instance to connect to\n\n\n[optional]\n\n\n\n\n\n\ndstEntryName\n\n\nstring\n\n\nThe destination SMIL file name when copying\n\n\n[optional]\n\n\n\n\n\n\n\n\nReturn type\n\n\nvoid (empty response body)\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\nputSMILFileConfig\n\n\n\n\nputSMILFileConfig($serverName, $vhostName, $smilfileName, $body)\n\n\n\n\nUpdates the specified SMIL File configuration\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | \n$smilfileName = \nsmilfileName_example\n; // string | The SMIL file name without the extension\n$body = new \\Model\\SMILFileConfig(); // \\Model\\SMILFileConfig | \n\ntry {\n    $api_instance-\nputSMILFileConfig($serverName, $vhostName, $smilfileName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsApi-\nputSMILFileConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nsmilfileName\n\n\nstring\n\n\nThe SMIL file name without the extension\n\n\n\n\n\n\n\n\nbody\n\n\n\\Model\\SMILFileConfig\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\nvoid (empty response body)\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\nputSSLConfig\n\n\n\n\nputSSLConfig($serverName, $vhostName, $portname, $body)\n\n\n\n\nUpdates the SSL configuration for the specified vhost and port\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | \n$portname = \nportname_example\n; // string | The port name\n$body = new \\Model\\SSLConfig(); // \\Model\\SSLConfig | \n\ntry {\n    $api_instance-\nputSSLConfig($serverName, $vhostName, $portname, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsApi-\nputSSLConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nportname\n\n\nstring\n\n\nThe port name\n\n\n\n\n\n\n\n\nbody\n\n\n\\Model\\SSLConfig\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\nvoid (empty response body)\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\nputStartupStreamConfig\n\n\n\n\nputStartupStreamConfig($serverName, $vhostName, $streamName, $appName, $instanceName, $body)\n\n\n\n\nUpdates the specified Startup Stream configuration\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | \n$streamName = \nstreamName_example\n; // string | \n$appName = \nappName_example\n; // string | \n$instanceName = \ninstanceName_example\n; // string | \n$body = new \\Model\\StartupStreamConfig(); // \\Model\\StartupStreamConfig | \n\ntry {\n    $api_instance-\nputStartupStreamConfig($serverName, $vhostName, $streamName, $appName, $instanceName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsApi-\nputStartupStreamConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nstreamName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nappName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ninstanceName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nbody\n\n\n\\Model\\StartupStreamConfig\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\nvoid (empty response body)\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\nputStreamFileAction\n\n\n\n\nputStreamFileAction($serverName, $action, $mediaCasterType, $vhostName, $streamfileName, $connectAppName, $appInstance, $dstEntryName)\n\n\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$action = \naction_example\n; // string | The action which should be performed by the server\n$mediaCasterType = \nrtp\n; // string | The MediaCasterType to use for the connection\n$vhostName = \nvhostName_example\n; // string | The name of the current VHost the action will be performed on\n$streamfileName = \nstreamfileName_example\n; // string | The stream file, file name needed for this REST call\n$connectAppName = \nconnectAppName_example\n; // string | The name of the application to connect to\n$appInstance = \nappInstance_example\n; // string | The name of the application instance to connect to\n$dstEntryName = \ndstEntryName_example\n; // string | The destination stream file name when copying\n\ntry {\n    $api_instance-\nputStreamFileAction($serverName, $action, $mediaCasterType, $vhostName, $streamfileName, $connectAppName, $appInstance, $dstEntryName);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsApi-\nputStreamFileAction: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\naction\n\n\nstring\n\n\nThe action which should be performed by the server\n\n\n\n\n\n\n\n\nmediaCasterType\n\n\nstring\n\n\nThe MediaCasterType to use for the connection\n\n\n[default to rtp]\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\nThe name of the current VHost the action will be performed on\n\n\n\n\n\n\n\n\nstreamfileName\n\n\nstring\n\n\nThe stream file, file name needed for this REST call\n\n\n\n\n\n\n\n\nconnectAppName\n\n\nstring\n\n\nThe name of the application to connect to\n\n\n[optional]\n\n\n\n\n\n\nappInstance\n\n\nstring\n\n\nThe name of the application instance to connect to\n\n\n[optional]\n\n\n\n\n\n\ndstEntryName\n\n\nstring\n\n\nThe destination stream file name when copying\n\n\n[optional]\n\n\n\n\n\n\n\n\nReturn type\n\n\nvoid (empty response body)\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\nputStreamFileConfig\n\n\n\n\nputStreamFileConfig($serverName, $vhostName, $streamfileName, $body)\n\n\n\n\nUpdates the specified Stream File configuration\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | \n$streamfileName = \nstreamfileName_example\n; // string | The stream file name without the extension\n$body = new \\Model\\StreamFileConfig(); // \\Model\\StreamFileConfig | \n\ntry {\n    $api_instance-\nputStreamFileConfig($serverName, $vhostName, $streamfileName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsApi-\nputStreamFileConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nstreamfileName\n\n\nstring\n\n\nThe stream file name without the extension\n\n\n\n\n\n\n\n\nbody\n\n\n\\Model\\StreamFileConfig\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\nvoid (empty response body)\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\nputStreamFileConfigAdv\n\n\n\n\nputStreamFileConfigAdv($serverName, $vhostName, $streamfileName, $body)\n\n\n\n\nUpdates the Advanced Stream File configuration\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | \n$streamfileName = \nstreamfileName_example\n; // string | The stream file name without the .stream extension\n$body = new \\Model\\StreamFileConfigAdv(); // \\Model\\StreamFileConfigAdv | \n\ntry {\n    $api_instance-\nputStreamFileConfigAdv($serverName, $vhostName, $streamfileName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsApi-\nputStreamFileConfigAdv: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nstreamfileName\n\n\nstring\n\n\nThe stream file name without the .stream extension\n\n\n\n\n\n\n\n\nbody\n\n\n\\Model\\StreamFileConfigAdv\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\nvoid (empty response body)\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\nputTranscoderConfig\n\n\n\n\nputTranscoderConfig($serverName, $vhostName, $body)\n\n\n\n\nUpdates the Transcoder configuration for the specified VHost\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | \n$body = new \\Model\\TranscoderConfig(); // \\Model\\TranscoderConfig | \n\ntry {\n    $api_instance-\nputTranscoderConfig($serverName, $vhostName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsApi-\nputTranscoderConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nbody\n\n\n\\Model\\TranscoderConfig\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\nvoid (empty response body)\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\nputTranscoderEncodeConfig\n\n\n\n\nputTranscoderEncodeConfig($serverName, $vhostName, $templateName, $encodeName, $body)\n\n\n\n\nUpdates the specified Trancoder Encode configuration\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | \n$templateName = \ntemplateName_example\n; // string | \n$encodeName = \nencodeName_example\n; // string | \n$body = new \\Model\\TranscoderEncodeConfig(); // \\Model\\TranscoderEncodeConfig | \n\ntry {\n    $api_instance-\nputTranscoderEncodeConfig($serverName, $vhostName, $templateName, $encodeName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsApi-\nputTranscoderEncodeConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ntemplateName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nencodeName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nbody\n\n\n\\Model\\TranscoderEncodeConfig\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\nvoid (empty response body)\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\nputTranscoderEncodeConfigAdv\n\n\n\n\nputTranscoderEncodeConfigAdv($serverName, $vhostName, $templateName, $encodeName, $body)\n\n\n\n\nUpdates the Advanced Transcoder Encode configuration\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | \n$templateName = \ntemplateName_example\n; // string | \n$encodeName = \nencodeName_example\n; // string | \n$body = new \\Model\\TranscoderEncodeConfigAdv(); // \\Model\\TranscoderEncodeConfigAdv | \n\ntry {\n    $api_instance-\nputTranscoderEncodeConfigAdv($serverName, $vhostName, $templateName, $encodeName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsApi-\nputTranscoderEncodeConfigAdv: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ntemplateName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nencodeName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nbody\n\n\n\\Model\\TranscoderEncodeConfigAdv\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\nvoid (empty response body)\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\nputTranscoderOverlayDecodeConfig\n\n\n\n\nputTranscoderOverlayDecodeConfig($serverName, $vhostName, $templateName, $overlayName, $body)\n\n\n\n\nUpdates the specified Trancoder Overlay Decode configuration\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | \n$templateName = \ntemplateName_example\n; // string | \n$overlayName = \noverlayName_example\n; // string | \n$body = new \\Model\\TranscoderOverlayDecodeConfig(); // \\Model\\TranscoderOverlayDecodeConfig | \n\ntry {\n    $api_instance-\nputTranscoderOverlayDecodeConfig($serverName, $vhostName, $templateName, $overlayName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsApi-\nputTranscoderOverlayDecodeConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ntemplateName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\noverlayName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nbody\n\n\n\\Model\\TranscoderOverlayDecodeConfig\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\nvoid (empty response body)\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\nputTranscoderOverlayEncodeConfig\n\n\n\n\nputTranscoderOverlayEncodeConfig($serverName, $vhostName, $templateName, $overlayName, $encodeName, $body)\n\n\n\n\nUpdates the specified Trancoder Overlay Encode configuration\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | \n$templateName = \ntemplateName_example\n; // string | \n$overlayName = \noverlayName_example\n; // string | \n$encodeName = \nencodeName_example\n; // string | \n$body = new \\Model\\TranscoderOverlayEncodeConfig(); // \\Model\\TranscoderOverlayEncodeConfig | \n\ntry {\n    $api_instance-\nputTranscoderOverlayEncodeConfig($serverName, $vhostName, $templateName, $overlayName, $encodeName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsApi-\nputTranscoderOverlayEncodeConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ntemplateName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\noverlayName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nencodeName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nbody\n\n\n\\Model\\TranscoderOverlayEncodeConfig\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\nvoid (empty response body)\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\nputTranscoderStreamNameGroupConfig\n\n\n\n\nputTranscoderStreamNameGroupConfig($serverName, $vhostName, $templateName, $groupName, $body)\n\n\n\n\nUpdates the specified Trancoder StreamNameGroup configuration\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | \n$templateName = \ntemplateName_example\n; // string | \n$groupName = \ngroupName_example\n; // string | \n$body = new \\Model\\TranscoderStreamNameGroupConfig(); // \\Model\\TranscoderStreamNameGroupConfig | \n\ntry {\n    $api_instance-\nputTranscoderStreamNameGroupConfig($serverName, $vhostName, $templateName, $groupName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsApi-\nputTranscoderStreamNameGroupConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ntemplateName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ngroupName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nbody\n\n\n\\Model\\TranscoderStreamNameGroupConfig\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\nvoid (empty response body)\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\nputTranscoderTemplateAction\n\n\n\n\nputTranscoderTemplateAction($serverName, $action, $vhostName, $templateName, $dstEntryName)\n\n\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$action = \naction_example\n; // string | The action which should be performed by the server\n$vhostName = \nvhostName_example\n; // string | The name of the current VHost the action will be performed on\n$templateName = \ntemplateName_example\n; // string | The template name needed for this REST call\n$dstEntryName = \ndstEntryName_example\n; // string | The destination transcoder template name when copying\n\ntry {\n    $api_instance-\nputTranscoderTemplateAction($serverName, $action, $vhostName, $templateName, $dstEntryName);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsApi-\nputTranscoderTemplateAction: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\naction\n\n\nstring\n\n\nThe action which should be performed by the server\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\nThe name of the current VHost the action will be performed on\n\n\n\n\n\n\n\n\ntemplateName\n\n\nstring\n\n\nThe template name needed for this REST call\n\n\n\n\n\n\n\n\ndstEntryName\n\n\nstring\n\n\nThe destination transcoder template name when copying\n\n\n[optional]\n\n\n\n\n\n\n\n\nReturn type\n\n\nvoid (empty response body)\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\nputTranscoderTemplateConfig\n\n\n\n\nputTranscoderTemplateConfig($serverName, $vhostName, $templateName, $body)\n\n\n\n\nUpdates the specified Trancoder Template configuration\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | \n$templateName = \ntemplateName_example\n; // string | \n$body = new \\Model\\TranscoderTemplateConfig(); // \\Model\\TranscoderTemplateConfig | \n\ntry {\n    $api_instance-\nputTranscoderTemplateConfig($serverName, $vhostName, $templateName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsApi-\nputTranscoderTemplateConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ntemplateName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nbody\n\n\n\\Model\\TranscoderTemplateConfig\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\nvoid (empty response body)\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\nputTranscoderTemplateConfigAdv\n\n\n\n\nputTranscoderTemplateConfigAdv($serverName, $vhostName, $templateName, $body)\n\n\n\n\nUpdates the Advanced Transcoder Template configuration\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | \n$templateName = \ntemplateName_example\n; // string | \n$body = new \\Model\\TranscoderTemplateConfigAdv(); // \\Model\\TranscoderTemplateConfigAdv | \n\ntry {\n    $api_instance-\nputTranscoderTemplateConfigAdv($serverName, $vhostName, $templateName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsApi-\nputTranscoderTemplateConfigAdv: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ntemplateName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nbody\n\n\n\\Model\\TranscoderTemplateConfigAdv\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\nvoid (empty response body)\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\nputVHostAction\n\n\n\n\nputVHostAction($serverName, $action, $vhostName)\n\n\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$action = \naction_example\n; // string | The action which should be performed by the server\n$vhostName = \nvhostName_example\n; // string | The name of the current VHost the action will be performed on\n\ntry {\n    $api_instance-\nputVHostAction($serverName, $action, $vhostName);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsApi-\nputVHostAction: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\naction\n\n\nstring\n\n\nThe action which should be performed by the server\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\nThe name of the current VHost the action will be performed on\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\nvoid (empty response body)\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\nputVHostConfig\n\n\n\n\nputVHostConfig($serverName, $vhostName, $body)\n\n\n\n\nUpdates the specified VHost configuration\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | The vhost name\n$body = new \\Model\\VHostConfig(); // \\Model\\VHostConfig | \n\ntry {\n    $api_instance-\nputVHostConfig($serverName, $vhostName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsApi-\nputVHostConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\nThe vhost name\n\n\n\n\n\n\n\n\nbody\n\n\n\\Model\\VHostConfig\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\nvoid (empty response body)\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\nputVHostConfigAdv\n\n\n\n\nputVHostConfigAdv($serverName, $vhostName, $body)\n\n\n\n\nUpdates the specified advanced VHost configuration\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | \n$body = new \\Model\\VHostConfigAdv(); // \\Model\\VHostConfigAdv | \n\ntry {\n    $api_instance-\nputVHostConfigAdv($serverName, $vhostName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsApi-\nputVHostConfigAdv: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nbody\n\n\n\\Model\\VHostConfigAdv\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\nvoid (empty response body)\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\nputVHostTuneConfig\n\n\n\n\nputVHostTuneConfig($serverName, $vhostName, $body)\n\n\n\n\nUpdates the Tuning configuration for the specifed vhost\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | The vhost name\n$body = new \\Model\\VHostTuneConfig(); // \\Model\\VHostTuneConfig | \n\ntry {\n    $api_instance-\nputVHostTuneConfig($serverName, $vhostName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsApi-\nputVHostTuneConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\nThe vhost name\n\n\n\n\n\n\n\n\nbody\n\n\n\\Model\\VHostTuneConfig\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\nvoid (empty response body)\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]", 
            "title": "VserversserverNamevhostsApi"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#wowzaapivserversservernamevhostsapi", 
            "text": "All URIs are relative to  http://localhost:8087/     Method  HTTP request  Description      deletePublisherVhostConfig  DELETE  /v2/servers/{serverName}/vhosts/{vhostName}/publishers/{publisherName}  Deletes the specified Publisher configuration    deleteSDPFileConfig  DELETE  /v2/servers/{serverName}/vhosts/{vhostName}/sdpfiles/{sdpfileName}  Deletes the specified SDP file    deleteSMILFileConfig  DELETE  /v2/servers/{serverName}/vhosts/{vhostName}/smilfiles/{smilfileName}  Deletes the specified SMIL File configuration    deleteStartupStreamConfig  DELETE  /v2/servers/{serverName}/vhosts/{vhostName}/startupstreams/applications/{appName}/instances/{instanceName}/streams/{streamName}  Deletes the specified Startup Stream configuration    deleteStreamFileConfig  DELETE  /v2/servers/{serverName}/vhosts/{vhostName}/streamfiles/{streamfileName}  Deletes the specified Stream File configuration    deleteTranscoderEncodeConfig  DELETE  /v2/servers/{serverName}/vhosts/{vhostName}/transcoder/templates/{templateName}/encodes/{encodeName}  Deletes the specified Trancoder Encode configuration    deleteTranscoderOverlayDecodeConfig  DELETE  /v2/servers/{serverName}/vhosts/{vhostName}/transcoder/templates/{templateName}/decode/overlays/{overlayName}  Deletes the specified Trancoder Overlay Decode configuration    deleteTranscoderOverlayEncodeConfig  DELETE  /v2/servers/{serverName}/vhosts/{vhostName}/transcoder/templates/{templateName}/encodes/{encodeName}/overlays/{overlayName}  Deletes the specified Trancoder Overlay Encode configuration    deleteTranscoderStreamNameGroupConfig  DELETE  /v2/servers/{serverName}/vhosts/{vhostName}/transcoder/templates/{templateName}/streamnamegroups/{groupName}  Deletes the specified Trancoder StreamNameGroup configuration    deleteTranscoderTemplateConfig  DELETE  /v2/servers/{serverName}/vhosts/{vhostName}/transcoder/templates/{templateName}  Deletes the specified Trancoder Template configuration    getCurrentVHostStatistics  GET  /v2/servers/{serverName}/vhosts/{vhostName}/monitoring/current  Retrieves the current VHost statistics    getHistoricVHostStatistics  GET  /v2/servers/{serverName}/vhosts/{vhostName}/monitoring/historic  Retrieves the historic VHost statistics    getHostPortConfig  GET  /v2/servers/{serverName}/vhosts/{vhostName}/hostports/{portname}  Retrieves the HostPort for the specifed vhost and port    getHostPortConfigAdv  GET  /v2/servers/{serverName}/vhosts/{vhostName}/hostports/{portname}/adv  Retrieves the advanced HostPort configuration for the specified vhost and port    getHostPortsConfig  GET  /v2/servers/{serverName}/vhosts/{vhostName}/hostports  Retrieves the list of server HostPorts for the specified vhost    getHostportsTuneConfig  GET  /v2/servers/{serverName}/vhosts/{vhostName}/tunehostports  Retrieves the host port configuration used for server tuning for the specified vhost    getMediaCacheStoreList  GET  /v2/servers/{serverName}/vhosts/{vhostName}/mediacache/stores  Retrieves all entries in the MediaCache system    getPublisherVhostConfig  GET  /v2/servers/{serverName}/vhosts/{vhostName}/publishers/{publisherName}  Retrieves the specified Publisher configuration    getPublishersVhostConfig  GET  /v2/servers/{serverName}/vhosts/{vhostName}/publishers  Retrieves the list of Publishers for the specified VHost    getSDPFilesConfig  GET  /v2/servers/{serverName}/vhosts/{vhostName}/sdpfiles  Retrieves the list of SDP Files for the specified VHost    getSMILFileConfig  GET  /v2/servers/{serverName}/vhosts/{vhostName}/smilfiles/{smilfileName}  Retrieves the specified SMIL File configuration    getSMILFilesConfig  GET  /v2/servers/{serverName}/vhosts/{vhostName}/smilfiles  Retrieves the list of SMIL Files for the specified VHost    getSSLConfig  GET  /v2/servers/{serverName}/vhosts/{vhostName}/hostports/{portname}/ssl  Retrieves the SSL configuration for the specified vhost and port    getStartupStreamConfig  GET  /v2/servers/{serverName}/vhosts/{vhostName}/startupstreams/applications/{appName}/instances/{instanceName}/streams/{streamName}  Retrieves the specified Startup Stream configuration    getStartupStreamsConfig  GET  /v2/servers/{serverName}/vhosts/{vhostName}/startupstreams  Retrieves the list of Startup Streams for the specified VHost    getStreamFileConfig  GET  /v2/servers/{serverName}/vhosts/{vhostName}/streamfiles/{streamfileName}  Retrieves the specified Stream File configuration    getStreamFileConfigAdv  GET  /v2/servers/{serverName}/vhosts/{vhostName}/streamfiles/{streamfileName}/adv  Retrieves the Advanced Stream File configuration    getStreamFilesConfig  GET  /v2/servers/{serverName}/vhosts/{vhostName}/streamfiles  Retrieves the list of Stream Files for the specified VHost    getTranscoderConfig  GET  /v2/servers/{serverName}/vhosts/{vhostName}/transcoder  Retrieves the Transcoder configuration for the specified VHost    getTranscoderEncodeConfig  GET  /v2/servers/{serverName}/vhosts/{vhostName}/transcoder/templates/{templateName}/encodes/{encodeName}  Retrieves the specified Trancoder Encode configuration    getTranscoderEncodeConfigAdv  GET  /v2/servers/{serverName}/vhosts/{vhostName}/transcoder/templates/{templateName}/encodes/{encodeName}/adv  Retrieves the Advanced Transcoder Encode configuration    getTranscoderEncodesConfig  GET  /v2/servers/{serverName}/vhosts/{vhostName}/transcoder/templates/{templateName}/encodes  Retrieves the list of Transcoder Encode Configurations for the specified VHost    getTranscoderOverlayDecodeConfig  GET  /v2/servers/{serverName}/vhosts/{vhostName}/transcoder/templates/{templateName}/decode/overlays/{overlayName}  Retrieves the specified Trancoder Overlay Decode configuration    getTranscoderOverlayEncodeConfig  GET  /v2/servers/{serverName}/vhosts/{vhostName}/transcoder/templates/{templateName}/encodes/{encodeName}/overlays/{overlayName}  Retrieves the specified Trancoder Overlay Encode configuration    getTranscoderStreamNameGroupConfig  GET  /v2/servers/{serverName}/vhosts/{vhostName}/transcoder/templates/{templateName}/streamnamegroups/{groupName}  Retrieves the specified Trancoder StreamNameGroup configuration    getTranscoderStreamNameGroupsConfig  GET  /v2/servers/{serverName}/vhosts/{vhostName}/transcoder/templates/{templateName}/streamnamegroups  Retrieves the list of Transcoder Stream Name Groups for the specified Template    getTranscoderTemplateConfig  GET  /v2/servers/{serverName}/vhosts/{vhostName}/transcoder/templates/{templateName}  Retrieves the specified Trancoder Template configuration    getTranscoderTemplateConfigAdv  GET  /v2/servers/{serverName}/vhosts/{vhostName}/transcoder/templates/{templateName}/adv  Retrieves the Advanced Transcoder Template configuration    getTranscoderTemplatesConfig  GET  /v2/servers/{serverName}/vhosts/{vhostName}/transcoder/templates  Retrieves the list of Transcoder Template Configurations for the specified VHost    getVHostConfig  GET  /v2/servers/{serverName}/vhosts/{vhostName}  Retrieves the specified VHost configuration    getVHostConfigAdv  GET  /v2/servers/{serverName}/vhosts/{vhostName}/adv  Retrieves the specified advanced VHost configuration    getVHostTuneConfig  GET  /v2/servers/{serverName}/vhosts/{vhostName}/tune  Retrieves the Tuning configuration for the specifed vhost    getVHostsConfig  GET  /v2/servers/{serverName}/vhosts  Retrieves the list of VHosts    postPublisherVhostConfig  POST  /v2/servers/{serverName}/vhosts/{vhostName}/publishers/{publisherName}  Adds the specified Publisher configuration    postPublishersVhostConfig  POST  /v2/servers/{serverName}/vhosts/{vhostName}/publishers  Add a Publisher to list of Publishers for the specified VHost    postSMILFileConfig  POST  /v2/servers/{serverName}/vhosts/{vhostName}/smilfiles/{smilfileName}  Adds the specified SMIL File configuration    postSMILFilesConfig  POST  /v2/servers/{serverName}/vhosts/{vhostName}/smilfiles  Adds a SMIL File to the list of SMIL Files for the specified VHost    postStartupStreamConfig  POST  /v2/servers/{serverName}/vhosts/{vhostName}/startupstreams/applications/{appName}/instances/{instanceName}/streams/{streamName}  Adds the specified Startup Stream configuration    postStartupStreamsConfig  POST  /v2/servers/{serverName}/vhosts/{vhostName}/startupstreams  Adds a Startup Stream to the list of Startup Streams for the specified VHost    postStreamFileConfig  POST  /v2/servers/{serverName}/vhosts/{vhostName}/streamfiles/{streamfileName}  Adds the specified Stream File configuration    postStreamFilesConfig  POST  /v2/servers/{serverName}/vhosts/{vhostName}/streamfiles  Adds a Stream File to the list of Stream Files for the specified VHost    postTranscoderEncodeConfig  POST  /v2/servers/{serverName}/vhosts/{vhostName}/transcoder/templates/{templateName}/encodes/{encodeName}  Adds the specified Trancoder Encode configuration    postTranscoderEncodesConfig  POST  /v2/servers/{serverName}/vhosts/{vhostName}/transcoder/templates/{templateName}/encodes  Adds a Transcoder Encode Configuration to the specified VHost    postTranscoderStreamNameGroupConfig  POST  /v2/servers/{serverName}/vhosts/{vhostName}/transcoder/templates/{templateName}/streamnamegroups/{groupName}  Adds the specified Trancoder StreamNameGroup configuration    postTranscoderStreamNameGroupsConfig  POST  /v2/servers/{serverName}/vhosts/{vhostName}/transcoder/templates/{templateName}/streamnamegroups  Adds a Transcoder Stream Name Groups Configuration to the specified Template    postTranscoderTemplateConfig  POST  /v2/servers/{serverName}/vhosts/{vhostName}/transcoder/templates/{templateName}  Adds the specified Trancoder Template configuration    postTranscoderTemplatesConfig  POST  /v2/servers/{serverName}/vhosts/{vhostName}/transcoder/templates  Adds a Transcoder Templates Configuration to the specified VHost    putHostPortConfigAdv  PUT  /v2/servers/{serverName}/vhosts/{vhostName}/hostports/{portname}/adv     putHostportsTuneConfig  PUT  /v2/servers/{serverName}/vhosts/{vhostName}/tunehostports  Updates the host port configuration used for server tuning for the specified vhost    putMediaCacheStoreAction  PUT  /v2/servers/{serverName}/vhosts/{vhostName}/mediacache/stores/actions/{action}     putPublisherVhostConfig  PUT  /v2/servers/{serverName}/vhosts/{vhostName}/publishers/{publisherName}  Updates the specified Publisher configuration    putSDPFileAction  PUT  /v2/servers/{serverName}/vhosts/{vhostName}/sdpfiles/{sdpfileName}/actions/{action}     putSMILFileAction  PUT  /v2/servers/{serverName}/vhosts/{vhostName}/smilfiles/{smilfileName}/actions/{action}     putSMILFileConfig  PUT  /v2/servers/{serverName}/vhosts/{vhostName}/smilfiles/{smilfileName}  Updates the specified SMIL File configuration    putSSLConfig  PUT  /v2/servers/{serverName}/vhosts/{vhostName}/hostports/{portname}/ssl  Updates the SSL configuration for the specified vhost and port    putStartupStreamConfig  PUT  /v2/servers/{serverName}/vhosts/{vhostName}/startupstreams/applications/{appName}/instances/{instanceName}/streams/{streamName}  Updates the specified Startup Stream configuration    putStreamFileAction  PUT  /v2/servers/{serverName}/vhosts/{vhostName}/streamfiles/{streamfileName}/actions/{action}     putStreamFileConfig  PUT  /v2/servers/{serverName}/vhosts/{vhostName}/streamfiles/{streamfileName}  Updates the specified Stream File configuration    putStreamFileConfigAdv  PUT  /v2/servers/{serverName}/vhosts/{vhostName}/streamfiles/{streamfileName}/adv  Updates the Advanced Stream File configuration    putTranscoderConfig  PUT  /v2/servers/{serverName}/vhosts/{vhostName}/transcoder  Updates the Transcoder configuration for the specified VHost    putTranscoderEncodeConfig  PUT  /v2/servers/{serverName}/vhosts/{vhostName}/transcoder/templates/{templateName}/encodes/{encodeName}  Updates the specified Trancoder Encode configuration    putTranscoderEncodeConfigAdv  PUT  /v2/servers/{serverName}/vhosts/{vhostName}/transcoder/templates/{templateName}/encodes/{encodeName}/adv  Updates the Advanced Transcoder Encode configuration    putTranscoderOverlayDecodeConfig  PUT  /v2/servers/{serverName}/vhosts/{vhostName}/transcoder/templates/{templateName}/decode/overlays/{overlayName}  Updates the specified Trancoder Overlay Decode configuration    putTranscoderOverlayEncodeConfig  PUT  /v2/servers/{serverName}/vhosts/{vhostName}/transcoder/templates/{templateName}/encodes/{encodeName}/overlays/{overlayName}  Updates the specified Trancoder Overlay Encode configuration    putTranscoderStreamNameGroupConfig  PUT  /v2/servers/{serverName}/vhosts/{vhostName}/transcoder/templates/{templateName}/streamnamegroups/{groupName}  Updates the specified Trancoder StreamNameGroup configuration    putTranscoderTemplateAction  PUT  /v2/servers/{serverName}/vhosts/{vhostName}/transcoder/templates/{templateName}/actions/{action}     putTranscoderTemplateConfig  PUT  /v2/servers/{serverName}/vhosts/{vhostName}/transcoder/templates/{templateName}  Updates the specified Trancoder Template configuration    putTranscoderTemplateConfigAdv  PUT  /v2/servers/{serverName}/vhosts/{vhostName}/transcoder/templates/{templateName}/adv  Updates the Advanced Transcoder Template configuration    putVHostAction  PUT  /v2/servers/{serverName}/vhosts/{vhostName}/actions/{action}     putVHostConfig  PUT  /v2/servers/{serverName}/vhosts/{vhostName}  Updates the specified VHost configuration    putVHostConfigAdv  PUT  /v2/servers/{serverName}/vhosts/{vhostName}/adv  Updates the specified advanced VHost configuration    putVHostTuneConfig  PUT  /v2/servers/{serverName}/vhosts/{vhostName}/tune  Updates the Tuning configuration for the specifed vhost", 
            "title": "WowzaApi\\VserversserverNamevhostsApi"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#deletepublishervhostconfig", 
            "text": "deletePublisherVhostConfig($serverName, $vhostName, $publisherName)   Deletes the specified Publisher configuration  This API is available in builds 15089 or later.", 
            "title": "deletePublisherVhostConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#example", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | The vhost name\n$publisherName =  publisherName_example ; // string | The publisher name\n\ntry {\n    $api_instance- deletePublisherVhostConfig($serverName, $vhostName, $publisherName);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsApi- deletePublisherVhostConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#parameters", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string  The vhost name     publisherName  string  The publisher name", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#return-type", 
            "text": "void (empty response body)", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#authorization", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#http-request-headers", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#deletesdpfileconfig", 
            "text": "deleteSDPFileConfig($serverName, $vhostName, $sdpfileName)   Deletes the specified SDP file  This API is available in builds 15089 or later.", 
            "title": "deleteSDPFileConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#example_1", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | \n$sdpfileName =  sdpfileName_example ; // string | The SDP file name without the extension\n\ntry {\n    $api_instance- deleteSDPFileConfig($serverName, $vhostName, $sdpfileName);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsApi- deleteSDPFileConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#parameters_1", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string      sdpfileName  string  The SDP file name without the extension", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#return-type_1", 
            "text": "void (empty response body)", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#authorization_1", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#http-request-headers_1", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#deletesmilfileconfig", 
            "text": "deleteSMILFileConfig($serverName, $vhostName, $smilfileName)   Deletes the specified SMIL File configuration  This API is available in builds 15089 or later.", 
            "title": "deleteSMILFileConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#example_2", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | \n$smilfileName =  smilfileName_example ; // string | The SMIL file name without the extension\n\ntry {\n    $api_instance- deleteSMILFileConfig($serverName, $vhostName, $smilfileName);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsApi- deleteSMILFileConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#parameters_2", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string      smilfileName  string  The SMIL file name without the extension", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#return-type_2", 
            "text": "void (empty response body)", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#authorization_2", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#http-request-headers_2", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#deletestartupstreamconfig", 
            "text": "deleteStartupStreamConfig($serverName, $vhostName, $streamName, $appName, $instanceName)   Deletes the specified Startup Stream configuration  This API is available in builds 15089 or later.", 
            "title": "deleteStartupStreamConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#example_3", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | \n$streamName =  streamName_example ; // string | \n$appName =  appName_example ; // string | \n$instanceName =  instanceName_example ; // string | \n\ntry {\n    $api_instance- deleteStartupStreamConfig($serverName, $vhostName, $streamName, $appName, $instanceName);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsApi- deleteStartupStreamConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#parameters_3", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string      streamName  string      appName  string      instanceName  string", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#return-type_3", 
            "text": "void (empty response body)", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#authorization_3", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#http-request-headers_3", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#deletestreamfileconfig", 
            "text": "deleteStreamFileConfig($serverName, $vhostName, $streamfileName)   Deletes the specified Stream File configuration  This API is available in builds 15089 or later.", 
            "title": "deleteStreamFileConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#example_4", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | \n$streamfileName =  streamfileName_example ; // string | The stream file name without the extension\n\ntry {\n    $api_instance- deleteStreamFileConfig($serverName, $vhostName, $streamfileName);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsApi- deleteStreamFileConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#parameters_4", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string      streamfileName  string  The stream file name without the extension", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#return-type_4", 
            "text": "void (empty response body)", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#authorization_4", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#http-request-headers_4", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#deletetranscoderencodeconfig", 
            "text": "deleteTranscoderEncodeConfig($serverName, $vhostName, $templateName, $encodeName)   Deletes the specified Trancoder Encode configuration  This API is available in builds 15089 or later.", 
            "title": "deleteTranscoderEncodeConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#example_5", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | \n$templateName =  templateName_example ; // string | \n$encodeName =  encodeName_example ; // string | \n\ntry {\n    $api_instance- deleteTranscoderEncodeConfig($serverName, $vhostName, $templateName, $encodeName);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsApi- deleteTranscoderEncodeConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#parameters_5", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string      templateName  string      encodeName  string", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#return-type_5", 
            "text": "void (empty response body)", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#authorization_5", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#http-request-headers_5", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#deletetranscoderoverlaydecodeconfig", 
            "text": "deleteTranscoderOverlayDecodeConfig($serverName, $vhostName, $templateName, $overlayName)   Deletes the specified Trancoder Overlay Decode configuration  This API is available in builds 15089 or later.", 
            "title": "deleteTranscoderOverlayDecodeConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#example_6", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | \n$templateName =  templateName_example ; // string | \n$overlayName =  overlayName_example ; // string | \n\ntry {\n    $api_instance- deleteTranscoderOverlayDecodeConfig($serverName, $vhostName, $templateName, $overlayName);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsApi- deleteTranscoderOverlayDecodeConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#parameters_6", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string      templateName  string      overlayName  string", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#return-type_6", 
            "text": "void (empty response body)", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#authorization_6", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#http-request-headers_6", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#deletetranscoderoverlayencodeconfig", 
            "text": "deleteTranscoderOverlayEncodeConfig($serverName, $vhostName, $templateName, $overlayName, $encodeName)   Deletes the specified Trancoder Overlay Encode configuration  This API is available in builds 15089 or later.", 
            "title": "deleteTranscoderOverlayEncodeConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#example_7", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | \n$templateName =  templateName_example ; // string | \n$overlayName =  overlayName_example ; // string | \n$encodeName =  encodeName_example ; // string | \n\ntry {\n    $api_instance- deleteTranscoderOverlayEncodeConfig($serverName, $vhostName, $templateName, $overlayName, $encodeName);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsApi- deleteTranscoderOverlayEncodeConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#parameters_7", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string      templateName  string      overlayName  string      encodeName  string", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#return-type_7", 
            "text": "void (empty response body)", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#authorization_7", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#http-request-headers_7", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#deletetranscoderstreamnamegroupconfig", 
            "text": "deleteTranscoderStreamNameGroupConfig($serverName, $vhostName, $templateName, $groupName)   Deletes the specified Trancoder StreamNameGroup configuration  This API is available in builds 15089 or later.", 
            "title": "deleteTranscoderStreamNameGroupConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#example_8", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | \n$templateName =  templateName_example ; // string | \n$groupName =  groupName_example ; // string | \n\ntry {\n    $api_instance- deleteTranscoderStreamNameGroupConfig($serverName, $vhostName, $templateName, $groupName);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsApi- deleteTranscoderStreamNameGroupConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#parameters_8", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string      templateName  string      groupName  string", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#return-type_8", 
            "text": "void (empty response body)", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#authorization_8", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#http-request-headers_8", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#deletetranscodertemplateconfig", 
            "text": "deleteTranscoderTemplateConfig($serverName, $vhostName, $templateName)   Deletes the specified Trancoder Template configuration  This API is available in builds 15089 or later.", 
            "title": "deleteTranscoderTemplateConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#example_9", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | \n$templateName =  templateName_example ; // string | \n\ntry {\n    $api_instance- deleteTranscoderTemplateConfig($serverName, $vhostName, $templateName);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsApi- deleteTranscoderTemplateConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#parameters_9", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string      templateName  string", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#return-type_9", 
            "text": "void (empty response body)", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#authorization_9", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#http-request-headers_9", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#getcurrentvhoststatistics", 
            "text": "\\Model\\CurrentVHostStatistics getCurrentVHostStatistics($serverName, $vhostName)   Retrieves the current VHost statistics  This API is available in builds 15089 or later.", 
            "title": "getCurrentVHostStatistics"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#example_10", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | \n\ntry {\n    $result = $api_instance- getCurrentVHostStatistics($serverName, $vhostName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsApi- getCurrentVHostStatistics: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#parameters_10", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#return-type_10", 
            "text": "\\Model\\CurrentVHostStatistics", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#authorization_10", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#http-request-headers_10", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#gethistoricvhoststatistics", 
            "text": "\\Model\\HistoricVHostStatistics getHistoricVHostStatistics($serverName, $vhostName)   Retrieves the historic VHost statistics  This API is available in builds 15089 or later.", 
            "title": "getHistoricVHostStatistics"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#example_11", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | \n\ntry {\n    $result = $api_instance- getHistoricVHostStatistics($serverName, $vhostName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsApi- getHistoricVHostStatistics: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#parameters_11", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#return-type_11", 
            "text": "\\Model\\HistoricVHostStatistics", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#authorization_11", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#http-request-headers_11", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#gethostportconfig", 
            "text": "\\Model\\HostPortConfig getHostPortConfig($serverName, $vhostName, $portname)   Retrieves the HostPort for the specifed vhost and port  This API is available in builds 15089 or later.", 
            "title": "getHostPortConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#example_12", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | \n$portname =  portname_example ; // string | The port name\n\ntry {\n    $result = $api_instance- getHostPortConfig($serverName, $vhostName, $portname);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsApi- getHostPortConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#parameters_12", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string      portname  string  The port name", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#return-type_12", 
            "text": "\\Model\\HostPortConfig", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#authorization_12", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#http-request-headers_12", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#gethostportconfigadv", 
            "text": "\\Model\\HostPortConfigAdv getHostPortConfigAdv($serverName, $vhostName, $portname)   Retrieves the advanced HostPort configuration for the specified vhost and port  This API is available in builds 15089 or later.", 
            "title": "getHostPortConfigAdv"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#example_13", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | \n$portname =  portname_example ; // string | The port name\n\ntry {\n    $result = $api_instance- getHostPortConfigAdv($serverName, $vhostName, $portname);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsApi- getHostPortConfigAdv: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#parameters_13", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string      portname  string  The port name", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#return-type_13", 
            "text": "\\Model\\HostPortConfigAdv", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#authorization_13", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#http-request-headers_13", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#gethostportsconfig", 
            "text": "\\Model\\HostPortsConfig getHostPortsConfig($serverName, $vhostName)   Retrieves the list of server HostPorts for the specified vhost  This API is available in builds 15089 or later.", 
            "title": "getHostPortsConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#example_14", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | \n\ntry {\n    $result = $api_instance- getHostPortsConfig($serverName, $vhostName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsApi- getHostPortsConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#parameters_14", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#return-type_14", 
            "text": "\\Model\\HostPortsConfig", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#authorization_14", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#http-request-headers_14", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#gethostportstuneconfig", 
            "text": "\\Model\\HostportsTuneConfig getHostportsTuneConfig($serverName, $vhostName)   Retrieves the host port configuration used for server tuning for the specified vhost  This API is available in builds 15089 or later.", 
            "title": "getHostportsTuneConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#example_15", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | The vhost name\n\ntry {\n    $result = $api_instance- getHostportsTuneConfig($serverName, $vhostName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsApi- getHostportsTuneConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#parameters_15", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string  The vhost name", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#return-type_15", 
            "text": "\\Model\\HostportsTuneConfig", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#authorization_15", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#http-request-headers_15", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#getmediacachestorelist", 
            "text": "\\Model\\MediaCacheStoreList getMediaCacheStoreList($serverName, $vhostName)   Retrieves all entries in the MediaCache system  This API is available in builds 15942 or later.", 
            "title": "getMediaCacheStoreList"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#example_16", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | \n\ntry {\n    $result = $api_instance- getMediaCacheStoreList($serverName, $vhostName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsApi- getMediaCacheStoreList: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#parameters_16", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#return-type_16", 
            "text": "\\Model\\MediaCacheStoreList", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#authorization_16", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#http-request-headers_16", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#getpublishervhostconfig", 
            "text": "\\Model\\PublisherVhostConfig getPublisherVhostConfig($serverName, $vhostName, $publisherName)   Retrieves the specified Publisher configuration  This API is available in builds 15089 or later.", 
            "title": "getPublisherVhostConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#example_17", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | The vhost name\n$publisherName =  publisherName_example ; // string | The publisher name\n\ntry {\n    $result = $api_instance- getPublisherVhostConfig($serverName, $vhostName, $publisherName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsApi- getPublisherVhostConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#parameters_17", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string  The vhost name     publisherName  string  The publisher name", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#return-type_17", 
            "text": "\\Model\\PublisherVhostConfig", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#authorization_17", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#http-request-headers_17", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#getpublishersvhostconfig", 
            "text": "\\Model\\PublishersVhostConfig getPublishersVhostConfig($serverName, $vhostName)   Retrieves the list of Publishers for the specified VHost  This API is available in builds 15089 or later.", 
            "title": "getPublishersVhostConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#example_18", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | The vhost name\n\ntry {\n    $result = $api_instance- getPublishersVhostConfig($serverName, $vhostName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsApi- getPublishersVhostConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#parameters_18", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string  The vhost name", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#return-type_18", 
            "text": "\\Model\\PublishersVhostConfig", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#authorization_18", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#http-request-headers_18", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#getsdpfilesconfig", 
            "text": "\\Model\\SDPFilesConfig getSDPFilesConfig($serverName, $vhostName)   Retrieves the list of SDP Files for the specified VHost  This API is available in builds 15089 or later.", 
            "title": "getSDPFilesConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#example_19", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | \n\ntry {\n    $result = $api_instance- getSDPFilesConfig($serverName, $vhostName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsApi- getSDPFilesConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#parameters_19", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#return-type_19", 
            "text": "\\Model\\SDPFilesConfig", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#authorization_19", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#http-request-headers_19", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#getsmilfileconfig", 
            "text": "\\Model\\SMILFileConfig getSMILFileConfig($serverName, $vhostName, $smilfileName)   Retrieves the specified SMIL File configuration  This API is available in builds 15089 or later.", 
            "title": "getSMILFileConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#example_20", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | \n$smilfileName =  smilfileName_example ; // string | The SMIL file name without the extension\n\ntry {\n    $result = $api_instance- getSMILFileConfig($serverName, $vhostName, $smilfileName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsApi- getSMILFileConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#parameters_20", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string      smilfileName  string  The SMIL file name without the extension", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#return-type_20", 
            "text": "\\Model\\SMILFileConfig", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#authorization_20", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#http-request-headers_20", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#getsmilfilesconfig", 
            "text": "\\Model\\SMILFilesConfig getSMILFilesConfig($serverName, $vhostName)   Retrieves the list of SMIL Files for the specified VHost  This API is available in builds 15089 or later.", 
            "title": "getSMILFilesConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#example_21", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | The name of the current VHost the action will be performed on\n\ntry {\n    $result = $api_instance- getSMILFilesConfig($serverName, $vhostName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsApi- getSMILFilesConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#parameters_21", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string  The name of the current VHost the action will be performed on", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#return-type_21", 
            "text": "\\Model\\SMILFilesConfig", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#authorization_21", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#http-request-headers_21", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#getsslconfig", 
            "text": "\\Model\\SSLConfig getSSLConfig($serverName, $vhostName, $portname)   Retrieves the SSL configuration for the specified vhost and port  This API is available in builds 15089 or later.", 
            "title": "getSSLConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#example_22", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | \n$portname =  portname_example ; // string | The port name\n\ntry {\n    $result = $api_instance- getSSLConfig($serverName, $vhostName, $portname);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsApi- getSSLConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#parameters_22", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string      portname  string  The port name", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#return-type_22", 
            "text": "\\Model\\SSLConfig", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#authorization_22", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#http-request-headers_22", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#getstartupstreamconfig", 
            "text": "\\Model\\StartupStreamConfig getStartupStreamConfig($serverName, $vhostName, $streamName, $appName, $instanceName)   Retrieves the specified Startup Stream configuration  This API is available in builds 15089 or later.", 
            "title": "getStartupStreamConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#example_23", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | \n$streamName =  streamName_example ; // string | \n$appName =  appName_example ; // string | \n$instanceName =  instanceName_example ; // string | \n\ntry {\n    $result = $api_instance- getStartupStreamConfig($serverName, $vhostName, $streamName, $appName, $instanceName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsApi- getStartupStreamConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#parameters_23", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string      streamName  string      appName  string      instanceName  string", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#return-type_23", 
            "text": "\\Model\\StartupStreamConfig", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#authorization_23", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#http-request-headers_23", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#getstartupstreamsconfig", 
            "text": "\\Model\\StartupStreamsConfig getStartupStreamsConfig($serverName, $vhostName)   Retrieves the list of Startup Streams for the specified VHost  This API is available in builds 15089 or later.", 
            "title": "getStartupStreamsConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#example_24", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | \n\ntry {\n    $result = $api_instance- getStartupStreamsConfig($serverName, $vhostName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsApi- getStartupStreamsConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#parameters_24", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#return-type_24", 
            "text": "\\Model\\StartupStreamsConfig", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#authorization_24", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#http-request-headers_24", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#getstreamfileconfig", 
            "text": "\\Model\\StreamFileConfig getStreamFileConfig($serverName, $vhostName, $streamfileName)   Retrieves the specified Stream File configuration  This API is available in builds 15089 or later.", 
            "title": "getStreamFileConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#example_25", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | \n$streamfileName =  streamfileName_example ; // string | The stream file name without the extension\n\ntry {\n    $result = $api_instance- getStreamFileConfig($serverName, $vhostName, $streamfileName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsApi- getStreamFileConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#parameters_25", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string      streamfileName  string  The stream file name without the extension", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#return-type_25", 
            "text": "\\Model\\StreamFileConfig", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#authorization_25", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#http-request-headers_25", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#getstreamfileconfigadv", 
            "text": "\\Model\\StreamFileConfigAdv getStreamFileConfigAdv($serverName, $vhostName, $streamfileName)   Retrieves the Advanced Stream File configuration  This API is available in builds 15089 or later.", 
            "title": "getStreamFileConfigAdv"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#example_26", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | \n$streamfileName =  streamfileName_example ; // string | The stream file name without the .stream extension\n\ntry {\n    $result = $api_instance- getStreamFileConfigAdv($serverName, $vhostName, $streamfileName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsApi- getStreamFileConfigAdv: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#parameters_26", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string      streamfileName  string  The stream file name without the .stream extension", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#return-type_26", 
            "text": "\\Model\\StreamFileConfigAdv", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#authorization_26", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#http-request-headers_26", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#getstreamfilesconfig", 
            "text": "\\Model\\StreamFilesConfig getStreamFilesConfig($serverName, $vhostName)   Retrieves the list of Stream Files for the specified VHost  This API is available in builds 15089 or later.", 
            "title": "getStreamFilesConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#example_27", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | \n\ntry {\n    $result = $api_instance- getStreamFilesConfig($serverName, $vhostName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsApi- getStreamFilesConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#parameters_27", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#return-type_27", 
            "text": "\\Model\\StreamFilesConfig", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#authorization_27", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#http-request-headers_27", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#gettranscoderconfig", 
            "text": "\\Model\\TranscoderConfig getTranscoderConfig($serverName, $vhostName)   Retrieves the Transcoder configuration for the specified VHost  This API is available in builds 15089 or later.", 
            "title": "getTranscoderConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#example_28", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | \n\ntry {\n    $result = $api_instance- getTranscoderConfig($serverName, $vhostName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsApi- getTranscoderConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#parameters_28", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#return-type_28", 
            "text": "\\Model\\TranscoderConfig", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#authorization_28", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#http-request-headers_28", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#gettranscoderencodeconfig", 
            "text": "\\Model\\TranscoderEncodeConfig getTranscoderEncodeConfig($serverName, $vhostName, $templateName, $encodeName)   Retrieves the specified Trancoder Encode configuration  This API is available in builds 15089 or later.", 
            "title": "getTranscoderEncodeConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#example_29", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | \n$templateName =  templateName_example ; // string | \n$encodeName =  encodeName_example ; // string | \n\ntry {\n    $result = $api_instance- getTranscoderEncodeConfig($serverName, $vhostName, $templateName, $encodeName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsApi- getTranscoderEncodeConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#parameters_29", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string      templateName  string      encodeName  string", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#return-type_29", 
            "text": "\\Model\\TranscoderEncodeConfig", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#authorization_29", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#http-request-headers_29", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#gettranscoderencodeconfigadv", 
            "text": "\\Model\\TranscoderEncodeConfigAdv getTranscoderEncodeConfigAdv($serverName, $vhostName, $templateName, $encodeName)   Retrieves the Advanced Transcoder Encode configuration  This API is available in builds 15089 or later.", 
            "title": "getTranscoderEncodeConfigAdv"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#example_30", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | \n$templateName =  templateName_example ; // string | \n$encodeName =  encodeName_example ; // string | \n\ntry {\n    $result = $api_instance- getTranscoderEncodeConfigAdv($serverName, $vhostName, $templateName, $encodeName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsApi- getTranscoderEncodeConfigAdv: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#parameters_30", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string      templateName  string      encodeName  string", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#return-type_30", 
            "text": "\\Model\\TranscoderEncodeConfigAdv", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#authorization_30", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#http-request-headers_30", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#gettranscoderencodesconfig", 
            "text": "\\Model\\TranscoderEncodesConfig getTranscoderEncodesConfig($serverName, $vhostName, $templateName)   Retrieves the list of Transcoder Encode Configurations for the specified VHost  This API is available in builds 15089 or later.", 
            "title": "getTranscoderEncodesConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#example_31", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | \n$templateName =  templateName_example ; // string | \n\ntry {\n    $result = $api_instance- getTranscoderEncodesConfig($serverName, $vhostName, $templateName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsApi- getTranscoderEncodesConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#parameters_31", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string      templateName  string", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#return-type_31", 
            "text": "\\Model\\TranscoderEncodesConfig", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#authorization_31", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#http-request-headers_31", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#gettranscoderoverlaydecodeconfig", 
            "text": "\\Model\\TranscoderOverlayDecodeConfig getTranscoderOverlayDecodeConfig($serverName, $vhostName, $templateName, $overlayName)   Retrieves the specified Trancoder Overlay Decode configuration  This API is available in builds 15089 or later.", 
            "title": "getTranscoderOverlayDecodeConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#example_32", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | \n$templateName =  templateName_example ; // string | \n$overlayName =  overlayName_example ; // string | \n\ntry {\n    $result = $api_instance- getTranscoderOverlayDecodeConfig($serverName, $vhostName, $templateName, $overlayName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsApi- getTranscoderOverlayDecodeConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#parameters_32", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string      templateName  string      overlayName  string", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#return-type_32", 
            "text": "\\Model\\TranscoderOverlayDecodeConfig", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#authorization_32", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#http-request-headers_32", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#gettranscoderoverlayencodeconfig", 
            "text": "\\Model\\TranscoderOverlayEncodeConfig getTranscoderOverlayEncodeConfig($serverName, $vhostName, $templateName, $overlayName, $encodeName)   Retrieves the specified Trancoder Overlay Encode configuration  This API is available in builds 15089 or later.", 
            "title": "getTranscoderOverlayEncodeConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#example_33", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | \n$templateName =  templateName_example ; // string | \n$overlayName =  overlayName_example ; // string | \n$encodeName =  encodeName_example ; // string | \n\ntry {\n    $result = $api_instance- getTranscoderOverlayEncodeConfig($serverName, $vhostName, $templateName, $overlayName, $encodeName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsApi- getTranscoderOverlayEncodeConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#parameters_33", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string      templateName  string      overlayName  string      encodeName  string", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#return-type_33", 
            "text": "\\Model\\TranscoderOverlayEncodeConfig", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#authorization_33", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#http-request-headers_33", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#gettranscoderstreamnamegroupconfig", 
            "text": "\\Model\\TranscoderStreamNameGroupConfig getTranscoderStreamNameGroupConfig($serverName, $vhostName, $templateName, $groupName)   Retrieves the specified Trancoder StreamNameGroup configuration  This API is available in builds 15089 or later.", 
            "title": "getTranscoderStreamNameGroupConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#example_34", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | \n$templateName =  templateName_example ; // string | \n$groupName =  groupName_example ; // string | \n\ntry {\n    $result = $api_instance- getTranscoderStreamNameGroupConfig($serverName, $vhostName, $templateName, $groupName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsApi- getTranscoderStreamNameGroupConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#parameters_34", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string      templateName  string      groupName  string", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#return-type_34", 
            "text": "\\Model\\TranscoderStreamNameGroupConfig", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#authorization_34", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#http-request-headers_34", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#gettranscoderstreamnamegroupsconfig", 
            "text": "\\Model\\TranscoderStreamNameGroupsConfig getTranscoderStreamNameGroupsConfig($serverName, $vhostName, $templateName)   Retrieves the list of Transcoder Stream Name Groups for the specified Template  This API is available in builds 15089 or later.", 
            "title": "getTranscoderStreamNameGroupsConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#example_35", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | \n$templateName =  templateName_example ; // string | \n\ntry {\n    $result = $api_instance- getTranscoderStreamNameGroupsConfig($serverName, $vhostName, $templateName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsApi- getTranscoderStreamNameGroupsConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#parameters_35", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string      templateName  string", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#return-type_35", 
            "text": "\\Model\\TranscoderStreamNameGroupsConfig", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#authorization_35", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#http-request-headers_35", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#gettranscodertemplateconfig", 
            "text": "\\Model\\TranscoderTemplateConfig getTranscoderTemplateConfig($serverName, $vhostName, $templateName)   Retrieves the specified Trancoder Template configuration  This API is available in builds 15089 or later.", 
            "title": "getTranscoderTemplateConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#example_36", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | \n$templateName =  templateName_example ; // string | \n\ntry {\n    $result = $api_instance- getTranscoderTemplateConfig($serverName, $vhostName, $templateName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsApi- getTranscoderTemplateConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#parameters_36", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string      templateName  string", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#return-type_36", 
            "text": "\\Model\\TranscoderTemplateConfig", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#authorization_36", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#http-request-headers_36", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#gettranscodertemplateconfigadv", 
            "text": "\\Model\\TranscoderTemplateConfigAdv getTranscoderTemplateConfigAdv($serverName, $vhostName, $templateName)   Retrieves the Advanced Transcoder Template configuration  This API is available in builds 15089 or later.", 
            "title": "getTranscoderTemplateConfigAdv"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#example_37", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | \n$templateName =  templateName_example ; // string | \n\ntry {\n    $result = $api_instance- getTranscoderTemplateConfigAdv($serverName, $vhostName, $templateName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsApi- getTranscoderTemplateConfigAdv: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#parameters_37", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string      templateName  string", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#return-type_37", 
            "text": "\\Model\\TranscoderTemplateConfigAdv", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#authorization_37", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#http-request-headers_37", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#gettranscodertemplatesconfig", 
            "text": "\\Model\\TranscoderTemplatesConfig getTranscoderTemplatesConfig($serverName, $vhostName)   Retrieves the list of Transcoder Template Configurations for the specified VHost  This API is available in builds 15089 or later.", 
            "title": "getTranscoderTemplatesConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#example_38", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | The name of the current VHost the action will be performed on\n\ntry {\n    $result = $api_instance- getTranscoderTemplatesConfig($serverName, $vhostName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsApi- getTranscoderTemplatesConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#parameters_38", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string  The name of the current VHost the action will be performed on", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#return-type_38", 
            "text": "\\Model\\TranscoderTemplatesConfig", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#authorization_38", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#http-request-headers_38", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#getvhostconfig", 
            "text": "\\Model\\VHostConfig getVHostConfig($serverName, $vhostName)   Retrieves the specified VHost configuration  This API is available in builds 15089 or later.", 
            "title": "getVHostConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#example_39", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | The vhost name\n\ntry {\n    $result = $api_instance- getVHostConfig($serverName, $vhostName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsApi- getVHostConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#parameters_39", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string  The vhost name", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#return-type_39", 
            "text": "\\Model\\VHostConfig", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#authorization_39", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#http-request-headers_39", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#getvhostconfigadv", 
            "text": "\\Model\\VHostConfigAdv getVHostConfigAdv($serverName, $vhostName)   Retrieves the specified advanced VHost configuration  This API is available in builds 15089 or later.", 
            "title": "getVHostConfigAdv"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#example_40", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | \n\ntry {\n    $result = $api_instance- getVHostConfigAdv($serverName, $vhostName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsApi- getVHostConfigAdv: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#parameters_40", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#return-type_40", 
            "text": "\\Model\\VHostConfigAdv", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#authorization_40", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#http-request-headers_40", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#getvhosttuneconfig", 
            "text": "\\Model\\VHostTuneConfig getVHostTuneConfig($serverName, $vhostName)   Retrieves the Tuning configuration for the specifed vhost  This API is available in builds 15089 or later.", 
            "title": "getVHostTuneConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#example_41", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | The vhost name\n\ntry {\n    $result = $api_instance- getVHostTuneConfig($serverName, $vhostName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsApi- getVHostTuneConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#parameters_41", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string  The vhost name", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#return-type_41", 
            "text": "\\Model\\VHostTuneConfig", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#authorization_41", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#http-request-headers_41", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#getvhostsconfig", 
            "text": "\\Model\\VHostsConfig getVHostsConfig($serverName)   Retrieves the list of VHosts  This API is available in builds 15089 or later.", 
            "title": "getVHostsConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#example_42", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n\ntry {\n    $result = $api_instance- getVHostsConfig($serverName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsApi- getVHostsConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#parameters_42", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#return-type_42", 
            "text": "\\Model\\VHostsConfig", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#authorization_42", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#http-request-headers_42", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#postpublishervhostconfig", 
            "text": "postPublisherVhostConfig($serverName, $vhostName, $publisherName, $body)   Adds the specified Publisher configuration  This API is available in builds 15089 or later.", 
            "title": "postPublisherVhostConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#example_43", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | The vhost name\n$publisherName =  publisherName_example ; // string | The publisher name\n$body = new \\Model\\PublisherVhostConfig(); // \\Model\\PublisherVhostConfig | \n\ntry {\n    $api_instance- postPublisherVhostConfig($serverName, $vhostName, $publisherName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsApi- postPublisherVhostConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#parameters_43", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string  The vhost name     publisherName  string  The publisher name     body  \\Model\\PublisherVhostConfig", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#return-type_43", 
            "text": "void (empty response body)", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#authorization_43", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#http-request-headers_43", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#postpublishersvhostconfig", 
            "text": "postPublishersVhostConfig($serverName, $vhostName, $body)   Add a Publisher to list of Publishers for the specified VHost  This API is available in builds 15089 or later.", 
            "title": "postPublishersVhostConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#example_44", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | The vhost name\n$body = new \\Model\\PublisherVhostConfig(); // \\Model\\PublisherVhostConfig | \n\ntry {\n    $api_instance- postPublishersVhostConfig($serverName, $vhostName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsApi- postPublishersVhostConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#parameters_44", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string  The vhost name     body  \\Model\\PublisherVhostConfig", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#return-type_44", 
            "text": "void (empty response body)", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#authorization_44", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#http-request-headers_44", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#postsmilfileconfig", 
            "text": "postSMILFileConfig($serverName, $vhostName, $smilfileName, $body)   Adds the specified SMIL File configuration  This API is available in builds 15089 or later.", 
            "title": "postSMILFileConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#example_45", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | \n$smilfileName =  smilfileName_example ; // string | The SMIL file name without the extension\n$body = new \\Model\\SMILFileConfig(); // \\Model\\SMILFileConfig | \n\ntry {\n    $api_instance- postSMILFileConfig($serverName, $vhostName, $smilfileName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsApi- postSMILFileConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#parameters_45", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string      smilfileName  string  The SMIL file name without the extension     body  \\Model\\SMILFileConfig", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#return-type_45", 
            "text": "void (empty response body)", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#authorization_45", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#http-request-headers_45", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#postsmilfilesconfig", 
            "text": "postSMILFilesConfig($serverName, $vhostName, $body)   Adds a SMIL File to the list of SMIL Files for the specified VHost  This API is available in builds 15089 or later.", 
            "title": "postSMILFilesConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#example_46", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | The name of the current VHost the action will be performed on\n$body = new \\Model\\SMILFileConfig(); // \\Model\\SMILFileConfig | \n\ntry {\n    $api_instance- postSMILFilesConfig($serverName, $vhostName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsApi- postSMILFilesConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#parameters_46", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string  The name of the current VHost the action will be performed on     body  \\Model\\SMILFileConfig", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#return-type_46", 
            "text": "void (empty response body)", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#authorization_46", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#http-request-headers_46", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#poststartupstreamconfig", 
            "text": "postStartupStreamConfig($serverName, $vhostName, $streamName, $appName, $instanceName, $body)   Adds the specified Startup Stream configuration  This API is available in builds 15089 or later.", 
            "title": "postStartupStreamConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#example_47", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | \n$streamName =  streamName_example ; // string | \n$appName =  appName_example ; // string | \n$instanceName =  instanceName_example ; // string | \n$body = new \\Model\\StartupStreamConfig(); // \\Model\\StartupStreamConfig | \n\ntry {\n    $api_instance- postStartupStreamConfig($serverName, $vhostName, $streamName, $appName, $instanceName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsApi- postStartupStreamConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#parameters_47", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string      streamName  string      appName  string      instanceName  string      body  \\Model\\StartupStreamConfig", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#return-type_47", 
            "text": "void (empty response body)", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#authorization_47", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#http-request-headers_47", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#poststartupstreamsconfig", 
            "text": "postStartupStreamsConfig($serverName, $vhostName, $body)   Adds a Startup Stream to the list of Startup Streams for the specified VHost  This API is available in builds 15089 or later.", 
            "title": "postStartupStreamsConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#example_48", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | \n$body = new \\Model\\StartupStreamConfig(); // \\Model\\StartupStreamConfig | \n\ntry {\n    $api_instance- postStartupStreamsConfig($serverName, $vhostName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsApi- postStartupStreamsConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#parameters_48", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string      body  \\Model\\StartupStreamConfig", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#return-type_48", 
            "text": "void (empty response body)", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#authorization_48", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#http-request-headers_48", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#poststreamfileconfig", 
            "text": "postStreamFileConfig($serverName, $vhostName, $streamfileName, $body)   Adds the specified Stream File configuration  This API is available in builds 15089 or later.", 
            "title": "postStreamFileConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#example_49", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | \n$streamfileName =  streamfileName_example ; // string | The stream file name without the extension\n$body = new \\Model\\StreamFileConfig(); // \\Model\\StreamFileConfig | \n\ntry {\n    $api_instance- postStreamFileConfig($serverName, $vhostName, $streamfileName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsApi- postStreamFileConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#parameters_49", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string      streamfileName  string  The stream file name without the extension     body  \\Model\\StreamFileConfig", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#return-type_49", 
            "text": "void (empty response body)", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#authorization_49", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#http-request-headers_49", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#poststreamfilesconfig", 
            "text": "postStreamFilesConfig($serverName, $vhostName, $body)   Adds a Stream File to the list of Stream Files for the specified VHost  This API is available in builds 15089 or later.", 
            "title": "postStreamFilesConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#example_50", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | \n$body = new \\Model\\StreamFileConfig(); // \\Model\\StreamFileConfig | \n\ntry {\n    $api_instance- postStreamFilesConfig($serverName, $vhostName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsApi- postStreamFilesConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#parameters_50", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string      body  \\Model\\StreamFileConfig", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#return-type_50", 
            "text": "void (empty response body)", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#authorization_50", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#http-request-headers_50", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#posttranscoderencodeconfig", 
            "text": "postTranscoderEncodeConfig($serverName, $vhostName, $templateName, $encodeName, $body)   Adds the specified Trancoder Encode configuration  This API is available in builds 15089 or later.", 
            "title": "postTranscoderEncodeConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#example_51", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | \n$templateName =  templateName_example ; // string | \n$encodeName =  encodeName_example ; // string | \n$body = new \\Model\\TranscoderEncodeConfig(); // \\Model\\TranscoderEncodeConfig | \n\ntry {\n    $api_instance- postTranscoderEncodeConfig($serverName, $vhostName, $templateName, $encodeName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsApi- postTranscoderEncodeConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#parameters_51", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string      templateName  string      encodeName  string      body  \\Model\\TranscoderEncodeConfig", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#return-type_51", 
            "text": "void (empty response body)", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#authorization_51", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#http-request-headers_51", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#posttranscoderencodesconfig", 
            "text": "postTranscoderEncodesConfig($serverName, $vhostName, $templateName, $body)   Adds a Transcoder Encode Configuration to the specified VHost  This API is available in builds 15089 or later.", 
            "title": "postTranscoderEncodesConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#example_52", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | \n$templateName =  templateName_example ; // string | \n$body = new \\Model\\TranscoderEncodeConfig(); // \\Model\\TranscoderEncodeConfig | \n\ntry {\n    $api_instance- postTranscoderEncodesConfig($serverName, $vhostName, $templateName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsApi- postTranscoderEncodesConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#parameters_52", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string      templateName  string      body  \\Model\\TranscoderEncodeConfig", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#return-type_52", 
            "text": "void (empty response body)", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#authorization_52", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#http-request-headers_52", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#posttranscoderstreamnamegroupconfig", 
            "text": "postTranscoderStreamNameGroupConfig($serverName, $vhostName, $templateName, $groupName, $body)   Adds the specified Trancoder StreamNameGroup configuration  This API is available in builds 15089 or later.", 
            "title": "postTranscoderStreamNameGroupConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#example_53", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | \n$templateName =  templateName_example ; // string | \n$groupName =  groupName_example ; // string | \n$body = new \\Model\\TranscoderStreamNameGroupConfig(); // \\Model\\TranscoderStreamNameGroupConfig | \n\ntry {\n    $api_instance- postTranscoderStreamNameGroupConfig($serverName, $vhostName, $templateName, $groupName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsApi- postTranscoderStreamNameGroupConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#parameters_53", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string      templateName  string      groupName  string      body  \\Model\\TranscoderStreamNameGroupConfig", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#return-type_53", 
            "text": "void (empty response body)", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#authorization_53", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#http-request-headers_53", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#posttranscoderstreamnamegroupsconfig", 
            "text": "postTranscoderStreamNameGroupsConfig($serverName, $vhostName, $templateName, $body)   Adds a Transcoder Stream Name Groups Configuration to the specified Template  This API is available in builds 15089 or later.", 
            "title": "postTranscoderStreamNameGroupsConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#example_54", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | \n$templateName =  templateName_example ; // string | \n$body = new \\Model\\TranscoderStreamNameGroupConfig(); // \\Model\\TranscoderStreamNameGroupConfig | \n\ntry {\n    $api_instance- postTranscoderStreamNameGroupsConfig($serverName, $vhostName, $templateName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsApi- postTranscoderStreamNameGroupsConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#parameters_54", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string      templateName  string      body  \\Model\\TranscoderStreamNameGroupConfig", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#return-type_54", 
            "text": "void (empty response body)", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#authorization_54", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#http-request-headers_54", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#posttranscodertemplateconfig", 
            "text": "postTranscoderTemplateConfig($serverName, $vhostName, $templateName, $body)   Adds the specified Trancoder Template configuration  This API is available in builds 15089 or later.", 
            "title": "postTranscoderTemplateConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#example_55", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | \n$templateName =  templateName_example ; // string | \n$body = new \\Model\\TranscoderTemplateConfig(); // \\Model\\TranscoderTemplateConfig | \n\ntry {\n    $api_instance- postTranscoderTemplateConfig($serverName, $vhostName, $templateName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsApi- postTranscoderTemplateConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#parameters_55", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string      templateName  string      body  \\Model\\TranscoderTemplateConfig", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#return-type_55", 
            "text": "void (empty response body)", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#authorization_55", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#http-request-headers_55", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#posttranscodertemplatesconfig", 
            "text": "postTranscoderTemplatesConfig($serverName, $vhostName, $body)   Adds a Transcoder Templates Configuration to the specified VHost  This API is available in builds 15089 or later.", 
            "title": "postTranscoderTemplatesConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#example_56", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | The name of the current VHost the action will be performed on\n$body = new \\Model\\TranscoderTemplateConfig(); // \\Model\\TranscoderTemplateConfig | \n\ntry {\n    $api_instance- postTranscoderTemplatesConfig($serverName, $vhostName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsApi- postTranscoderTemplatesConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#parameters_56", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string  The name of the current VHost the action will be performed on     body  \\Model\\TranscoderTemplateConfig", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#return-type_56", 
            "text": "void (empty response body)", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#authorization_56", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#http-request-headers_56", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#puthostportconfigadv", 
            "text": "putHostPortConfigAdv($serverName, $vhostName, $portname, $body)   This API is available in builds 15089 or later.", 
            "title": "putHostPortConfigAdv"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#example_57", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | \n$portname =  portname_example ; // string | The port name\n$body = new \\Model\\HostPortConfigAdv(); // \\Model\\HostPortConfigAdv | \n\ntry {\n    $api_instance- putHostPortConfigAdv($serverName, $vhostName, $portname, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsApi- putHostPortConfigAdv: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#parameters_57", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string      portname  string  The port name     body  \\Model\\HostPortConfigAdv", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#return-type_57", 
            "text": "void (empty response body)", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#authorization_57", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#http-request-headers_57", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#puthostportstuneconfig", 
            "text": "putHostportsTuneConfig($serverName, $vhostName, $body)   Updates the host port configuration used for server tuning for the specified vhost  This API is available in builds 15089 or later.", 
            "title": "putHostportsTuneConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#example_58", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | The vhost name\n$body = new \\Model\\HostportsTuneConfig(); // \\Model\\HostportsTuneConfig | \n\ntry {\n    $api_instance- putHostportsTuneConfig($serverName, $vhostName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsApi- putHostportsTuneConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#parameters_58", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string  The vhost name     body  \\Model\\HostportsTuneConfig", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#return-type_58", 
            "text": "void (empty response body)", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#authorization_58", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#http-request-headers_58", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#putmediacachestoreaction", 
            "text": "putMediaCacheStoreAction($serverName, $action, $vhostName, $filename)   This API is available in builds 15942 or later.", 
            "title": "putMediaCacheStoreAction"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#example_59", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$action =  action_example ; // string | The action which should be performed by the server\n$vhostName =  vhostName_example ; // string | The name of the current VHost the action will be performed on\n$filename =  filename_example ; // string | The file or stream name item to be used in all rest action requests\n\ntry {\n    $api_instance- putMediaCacheStoreAction($serverName, $action, $vhostName, $filename);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsApi- putMediaCacheStoreAction: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#parameters_59", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     action  string  The action which should be performed by the server     vhostName  string  The name of the current VHost the action will be performed on     filename  string  The file or stream name item to be used in all rest action requests  [optional]", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#return-type_59", 
            "text": "void (empty response body)", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#authorization_59", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#http-request-headers_59", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#putpublishervhostconfig", 
            "text": "putPublisherVhostConfig($serverName, $vhostName, $publisherName, $body)   Updates the specified Publisher configuration  This API is available in builds 15089 or later.", 
            "title": "putPublisherVhostConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#example_60", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | The vhost name\n$publisherName =  publisherName_example ; // string | The publisher name\n$body = new \\Model\\PublisherVhostConfig(); // \\Model\\PublisherVhostConfig | \n\ntry {\n    $api_instance- putPublisherVhostConfig($serverName, $vhostName, $publisherName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsApi- putPublisherVhostConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#parameters_60", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string  The vhost name     publisherName  string  The publisher name     body  \\Model\\PublisherVhostConfig", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#return-type_60", 
            "text": "void (empty response body)", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#authorization_60", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#http-request-headers_60", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#putsdpfileaction", 
            "text": "putSDPFileAction($serverName, $action, $mediaCasterType, $vhostName, $sdpfileName, $connectAppName, $appInstance)   This API is available in builds 15089 or later.", 
            "title": "putSDPFileAction"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#example_61", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$action =  action_example ; // string | The action which should be performed by the server\n$mediaCasterType =  rtp ; // string | The MediaCasterType to use for the connection\n$vhostName =  vhostName_example ; // string | The name of the current VHost the action will be performed on\n$sdpfileName =  sdpfileName_example ; // string | The SDP file name needed for this REST call\n$connectAppName =  connectAppName_example ; // string | The name of the application to connect to\n$appInstance =  appInstance_example ; // string | The name of the application instance to connect to\n\ntry {\n    $api_instance- putSDPFileAction($serverName, $action, $mediaCasterType, $vhostName, $sdpfileName, $connectAppName, $appInstance);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsApi- putSDPFileAction: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#parameters_61", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     action  string  The action which should be performed by the server     mediaCasterType  string  The MediaCasterType to use for the connection  [default to rtp]    vhostName  string  The name of the current VHost the action will be performed on     sdpfileName  string  The SDP file name needed for this REST call     connectAppName  string  The name of the application to connect to  [optional]    appInstance  string  The name of the application instance to connect to  [optional]", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#return-type_61", 
            "text": "void (empty response body)", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#authorization_61", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#http-request-headers_61", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#putsmilfileaction", 
            "text": "putSMILFileAction($serverName, $action, $mediaCasterType, $vhostName, $smilfileName, $connectAppName, $appInstance, $dstEntryName)   This API is available in builds 15089 or later.", 
            "title": "putSMILFileAction"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#example_62", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$action =  action_example ; // string | The action which should be performed by the server\n$mediaCasterType =  rtp ; // string | The MediaCasterType to use for the connection\n$vhostName =  vhostName_example ; // string | The name of the current VHost the action will be performed on\n$smilfileName =  smilfileName_example ; // string | The SMIL file, file name needed for this REST call\n$connectAppName =  connectAppName_example ; // string | The name of the application to connect to\n$appInstance =  appInstance_example ; // string | The name of the application instance to connect to\n$dstEntryName =  dstEntryName_example ; // string | The destination SMIL file name when copying\n\ntry {\n    $api_instance- putSMILFileAction($serverName, $action, $mediaCasterType, $vhostName, $smilfileName, $connectAppName, $appInstance, $dstEntryName);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsApi- putSMILFileAction: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#parameters_62", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     action  string  The action which should be performed by the server     mediaCasterType  string  The MediaCasterType to use for the connection  [default to rtp]    vhostName  string  The name of the current VHost the action will be performed on     smilfileName  string  The SMIL file, file name needed for this REST call     connectAppName  string  The name of the application to connect to  [optional]    appInstance  string  The name of the application instance to connect to  [optional]    dstEntryName  string  The destination SMIL file name when copying  [optional]", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#return-type_62", 
            "text": "void (empty response body)", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#authorization_62", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#http-request-headers_62", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#putsmilfileconfig", 
            "text": "putSMILFileConfig($serverName, $vhostName, $smilfileName, $body)   Updates the specified SMIL File configuration  This API is available in builds 15089 or later.", 
            "title": "putSMILFileConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#example_63", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | \n$smilfileName =  smilfileName_example ; // string | The SMIL file name without the extension\n$body = new \\Model\\SMILFileConfig(); // \\Model\\SMILFileConfig | \n\ntry {\n    $api_instance- putSMILFileConfig($serverName, $vhostName, $smilfileName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsApi- putSMILFileConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#parameters_63", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string      smilfileName  string  The SMIL file name without the extension     body  \\Model\\SMILFileConfig", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#return-type_63", 
            "text": "void (empty response body)", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#authorization_63", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#http-request-headers_63", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#putsslconfig", 
            "text": "putSSLConfig($serverName, $vhostName, $portname, $body)   Updates the SSL configuration for the specified vhost and port  This API is available in builds 15089 or later.", 
            "title": "putSSLConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#example_64", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | \n$portname =  portname_example ; // string | The port name\n$body = new \\Model\\SSLConfig(); // \\Model\\SSLConfig | \n\ntry {\n    $api_instance- putSSLConfig($serverName, $vhostName, $portname, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsApi- putSSLConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#parameters_64", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string      portname  string  The port name     body  \\Model\\SSLConfig", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#return-type_64", 
            "text": "void (empty response body)", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#authorization_64", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#http-request-headers_64", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#putstartupstreamconfig", 
            "text": "putStartupStreamConfig($serverName, $vhostName, $streamName, $appName, $instanceName, $body)   Updates the specified Startup Stream configuration  This API is available in builds 15089 or later.", 
            "title": "putStartupStreamConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#example_65", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | \n$streamName =  streamName_example ; // string | \n$appName =  appName_example ; // string | \n$instanceName =  instanceName_example ; // string | \n$body = new \\Model\\StartupStreamConfig(); // \\Model\\StartupStreamConfig | \n\ntry {\n    $api_instance- putStartupStreamConfig($serverName, $vhostName, $streamName, $appName, $instanceName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsApi- putStartupStreamConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#parameters_65", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string      streamName  string      appName  string      instanceName  string      body  \\Model\\StartupStreamConfig", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#return-type_65", 
            "text": "void (empty response body)", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#authorization_65", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#http-request-headers_65", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#putstreamfileaction", 
            "text": "putStreamFileAction($serverName, $action, $mediaCasterType, $vhostName, $streamfileName, $connectAppName, $appInstance, $dstEntryName)   This API is available in builds 15089 or later.", 
            "title": "putStreamFileAction"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#example_66", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$action =  action_example ; // string | The action which should be performed by the server\n$mediaCasterType =  rtp ; // string | The MediaCasterType to use for the connection\n$vhostName =  vhostName_example ; // string | The name of the current VHost the action will be performed on\n$streamfileName =  streamfileName_example ; // string | The stream file, file name needed for this REST call\n$connectAppName =  connectAppName_example ; // string | The name of the application to connect to\n$appInstance =  appInstance_example ; // string | The name of the application instance to connect to\n$dstEntryName =  dstEntryName_example ; // string | The destination stream file name when copying\n\ntry {\n    $api_instance- putStreamFileAction($serverName, $action, $mediaCasterType, $vhostName, $streamfileName, $connectAppName, $appInstance, $dstEntryName);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsApi- putStreamFileAction: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#parameters_66", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     action  string  The action which should be performed by the server     mediaCasterType  string  The MediaCasterType to use for the connection  [default to rtp]    vhostName  string  The name of the current VHost the action will be performed on     streamfileName  string  The stream file, file name needed for this REST call     connectAppName  string  The name of the application to connect to  [optional]    appInstance  string  The name of the application instance to connect to  [optional]    dstEntryName  string  The destination stream file name when copying  [optional]", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#return-type_66", 
            "text": "void (empty response body)", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#authorization_66", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#http-request-headers_66", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#putstreamfileconfig", 
            "text": "putStreamFileConfig($serverName, $vhostName, $streamfileName, $body)   Updates the specified Stream File configuration  This API is available in builds 15089 or later.", 
            "title": "putStreamFileConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#example_67", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | \n$streamfileName =  streamfileName_example ; // string | The stream file name without the extension\n$body = new \\Model\\StreamFileConfig(); // \\Model\\StreamFileConfig | \n\ntry {\n    $api_instance- putStreamFileConfig($serverName, $vhostName, $streamfileName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsApi- putStreamFileConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#parameters_67", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string      streamfileName  string  The stream file name without the extension     body  \\Model\\StreamFileConfig", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#return-type_67", 
            "text": "void (empty response body)", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#authorization_67", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#http-request-headers_67", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#putstreamfileconfigadv", 
            "text": "putStreamFileConfigAdv($serverName, $vhostName, $streamfileName, $body)   Updates the Advanced Stream File configuration  This API is available in builds 15089 or later.", 
            "title": "putStreamFileConfigAdv"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#example_68", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | \n$streamfileName =  streamfileName_example ; // string | The stream file name without the .stream extension\n$body = new \\Model\\StreamFileConfigAdv(); // \\Model\\StreamFileConfigAdv | \n\ntry {\n    $api_instance- putStreamFileConfigAdv($serverName, $vhostName, $streamfileName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsApi- putStreamFileConfigAdv: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#parameters_68", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string      streamfileName  string  The stream file name without the .stream extension     body  \\Model\\StreamFileConfigAdv", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#return-type_68", 
            "text": "void (empty response body)", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#authorization_68", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#http-request-headers_68", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#puttranscoderconfig", 
            "text": "putTranscoderConfig($serverName, $vhostName, $body)   Updates the Transcoder configuration for the specified VHost  This API is available in builds 15089 or later.", 
            "title": "putTranscoderConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#example_69", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | \n$body = new \\Model\\TranscoderConfig(); // \\Model\\TranscoderConfig | \n\ntry {\n    $api_instance- putTranscoderConfig($serverName, $vhostName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsApi- putTranscoderConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#parameters_69", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string      body  \\Model\\TranscoderConfig", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#return-type_69", 
            "text": "void (empty response body)", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#authorization_69", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#http-request-headers_69", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#puttranscoderencodeconfig", 
            "text": "putTranscoderEncodeConfig($serverName, $vhostName, $templateName, $encodeName, $body)   Updates the specified Trancoder Encode configuration  This API is available in builds 15089 or later.", 
            "title": "putTranscoderEncodeConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#example_70", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | \n$templateName =  templateName_example ; // string | \n$encodeName =  encodeName_example ; // string | \n$body = new \\Model\\TranscoderEncodeConfig(); // \\Model\\TranscoderEncodeConfig | \n\ntry {\n    $api_instance- putTranscoderEncodeConfig($serverName, $vhostName, $templateName, $encodeName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsApi- putTranscoderEncodeConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#parameters_70", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string      templateName  string      encodeName  string      body  \\Model\\TranscoderEncodeConfig", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#return-type_70", 
            "text": "void (empty response body)", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#authorization_70", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#http-request-headers_70", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#puttranscoderencodeconfigadv", 
            "text": "putTranscoderEncodeConfigAdv($serverName, $vhostName, $templateName, $encodeName, $body)   Updates the Advanced Transcoder Encode configuration  This API is available in builds 15089 or later.", 
            "title": "putTranscoderEncodeConfigAdv"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#example_71", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | \n$templateName =  templateName_example ; // string | \n$encodeName =  encodeName_example ; // string | \n$body = new \\Model\\TranscoderEncodeConfigAdv(); // \\Model\\TranscoderEncodeConfigAdv | \n\ntry {\n    $api_instance- putTranscoderEncodeConfigAdv($serverName, $vhostName, $templateName, $encodeName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsApi- putTranscoderEncodeConfigAdv: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#parameters_71", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string      templateName  string      encodeName  string      body  \\Model\\TranscoderEncodeConfigAdv", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#return-type_71", 
            "text": "void (empty response body)", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#authorization_71", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#http-request-headers_71", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#puttranscoderoverlaydecodeconfig", 
            "text": "putTranscoderOverlayDecodeConfig($serverName, $vhostName, $templateName, $overlayName, $body)   Updates the specified Trancoder Overlay Decode configuration  This API is available in builds 15089 or later.", 
            "title": "putTranscoderOverlayDecodeConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#example_72", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | \n$templateName =  templateName_example ; // string | \n$overlayName =  overlayName_example ; // string | \n$body = new \\Model\\TranscoderOverlayDecodeConfig(); // \\Model\\TranscoderOverlayDecodeConfig | \n\ntry {\n    $api_instance- putTranscoderOverlayDecodeConfig($serverName, $vhostName, $templateName, $overlayName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsApi- putTranscoderOverlayDecodeConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#parameters_72", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string      templateName  string      overlayName  string      body  \\Model\\TranscoderOverlayDecodeConfig", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#return-type_72", 
            "text": "void (empty response body)", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#authorization_72", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#http-request-headers_72", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#puttranscoderoverlayencodeconfig", 
            "text": "putTranscoderOverlayEncodeConfig($serverName, $vhostName, $templateName, $overlayName, $encodeName, $body)   Updates the specified Trancoder Overlay Encode configuration  This API is available in builds 15089 or later.", 
            "title": "putTranscoderOverlayEncodeConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#example_73", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | \n$templateName =  templateName_example ; // string | \n$overlayName =  overlayName_example ; // string | \n$encodeName =  encodeName_example ; // string | \n$body = new \\Model\\TranscoderOverlayEncodeConfig(); // \\Model\\TranscoderOverlayEncodeConfig | \n\ntry {\n    $api_instance- putTranscoderOverlayEncodeConfig($serverName, $vhostName, $templateName, $overlayName, $encodeName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsApi- putTranscoderOverlayEncodeConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#parameters_73", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string      templateName  string      overlayName  string      encodeName  string      body  \\Model\\TranscoderOverlayEncodeConfig", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#return-type_73", 
            "text": "void (empty response body)", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#authorization_73", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#http-request-headers_73", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#puttranscoderstreamnamegroupconfig", 
            "text": "putTranscoderStreamNameGroupConfig($serverName, $vhostName, $templateName, $groupName, $body)   Updates the specified Trancoder StreamNameGroup configuration  This API is available in builds 15089 or later.", 
            "title": "putTranscoderStreamNameGroupConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#example_74", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | \n$templateName =  templateName_example ; // string | \n$groupName =  groupName_example ; // string | \n$body = new \\Model\\TranscoderStreamNameGroupConfig(); // \\Model\\TranscoderStreamNameGroupConfig | \n\ntry {\n    $api_instance- putTranscoderStreamNameGroupConfig($serverName, $vhostName, $templateName, $groupName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsApi- putTranscoderStreamNameGroupConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#parameters_74", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string      templateName  string      groupName  string      body  \\Model\\TranscoderStreamNameGroupConfig", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#return-type_74", 
            "text": "void (empty response body)", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#authorization_74", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#http-request-headers_74", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#puttranscodertemplateaction", 
            "text": "putTranscoderTemplateAction($serverName, $action, $vhostName, $templateName, $dstEntryName)   This API is available in builds 15089 or later.", 
            "title": "putTranscoderTemplateAction"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#example_75", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$action =  action_example ; // string | The action which should be performed by the server\n$vhostName =  vhostName_example ; // string | The name of the current VHost the action will be performed on\n$templateName =  templateName_example ; // string | The template name needed for this REST call\n$dstEntryName =  dstEntryName_example ; // string | The destination transcoder template name when copying\n\ntry {\n    $api_instance- putTranscoderTemplateAction($serverName, $action, $vhostName, $templateName, $dstEntryName);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsApi- putTranscoderTemplateAction: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#parameters_75", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     action  string  The action which should be performed by the server     vhostName  string  The name of the current VHost the action will be performed on     templateName  string  The template name needed for this REST call     dstEntryName  string  The destination transcoder template name when copying  [optional]", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#return-type_75", 
            "text": "void (empty response body)", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#authorization_75", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#http-request-headers_75", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#puttranscodertemplateconfig", 
            "text": "putTranscoderTemplateConfig($serverName, $vhostName, $templateName, $body)   Updates the specified Trancoder Template configuration  This API is available in builds 15089 or later.", 
            "title": "putTranscoderTemplateConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#example_76", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | \n$templateName =  templateName_example ; // string | \n$body = new \\Model\\TranscoderTemplateConfig(); // \\Model\\TranscoderTemplateConfig | \n\ntry {\n    $api_instance- putTranscoderTemplateConfig($serverName, $vhostName, $templateName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsApi- putTranscoderTemplateConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#parameters_76", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string      templateName  string      body  \\Model\\TranscoderTemplateConfig", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#return-type_76", 
            "text": "void (empty response body)", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#authorization_76", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#http-request-headers_76", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#puttranscodertemplateconfigadv", 
            "text": "putTranscoderTemplateConfigAdv($serverName, $vhostName, $templateName, $body)   Updates the Advanced Transcoder Template configuration  This API is available in builds 15089 or later.", 
            "title": "putTranscoderTemplateConfigAdv"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#example_77", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | \n$templateName =  templateName_example ; // string | \n$body = new \\Model\\TranscoderTemplateConfigAdv(); // \\Model\\TranscoderTemplateConfigAdv | \n\ntry {\n    $api_instance- putTranscoderTemplateConfigAdv($serverName, $vhostName, $templateName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsApi- putTranscoderTemplateConfigAdv: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#parameters_77", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string      templateName  string      body  \\Model\\TranscoderTemplateConfigAdv", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#return-type_77", 
            "text": "void (empty response body)", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#authorization_77", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#http-request-headers_77", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#putvhostaction", 
            "text": "putVHostAction($serverName, $action, $vhostName)   This API is available in builds 15089 or later.", 
            "title": "putVHostAction"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#example_78", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$action =  action_example ; // string | The action which should be performed by the server\n$vhostName =  vhostName_example ; // string | The name of the current VHost the action will be performed on\n\ntry {\n    $api_instance- putVHostAction($serverName, $action, $vhostName);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsApi- putVHostAction: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#parameters_78", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     action  string  The action which should be performed by the server     vhostName  string  The name of the current VHost the action will be performed on", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#return-type_78", 
            "text": "void (empty response body)", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#authorization_78", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#http-request-headers_78", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#putvhostconfig", 
            "text": "putVHostConfig($serverName, $vhostName, $body)   Updates the specified VHost configuration  This API is available in builds 15089 or later.", 
            "title": "putVHostConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#example_79", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | The vhost name\n$body = new \\Model\\VHostConfig(); // \\Model\\VHostConfig | \n\ntry {\n    $api_instance- putVHostConfig($serverName, $vhostName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsApi- putVHostConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#parameters_79", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string  The vhost name     body  \\Model\\VHostConfig", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#return-type_79", 
            "text": "void (empty response body)", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#authorization_79", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#http-request-headers_79", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#putvhostconfigadv", 
            "text": "putVHostConfigAdv($serverName, $vhostName, $body)   Updates the specified advanced VHost configuration  This API is available in builds 15089 or later.", 
            "title": "putVHostConfigAdv"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#example_80", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | \n$body = new \\Model\\VHostConfigAdv(); // \\Model\\VHostConfigAdv | \n\ntry {\n    $api_instance- putVHostConfigAdv($serverName, $vhostName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsApi- putVHostConfigAdv: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#parameters_80", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string      body  \\Model\\VHostConfigAdv", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#return-type_80", 
            "text": "void (empty response body)", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#authorization_80", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#http-request-headers_80", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#putvhosttuneconfig", 
            "text": "putVHostTuneConfig($serverName, $vhostName, $body)   Updates the Tuning configuration for the specifed vhost  This API is available in builds 15089 or later.", 
            "title": "putVHostTuneConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#example_81", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | The vhost name\n$body = new \\Model\\VHostTuneConfig(); // \\Model\\VHostTuneConfig | \n\ntry {\n    $api_instance- putVHostTuneConfig($serverName, $vhostName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsApi- putVHostTuneConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#parameters_81", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string  The vhost name     body  \\Model\\VHostTuneConfig", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#return-type_81", 
            "text": "void (empty response body)", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#authorization_81", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsApi/#http-request-headers_81", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/", 
            "text": "WowzaApi\\VserversserverNamevhostsvhostNameapplicationsApi\n\n\nAll URIs are relative to \nhttp://localhost:8087/\n\n\n\n\n\n\n\n\nMethod\n\n\nHTTP request\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\ndeleteApplicationConfig\n\n\nDELETE\n /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}\n\n\nDeletes the specified Application configuration\n\n\n\n\n\n\ndeletePublisherAppConfig\n\n\nDELETE\n /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/publishers/{publisherName}\n\n\nDeletes the specified Publisher configuration\n\n\n\n\n\n\ndeletePushPublishStreamAppConfig\n\n\nDELETE\n /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/pushpublish/mapentries/{entryName}\n\n\nDeletes the specified PushPublish map entry configuration\n\n\n\n\n\n\ndeleteSDPFileAppConfig\n\n\nDELETE\n /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/sdpfiles/{sdpfileName}\n\n\nDeletes the specified SDP file\n\n\n\n\n\n\ndeleteSMILFileAppConfig\n\n\nDELETE\n /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/smilfiles/{smilfileName}\n\n\nDeletes the specified SMIL File configuration\n\n\n\n\n\n\ndeleteStreamFileAppConfig\n\n\nDELETE\n /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/streamfiles/{streamfileName}\n\n\nDeletes the specified Stream File configuration\n\n\n\n\n\n\ndeleteTranscoderEncodeAppConfig\n\n\nDELETE\n /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/transcoder/templates/{templateName}/encodes/{encodeName}\n\n\nDeletes the specified Trancoder Encode configuration\n\n\n\n\n\n\ndeleteTranscoderOverlayDecodeAppConfig\n\n\nDELETE\n /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/transcoder/templates/{templateName}/decode/overlays/{overlayName}\n\n\nDeletes the specified Trancoder Overlay Decode configuration\n\n\n\n\n\n\ndeleteTranscoderOverlayEncodeAppConfig\n\n\nDELETE\n /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/transcoder/templates/{templateName}/encodes/{encodeName}/overlays/{overlayName}\n\n\nDeletes the specified Trancoder Overlay Encode configuration\n\n\n\n\n\n\ndeleteTranscoderStreamNameGroupAppConfig\n\n\nDELETE\n /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/transcoder/templates/{templateName}/streamnamegroups/{groupName}\n\n\nDeletes the specified Trancoder StreamNameGroup configuration\n\n\n\n\n\n\ndeleteTranscoderTemplateAppConfig\n\n\nDELETE\n /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/transcoder/templates/{templateName}\n\n\nDeletes the specified Trancoder Template configuration\n\n\n\n\n\n\ngetApplicationConfig\n\n\nGET\n /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}\n\n\nRetrieves the specified Application configuration\n\n\n\n\n\n\ngetApplicationConfigAdv\n\n\nGET\n /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/adv\n\n\nRetrieves the specified advanced Application configuration\n\n\n\n\n\n\ngetApplicationsConfig\n\n\nGET\n /v2/servers/{serverName}/vhosts/{vhostName}/applications\n\n\nRetrieves the list of Applications for the specifed vhost\n\n\n\n\n\n\ngetBuyDRMStreamMapsConfig\n\n\nGET\n /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/drm/buydrmmapfile\n\n\nRetrieves the BuyDRM stream mapfile for the specified Application\n\n\n\n\n\n\ngetCurrentApplicationStatistics\n\n\nGET\n /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/monitoring/current\n\n\nRetrieves the current Application statistics\n\n\n\n\n\n\ngetCurrentIncomingStreamStatistics\n\n\nGET\n /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/instances/{instanceName}/incomingstreams/{streamName}/monitoring/current\n\n\nRetrieves the Current Incoming Stream statistics for the specifed Incoming Stream\n\n\n\n\n\n\ngetDRMConfig\n\n\nGET\n /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/drm\n\n\nRetrieves the DRM configuration for the specified Application\n\n\n\n\n\n\ngetDRMConfigAdv\n\n\nGET\n /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/drm/adv\n\n\nRetrieves the advanced DRM configuration for the specified Application\n\n\n\n\n\n\ngetDVRConfig\n\n\nGET\n /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/dvr\n\n\nRetrieves the DVR configuration for the specified Application\n\n\n\n\n\n\ngetDVRConfigAdv\n\n\nGET\n /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/dvr/adv\n\n\nRetrieves the advanced DVR configuration for the specified Application\n\n\n\n\n\n\ngetDefaultStreamRecorderConfig\n\n\nGET\n /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/instances/{instanceName}/streamrecorders/{recorderName}/default\n\n\nRetrieves a Stream Recorder of the requested name, popluated with the default values\n\n\n\n\n\n\ngetDvrRESTConverterStore\n\n\nGET\n /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/instances/{instanceName}/dvrstores/{dvrStoreName}\n\n\nRetrieves the information about a store/converter associated with the application instance\n\n\n\n\n\n\ngetDvrRESTConverterStores\n\n\nGET\n /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/instances/{instanceName}/dvrstores\n\n\nRetrieves the list of DVR stores associated with this application instance\n\n\n\n\n\n\ngetHistoricApplicationStatistics\n\n\nGET\n /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/monitoring/historic\n\n\nRetrieves the historic Application statistics\n\n\n\n\n\n\ngetIncomingStreamConfig\n\n\nGET\n /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/instances/{instanceName}/incomingstreams/{streamName}\n\n\nRetrieves the Incoming Stream information for the specifed Incoming Stream\n\n\n\n\n\n\ngetInstanceConfig\n\n\nGET\n /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/instances/{instanceName}\n\n\nRetrieves the specified Application Instance information\n\n\n\n\n\n\ngetInstancesConfig\n\n\nGET\n /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/instances\n\n\nRetrieves the list of Instances for the specified Application\n\n\n\n\n\n\ngetLiveEncoderConfig\n\n\nGET\n /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/instances/{instanceName}/incomingstreams/{streamName}/encoder/live\n\n\nRetrieves the LiveEncoder configuration for the specified IncomingStream\n\n\n\n\n\n\ngetModulesConfig\n\n\nGET\n /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/modules\n\n\nRetrieves the list of Modules for the specified Application\n\n\n\n\n\n\ngetPublisherAppConfig\n\n\nGET\n /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/publishers/{publisherName}\n\n\nRetrieves the specified Publisher configuration\n\n\n\n\n\n\ngetPublishersAppConfig\n\n\nGET\n /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/publishers\n\n\nRetrieves the list of Publishers for the specified Application\n\n\n\n\n\n\ngetPushPublishStreamAppConfig\n\n\nGET\n /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/pushpublish/mapentries/{entryName}\n\n\nRetrieves the PushPublish map entry configuration for the specified Application\n\n\n\n\n\n\ngetPushPublishStreamsAppConfig\n\n\nGET\n /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/pushpublish/mapentries\n\n\nRetrieves the list of PushPublish Streams for the specified Application\n\n\n\n\n\n\ngetSDPFilesAppConfig\n\n\nGET\n /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/sdpfiles\n\n\nRetrieves the list of SDP Files for the specified Application\n\n\n\n\n\n\ngetSMILFileAppConfig\n\n\nGET\n /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/smilfiles/{smilfileName}\n\n\nRetrieves the specified SMIL File configuration\n\n\n\n\n\n\ngetSMILFilesAppConfig\n\n\nGET\n /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/smilfiles\n\n\nRetrieves the list of SMIL Files for the specified Application\n\n\n\n\n\n\ngetSecurityConfig\n\n\nGET\n /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/security\n\n\nRetrieves the Security configuration for the specified Application\n\n\n\n\n\n\ngetShortUrlEncoderConfig\n\n\nGET\n /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/instances/{instanceName}/incomingstreams/{streamName}/encoder/shorturl\n\n\nRetrieves the Short URL for the LiveEncoder configuration for the specified IncomingStream\n\n\n\n\n\n\ngetSourceControlConfig\n\n\nGET\n /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/instances/{instanceName}/incomingstreams/{streamName}/sourcecontrol\n\n\nGets information about the Source Control and it\ns supported features\n\n\n\n\n\n\ngetStreamConfigurationConfig\n\n\nGET\n /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/streamconfiguration\n\n\nRetrieves the Stream configuration for the specified Application\n\n\n\n\n\n\ngetStreamFileAppConfig\n\n\nGET\n /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/streamfiles/{streamfileName}\n\n\nRetrieves the specified Stream File configuration\n\n\n\n\n\n\ngetStreamFileAppConfigAdv\n\n\nGET\n /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/streamfiles/{streamfileName}/adv\n\n\nRetrieves the Advanced Stream File configuration\n\n\n\n\n\n\ngetStreamFilesAppConfig\n\n\nGET\n /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/streamfiles\n\n\nRetrieves the list of Stream Files for the specified Application\n\n\n\n\n\n\ngetStreamGroupConfig\n\n\nGET\n /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/instances/{instanceName}/streamgroups/{groupName}\n\n\nRetrieves the specified StreamGroup configuration\n\n\n\n\n\n\ngetStreamGroupsConfig\n\n\nGET\n /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/instances/{instanceName}/streamgroups\n\n\nRetrieves the list of Stream Groups for the specified Application Instance\n\n\n\n\n\n\ngetStreamRecorderConfig\n\n\nGET\n /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/instances/{instanceName}/streamrecorders/{recorderName}\n\n\nRetrieves the specifed Stream Recorder\n\n\n\n\n\n\ngetStreamRecordersConfig\n\n\nGET\n /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/instances/{instanceName}/streamrecorders\n\n\nRetrieves the list of Stream Recorders for the specified Application Instance\n\n\n\n\n\n\ngetTranscoderAppConfig\n\n\nGET\n /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/transcoder\n\n\nRetrieves the Transcoder configuration for the specified Application\n\n\n\n\n\n\ngetTranscoderAppConfigAdv\n\n\nGET\n /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/transcoder/adv\n\n\nRetrieves the Advanced Transcoder configuration for the specified Application\n\n\n\n\n\n\ngetTranscoderEncodeAppConfig\n\n\nGET\n /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/transcoder/templates/{templateName}/encodes/{encodeName}\n\n\nRetrieves the specified Trancoder Encode configuration\n\n\n\n\n\n\ngetTranscoderEncodeAppConfigAdv\n\n\nGET\n /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/transcoder/templates/{templateName}/encodes/{encodeName}/adv\n\n\nRetrieves the Advanced Transcoder Encode configuration\n\n\n\n\n\n\ngetTranscoderEncodesAppConfig\n\n\nGET\n /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/transcoder/templates/{templateName}/encodes\n\n\nRetrieves the list of Transcoder Encode Configurations for the specified Application\n\n\n\n\n\n\ngetTranscoderOverlayDecodeAppConfig\n\n\nGET\n /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/transcoder/templates/{templateName}/decode/overlays/{overlayName}\n\n\nRetrieves the specified Trancoder Overlay Decode configuration\n\n\n\n\n\n\ngetTranscoderOverlayEncodeAppConfig\n\n\nGET\n /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/transcoder/templates/{templateName}/encodes/{encodeName}/overlays/{overlayName}\n\n\nRetrieves the specified Trancoder Overlay Encode configuration\n\n\n\n\n\n\ngetTranscoderStreamNameGroupAppConfig\n\n\nGET\n /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/transcoder/templates/{templateName}/streamnamegroups/{groupName}\n\n\nRetrieves the specified Trancoder StreamNameGroup configuration\n\n\n\n\n\n\ngetTranscoderStreamNameGroupsAppConfig\n\n\nGET\n /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/transcoder/templates/{templateName}/streamnamegroups\n\n\nRetrieves the list of Transcoder Stream Name Groups for the specified Template\n\n\n\n\n\n\ngetTranscoderTemplateAppConfig\n\n\nGET\n /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/transcoder/templates/{templateName}\n\n\nRetrieves the specified Trancoder Template configuration\n\n\n\n\n\n\ngetTranscoderTemplateAppConfigAdv\n\n\nGET\n /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/transcoder/templates/{templateName}/adv\n\n\nRetrieves the Advanced Transcoder Template configuration\n\n\n\n\n\n\ngetTranscoderTemplatesAppConfig\n\n\nGET\n /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/transcoder/templates\n\n\nRetrieves the list of Transcoder Template Configurations for the specified Application\n\n\n\n\n\n\ngetVerimatrixStreamMapsConfig\n\n\nGET\n /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/drm/verimatrixmapfile\n\n\nRetrieves the Verimatrix stream mapfile for the specified Application\n\n\n\n\n\n\npostApplicationConfig\n\n\nPOST\n /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}\n\n\nAdds the specified Application configuration\n\n\n\n\n\n\npostApplicationConfigAdv\n\n\nPOST\n /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/adv\n\n\nAdds the specified advanced Application configuration\n\n\n\n\n\n\npostApplicationsConfig\n\n\nPOST\n /v2/servers/{serverName}/vhosts/{vhostName}/applications\n\n\nAdds an Application to the list of Applications  for the specifed vhost\n\n\n\n\n\n\npostPublisherAppConfig\n\n\nPOST\n /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/publishers/{publisherName}\n\n\nAdds the specified Publisher configuration\n\n\n\n\n\n\npostPublishersAppConfig\n\n\nPOST\n /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/publishers\n\n\nAdd a Publisher to list of Publishers for the specified Application\n\n\n\n\n\n\npostPushPublishStreamAppConfig\n\n\nPOST\n /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/pushpublish/mapentries/{entryName}\n\n\nAdds the specified PushPublish map entry configuration\n\n\n\n\n\n\npostPushPublishStreamsAppConfig\n\n\nPOST\n /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/pushpublish/mapentries\n\n\nAdds a PushPublish Stream to list of PushPublish Streams for the specified Application\n\n\n\n\n\n\npostSMILFileAppConfig\n\n\nPOST\n /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/smilfiles/{smilfileName}\n\n\nAdds the specified SMIL File configuration\n\n\n\n\n\n\npostSMILFilesAppConfig\n\n\nPOST\n /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/smilfiles\n\n\nAdds a SMIL File to the list of SMIL Files for the specified Application\n\n\n\n\n\n\npostStreamFileAppConfig\n\n\nPOST\n /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/streamfiles/{streamfileName}\n\n\nAdds the specified Stream File configuration\n\n\n\n\n\n\npostStreamFilesAppConfig\n\n\nPOST\n /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/streamfiles\n\n\nAdds a Stream File to the list of Stream Files for the specified Application\n\n\n\n\n\n\npostStreamRecorderConfig\n\n\nPOST\n /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/instances/{instanceName}/streamrecorders/{recorderName}\n\n\nCreates a new Stream Recorder and starts recording\n\n\n\n\n\n\npostStreamRecordersConfig\n\n\nPOST\n /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/instances/{instanceName}/streamrecorders\n\n\nCreates a new Stream Recorder in the specified Application Instance and starts recording\n\n\n\n\n\n\npostTranscoderEncodeAppConfig\n\n\nPOST\n /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/transcoder/templates/{templateName}/encodes/{encodeName}\n\n\nAdds the specified Trancoder Encode configuration\n\n\n\n\n\n\npostTranscoderEncodesAppConfig\n\n\nPOST\n /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/transcoder/templates/{templateName}/encodes\n\n\nAdds a Transcoder Encode Configuration to the specified Application\n\n\n\n\n\n\npostTranscoderStreamNameGroupAppConfig\n\n\nPOST\n /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/transcoder/templates/{templateName}/streamnamegroups/{groupName}\n\n\nAdds the specified Trancoder StreamNameGroup configuration\n\n\n\n\n\n\npostTranscoderStreamNameGroupsAppConfig\n\n\nPOST\n /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/transcoder/templates/{templateName}/streamnamegroups\n\n\nAdds a Transcoder Stream Name Groups Configuration to the specified Template\n\n\n\n\n\n\npostTranscoderTemplateAppConfig\n\n\nPOST\n /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/transcoder/templates/{templateName}\n\n\nAdds the specified Trancoder Template configuration\n\n\n\n\n\n\npostTranscoderTemplatesAppConfig\n\n\nPOST\n /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/transcoder/templates\n\n\nAdds a Transcoder Templates Configuration to the specified Application\n\n\n\n\n\n\nputApplicationAction\n\n\nPUT\n /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/actions/{action}\n\n\n\n\n\n\n\n\nputApplicationConfig\n\n\nPUT\n /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}\n\n\nUpdates the specified Application configuration\n\n\n\n\n\n\nputApplicationConfigAdv\n\n\nPUT\n /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/adv\n\n\nUpdates the specified advanced Application configuration\n\n\n\n\n\n\nputBuyDRMStreamMapsConfig\n\n\nPUT\n /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/drm/buydrmmapfile\n\n\nUpdates the BuyDRM stream mapfile for the specified Application\n\n\n\n\n\n\nputDRMConfig\n\n\nPUT\n /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/drm\n\n\nUpdates the DRM configuration for the specified Application\n\n\n\n\n\n\nputDRMConfigAdv\n\n\nPUT\n /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/drm/adv\n\n\nUpdates the advanced DRM configuration for the specified Application\n\n\n\n\n\n\nputDVRConfig\n\n\nPUT\n /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/dvr\n\n\nUpdates the DVR configuration for the specified Application\n\n\n\n\n\n\nputDVRConfigAdv\n\n\nPUT\n /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/dvr/adv\n\n\nUpdates the advanced DVR configuration for the specified Application\n\n\n\n\n\n\nputDvrRESTConverterStoreAction\n\n\nPUT\n /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/instances/{instanceName}/dvrstores/{dvrStoreName}/actions/{action}\n\n\n\n\n\n\n\n\nputDvrRESTConverterStoresAction\n\n\nPUT\n /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/instances/{instanceName}/dvrstores/actions/{action}\n\n\n\n\n\n\n\n\nputIncomingStreamAction\n\n\nPUT\n /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/instances/{instanceName}/incomingstreams/{streamName}/actions/{action}\n\n\n\n\n\n\n\n\nputInstanceAction\n\n\nPUT\n /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/instances/{instanceName}/actions/{action}\n\n\n\n\n\n\n\n\nputMediaCacheApplicationStoreAction\n\n\nPUT\n /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/instances/{instanceName}/mediacache/stores/actions/{action}\n\n\n\n\n\n\n\n\nputModulesConfig\n\n\nPUT\n /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/modules\n\n\nUpdates the list of Modules for the specified Application\n\n\n\n\n\n\nputPublisherAppConfig\n\n\nPUT\n /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/publishers/{publisherName}\n\n\nUpdates the specified Publisher configuration\n\n\n\n\n\n\nputPushPublishStreamAppAction\n\n\nPUT\n /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/pushpublish/mapentries/{entryName}/actions/{action}\n\n\n\n\n\n\n\n\nputPushPublishStreamAppConfig\n\n\nPUT\n /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/pushpublish/mapentries/{entryName}\n\n\nUpdates the specified PushPublish map entry configuration\n\n\n\n\n\n\nputPushPublishStreamsAppConfig\n\n\nPUT\n /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/pushpublish/mapentries\n\n\n\n\n\n\n\n\nputSDPFileAppAction\n\n\nPUT\n /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/sdpfiles/{sdpfileName}/actions/{action}\n\n\n\n\n\n\n\n\nputSMILFileAppAction\n\n\nPUT\n /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/smilfiles/{smilfileName}/actions/{action}\n\n\n\n\n\n\n\n\nputSMILFileAppConfig\n\n\nPUT\n /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/smilfiles/{smilfileName}\n\n\nUpdates the specified SMIL File configuration\n\n\n\n\n\n\nputSecurityConfig\n\n\nPUT\n /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/security\n\n\nUpdates the Security configuration for the specified Application\n\n\n\n\n\n\nputSourceControlAction\n\n\nPUT\n /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/instances/{instanceName}/incomingstreams/{streamName}/sourcecontrol/actions/{action}\n\n\n\n\n\n\n\n\nputStreamConfigurationConfig\n\n\nPUT\n /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/streamconfiguration\n\n\nUpdates the Stream configuration for the specified Application\n\n\n\n\n\n\nputStreamFileAppAction\n\n\nPUT\n /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/streamfiles/{streamfileName}/actions/{action}\n\n\n\n\n\n\n\n\nputStreamFileAppConfig\n\n\nPUT\n /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/streamfiles/{streamfileName}\n\n\nUpdates the specified Stream File configuration\n\n\n\n\n\n\nputStreamFileAppConfigAdv\n\n\nPUT\n /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/streamfiles/{streamfileName}/adv\n\n\nUpdates the Advanced Stream File configuration\n\n\n\n\n\n\nputStreamGroupAction\n\n\nPUT\n /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/instances/{instanceName}/streamgroups/{groupName}/actions/{action}\n\n\n\n\n\n\n\n\nputStreamRecorderAction\n\n\nPUT\n /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/instances/{instanceName}/streamrecorders/{recorderName}/actions/{action}\n\n\n\n\n\n\n\n\nputTranscoderAppConfig\n\n\nPUT\n /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/transcoder\n\n\nUpdates the Transcoder configuration for the specified Application\n\n\n\n\n\n\nputTranscoderAppConfigAdv\n\n\nPUT\n /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/transcoder/adv\n\n\nUpdates the Advanced Transcoder configuration for the specified Application\n\n\n\n\n\n\nputTranscoderEncodeAppConfig\n\n\nPUT\n /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/transcoder/templates/{templateName}/encodes/{encodeName}\n\n\nUpdates the specified Trancoder Encode configuration\n\n\n\n\n\n\nputTranscoderEncodeAppConfigAdv\n\n\nPUT\n /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/transcoder/templates/{templateName}/encodes/{encodeName}/adv\n\n\nUpdates the Advanced Transcoder Encode configuration\n\n\n\n\n\n\nputTranscoderOverlayDecodeAppConfig\n\n\nPUT\n /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/transcoder/templates/{templateName}/decode/overlays/{overlayName}\n\n\nUpdates the specified Trancoder Overlay Decode configuration\n\n\n\n\n\n\nputTranscoderOverlayEncodeAppConfig\n\n\nPUT\n /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/transcoder/templates/{templateName}/encodes/{encodeName}/overlays/{overlayName}\n\n\nUpdates the specified Trancoder Overlay Encode configuration\n\n\n\n\n\n\nputTranscoderStreamNameGroupAppConfig\n\n\nPUT\n /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/transcoder/templates/{templateName}/streamnamegroups/{groupName}\n\n\nUpdates the specified Trancoder StreamNameGroup configuration\n\n\n\n\n\n\nputTranscoderTemplateAppAction\n\n\nPUT\n /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/transcoder/templates/{templateName}/actions/{action}\n\n\n\n\n\n\n\n\nputTranscoderTemplateAppConfig\n\n\nPUT\n /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/transcoder/templates/{templateName}\n\n\nUpdates the specified Trancoder Template configuration\n\n\n\n\n\n\nputTranscoderTemplateAppConfigAdv\n\n\nPUT\n /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/transcoder/templates/{templateName}/adv\n\n\nUpdates the Advanced Transcoder Template configuration\n\n\n\n\n\n\nputVerimatrixStreamMapsConfig\n\n\nPUT\n /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/drm/verimatrixmapfile\n\n\nUpdates the Verimatrix stream mapfile for the specified Application\n\n\n\n\n\n\n\n\ndeleteApplicationConfig\n\n\n\n\ndeleteApplicationConfig($serverName, $vhostName, $appName)\n\n\n\n\nDeletes the specified Application configuration\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | \n$appName = \nappName_example\n; // string | \n\ntry {\n    $api_instance-\ndeleteApplicationConfig($serverName, $vhostName, $appName);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi-\ndeleteApplicationConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nappName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\nvoid (empty response body)\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\ndeletePublisherAppConfig\n\n\n\n\ndeletePublisherAppConfig($serverName, $vhostName, $publisherName, $appName)\n\n\n\n\nDeletes the specified Publisher configuration\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | The vhost name\n$publisherName = \npublisherName_example\n; // string | The publisher name\n$appName = \nappName_example\n; // string | \n\ntry {\n    $api_instance-\ndeletePublisherAppConfig($serverName, $vhostName, $publisherName, $appName);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi-\ndeletePublisherAppConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\nThe vhost name\n\n\n\n\n\n\n\n\npublisherName\n\n\nstring\n\n\nThe publisher name\n\n\n\n\n\n\n\n\nappName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\nvoid (empty response body)\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\ndeletePushPublishStreamAppConfig\n\n\n\n\ndeletePushPublishStreamAppConfig($serverName, $vhostName, $appName, $entryName)\n\n\n\n\nDeletes the specified PushPublish map entry configuration\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | \n$appName = \nappName_example\n; // string | \n$entryName = \nentryName_example\n; // string | The entry name needed for this REST call\n\ntry {\n    $api_instance-\ndeletePushPublishStreamAppConfig($serverName, $vhostName, $appName, $entryName);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi-\ndeletePushPublishStreamAppConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nappName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nentryName\n\n\nstring\n\n\nThe entry name needed for this REST call\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\nvoid (empty response body)\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\ndeleteSDPFileAppConfig\n\n\n\n\ndeleteSDPFileAppConfig($serverName, $vhostName, $sdpfileName, $appName)\n\n\n\n\nDeletes the specified SDP file\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | \n$sdpfileName = \nsdpfileName_example\n; // string | The SDP file name without the extension\n$appName = \nappName_example\n; // string | \n\ntry {\n    $api_instance-\ndeleteSDPFileAppConfig($serverName, $vhostName, $sdpfileName, $appName);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi-\ndeleteSDPFileAppConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nsdpfileName\n\n\nstring\n\n\nThe SDP file name without the extension\n\n\n\n\n\n\n\n\nappName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\nvoid (empty response body)\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\ndeleteSMILFileAppConfig\n\n\n\n\ndeleteSMILFileAppConfig($serverName, $vhostName, $smilfileName, $appName)\n\n\n\n\nDeletes the specified SMIL File configuration\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | \n$smilfileName = \nsmilfileName_example\n; // string | The SMIL file name without the extension\n$appName = \nappName_example\n; // string | \n\ntry {\n    $api_instance-\ndeleteSMILFileAppConfig($serverName, $vhostName, $smilfileName, $appName);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi-\ndeleteSMILFileAppConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nsmilfileName\n\n\nstring\n\n\nThe SMIL file name without the extension\n\n\n\n\n\n\n\n\nappName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\nvoid (empty response body)\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\ndeleteStreamFileAppConfig\n\n\n\n\ndeleteStreamFileAppConfig($serverName, $vhostName, $streamfileName, $appName)\n\n\n\n\nDeletes the specified Stream File configuration\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | \n$streamfileName = \nstreamfileName_example\n; // string | The stream file name without the extension\n$appName = \nappName_example\n; // string | \n\ntry {\n    $api_instance-\ndeleteStreamFileAppConfig($serverName, $vhostName, $streamfileName, $appName);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi-\ndeleteStreamFileAppConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nstreamfileName\n\n\nstring\n\n\nThe stream file name without the extension\n\n\n\n\n\n\n\n\nappName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\nvoid (empty response body)\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\ndeleteTranscoderEncodeAppConfig\n\n\n\n\ndeleteTranscoderEncodeAppConfig($serverName, $vhostName, $templateName, $encodeName, $appName)\n\n\n\n\nDeletes the specified Trancoder Encode configuration\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | \n$templateName = \ntemplateName_example\n; // string | \n$encodeName = \nencodeName_example\n; // string | \n$appName = \nappName_example\n; // string | \n\ntry {\n    $api_instance-\ndeleteTranscoderEncodeAppConfig($serverName, $vhostName, $templateName, $encodeName, $appName);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi-\ndeleteTranscoderEncodeAppConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ntemplateName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nencodeName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nappName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\nvoid (empty response body)\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\ndeleteTranscoderOverlayDecodeAppConfig\n\n\n\n\ndeleteTranscoderOverlayDecodeAppConfig($serverName, $vhostName, $templateName, $overlayName, $appName)\n\n\n\n\nDeletes the specified Trancoder Overlay Decode configuration\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | \n$templateName = \ntemplateName_example\n; // string | \n$overlayName = \noverlayName_example\n; // string | \n$appName = \nappName_example\n; // string | \n\ntry {\n    $api_instance-\ndeleteTranscoderOverlayDecodeAppConfig($serverName, $vhostName, $templateName, $overlayName, $appName);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi-\ndeleteTranscoderOverlayDecodeAppConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ntemplateName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\noverlayName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nappName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\nvoid (empty response body)\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\ndeleteTranscoderOverlayEncodeAppConfig\n\n\n\n\ndeleteTranscoderOverlayEncodeAppConfig($serverName, $vhostName, $templateName, $overlayName, $encodeName, $appName)\n\n\n\n\nDeletes the specified Trancoder Overlay Encode configuration\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | \n$templateName = \ntemplateName_example\n; // string | \n$overlayName = \noverlayName_example\n; // string | \n$encodeName = \nencodeName_example\n; // string | \n$appName = \nappName_example\n; // string | \n\ntry {\n    $api_instance-\ndeleteTranscoderOverlayEncodeAppConfig($serverName, $vhostName, $templateName, $overlayName, $encodeName, $appName);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi-\ndeleteTranscoderOverlayEncodeAppConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ntemplateName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\noverlayName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nencodeName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nappName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\nvoid (empty response body)\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\ndeleteTranscoderStreamNameGroupAppConfig\n\n\n\n\ndeleteTranscoderStreamNameGroupAppConfig($serverName, $vhostName, $templateName, $groupName, $appName)\n\n\n\n\nDeletes the specified Trancoder StreamNameGroup configuration\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | \n$templateName = \ntemplateName_example\n; // string | \n$groupName = \ngroupName_example\n; // string | \n$appName = \nappName_example\n; // string | \n\ntry {\n    $api_instance-\ndeleteTranscoderStreamNameGroupAppConfig($serverName, $vhostName, $templateName, $groupName, $appName);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi-\ndeleteTranscoderStreamNameGroupAppConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ntemplateName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ngroupName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nappName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\nvoid (empty response body)\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\ndeleteTranscoderTemplateAppConfig\n\n\n\n\ndeleteTranscoderTemplateAppConfig($serverName, $vhostName, $templateName, $appName)\n\n\n\n\nDeletes the specified Trancoder Template configuration\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | \n$templateName = \ntemplateName_example\n; // string | \n$appName = \nappName_example\n; // string | \n\ntry {\n    $api_instance-\ndeleteTranscoderTemplateAppConfig($serverName, $vhostName, $templateName, $appName);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi-\ndeleteTranscoderTemplateAppConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ntemplateName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nappName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\nvoid (empty response body)\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\ngetApplicationConfig\n\n\n\n\n\\Model\\ApplicationConfig getApplicationConfig($serverName, $vhostName, $appName)\n\n\n\n\nRetrieves the specified Application configuration\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | \n$appName = \nappName_example\n; // string | \n\ntry {\n    $result = $api_instance-\ngetApplicationConfig($serverName, $vhostName, $appName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi-\ngetApplicationConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nappName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\n\\Model\\ApplicationConfig\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\ngetApplicationConfigAdv\n\n\n\n\n\\Model\\ApplicationConfigAdv getApplicationConfigAdv($serverName, $vhostName, $appName)\n\n\n\n\nRetrieves the specified advanced Application configuration\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | \n$appName = \nappName_example\n; // string | \n\ntry {\n    $result = $api_instance-\ngetApplicationConfigAdv($serverName, $vhostName, $appName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi-\ngetApplicationConfigAdv: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nappName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\n\\Model\\ApplicationConfigAdv\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\ngetApplicationsConfig\n\n\n\n\n\\Model\\ApplicationsConfig getApplicationsConfig($serverName, $vhostName)\n\n\n\n\nRetrieves the list of Applications for the specifed vhost\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | \n\ntry {\n    $result = $api_instance-\ngetApplicationsConfig($serverName, $vhostName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi-\ngetApplicationsConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\n\\Model\\ApplicationsConfig\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\ngetBuyDRMStreamMapsConfig\n\n\n\n\n\\Model\\BuyDRMStreamMapsConfig getBuyDRMStreamMapsConfig($serverName, $vhostName, $appName)\n\n\n\n\nRetrieves the BuyDRM stream mapfile for the specified Application\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | \n$appName = \nappName_example\n; // string | \n\ntry {\n    $result = $api_instance-\ngetBuyDRMStreamMapsConfig($serverName, $vhostName, $appName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi-\ngetBuyDRMStreamMapsConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nappName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\n\\Model\\BuyDRMStreamMapsConfig\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\ngetCurrentApplicationStatistics\n\n\n\n\n\\Model\\CurrentApplicationStatistics getCurrentApplicationStatistics($serverName, $vhostName, $appName)\n\n\n\n\nRetrieves the current Application statistics\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | \n$appName = \nappName_example\n; // string | \n\ntry {\n    $result = $api_instance-\ngetCurrentApplicationStatistics($serverName, $vhostName, $appName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi-\ngetCurrentApplicationStatistics: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nappName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\n\\Model\\CurrentApplicationStatistics\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\ngetCurrentIncomingStreamStatistics\n\n\n\n\n\\Model\\CurrentIncomingStreamStatistics getCurrentIncomingStreamStatistics($serverName, $vhostName, $appName, $instanceName, $streamName)\n\n\n\n\nRetrieves the Current Incoming Stream statistics for the specifed Incoming Stream\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | \n$appName = \nappName_example\n; // string | \n$instanceName = \ninstanceName_example\n; // string | \n$streamName = \nstreamName_example\n; // string | \n\ntry {\n    $result = $api_instance-\ngetCurrentIncomingStreamStatistics($serverName, $vhostName, $appName, $instanceName, $streamName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi-\ngetCurrentIncomingStreamStatistics: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nappName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ninstanceName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nstreamName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\n\\Model\\CurrentIncomingStreamStatistics\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\ngetDRMConfig\n\n\n\n\n\\Model\\DRMConfig getDRMConfig($serverName, $vhostName, $appName)\n\n\n\n\nRetrieves the DRM configuration for the specified Application\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | \n$appName = \nappName_example\n; // string | \n\ntry {\n    $result = $api_instance-\ngetDRMConfig($serverName, $vhostName, $appName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi-\ngetDRMConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nappName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\n\\Model\\DRMConfig\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\ngetDRMConfigAdv\n\n\n\n\n\\Model\\DRMConfigAdv getDRMConfigAdv($serverName, $vhostName, $appName)\n\n\n\n\nRetrieves the advanced DRM configuration for the specified Application\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | \n$appName = \nappName_example\n; // string | \n\ntry {\n    $result = $api_instance-\ngetDRMConfigAdv($serverName, $vhostName, $appName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi-\ngetDRMConfigAdv: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nappName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\n\\Model\\DRMConfigAdv\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\ngetDVRConfig\n\n\n\n\n\\Model\\DVRConfig getDVRConfig($serverName, $vhostName, $appName)\n\n\n\n\nRetrieves the DVR configuration for the specified Application\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | \n$appName = \nappName_example\n; // string | \n\ntry {\n    $result = $api_instance-\ngetDVRConfig($serverName, $vhostName, $appName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi-\ngetDVRConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nappName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\n\\Model\\DVRConfig\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\ngetDVRConfigAdv\n\n\n\n\n\\Model\\DVRConfigAdv getDVRConfigAdv($serverName, $vhostName, $appName)\n\n\n\n\nRetrieves the advanced DVR configuration for the specified Application\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | \n$appName = \nappName_example\n; // string | \n\ntry {\n    $result = $api_instance-\ngetDVRConfigAdv($serverName, $vhostName, $appName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi-\ngetDVRConfigAdv: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nappName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\n\\Model\\DVRConfigAdv\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\ngetDefaultStreamRecorderConfig\n\n\n\n\n\\Model\\DefaultStreamRecorderConfig getDefaultStreamRecorderConfig($serverName, $vhostName, $appName, $recorderName, $instanceName)\n\n\n\n\nRetrieves a Stream Recorder of the requested name, popluated with the default values\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | \n$appName = \nappName_example\n; // string | \n$recorderName = \nrecorderName_example\n; // string | \n$instanceName = \ninstanceName_example\n; // string | \n\ntry {\n    $result = $api_instance-\ngetDefaultStreamRecorderConfig($serverName, $vhostName, $appName, $recorderName, $instanceName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi-\ngetDefaultStreamRecorderConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nappName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nrecorderName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ninstanceName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\n\\Model\\DefaultStreamRecorderConfig\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\ngetDvrRESTConverterStore\n\n\n\n\n\\Model\\DvrRESTConverterStore getDvrRESTConverterStore($serverName, $vhostName, $appName, $instanceName, $dvrStoreName)\n\n\n\n\nRetrieves the information about a store/converter associated with the application instance\n\n\nThis API is available in builds 15942 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | \n$appName = \nappName_example\n; // string | \n$instanceName = \ninstanceName_example\n; // string | \n$dvrStoreName = \ndvrStoreName_example\n; // string | \n\ntry {\n    $result = $api_instance-\ngetDvrRESTConverterStore($serverName, $vhostName, $appName, $instanceName, $dvrStoreName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi-\ngetDvrRESTConverterStore: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nappName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ninstanceName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ndvrStoreName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\n\\Model\\DvrRESTConverterStore\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\ngetDvrRESTConverterStores\n\n\n\n\n\\Model\\DvrRESTConverterStores getDvrRESTConverterStores($serverName, $vhostName, $appName, $instanceName)\n\n\n\n\nRetrieves the list of DVR stores associated with this application instance\n\n\nThis API is available in builds 15942 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | \n$appName = \nappName_example\n; // string | \n$instanceName = \ninstanceName_example\n; // string | \n\ntry {\n    $result = $api_instance-\ngetDvrRESTConverterStores($serverName, $vhostName, $appName, $instanceName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi-\ngetDvrRESTConverterStores: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nappName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ninstanceName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\n\\Model\\DvrRESTConverterStores\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\ngetHistoricApplicationStatistics\n\n\n\n\n\\Model\\HistoricApplicationStatistics getHistoricApplicationStatistics($serverName, $vhostName, $appName)\n\n\n\n\nRetrieves the historic Application statistics\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | \n$appName = \nappName_example\n; // string | \n\ntry {\n    $result = $api_instance-\ngetHistoricApplicationStatistics($serverName, $vhostName, $appName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi-\ngetHistoricApplicationStatistics: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nappName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\n\\Model\\HistoricApplicationStatistics\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\ngetIncomingStreamConfig\n\n\n\n\n\\Model\\IncomingStreamConfig getIncomingStreamConfig($serverName, $vhostName, $appName, $instanceName, $streamName)\n\n\n\n\nRetrieves the Incoming Stream information for the specifed Incoming Stream\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | \n$appName = \nappName_example\n; // string | \n$instanceName = \ninstanceName_example\n; // string | \n$streamName = \nstreamName_example\n; // string | \n\ntry {\n    $result = $api_instance-\ngetIncomingStreamConfig($serverName, $vhostName, $appName, $instanceName, $streamName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi-\ngetIncomingStreamConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nappName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ninstanceName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nstreamName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\n\\Model\\IncomingStreamConfig\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\ngetInstanceConfig\n\n\n\n\n\\Model\\InstanceConfig getInstanceConfig($serverName, $vhostName, $appName, $instanceName)\n\n\n\n\nRetrieves the specified Application Instance information\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | \n$appName = \nappName_example\n; // string | \n$instanceName = \ninstanceName_example\n; // string | \n\ntry {\n    $result = $api_instance-\ngetInstanceConfig($serverName, $vhostName, $appName, $instanceName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi-\ngetInstanceConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nappName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ninstanceName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\n\\Model\\InstanceConfig\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\ngetInstancesConfig\n\n\n\n\n\\Model\\InstancesConfig getInstancesConfig($serverName, $vhostName, $appName)\n\n\n\n\nRetrieves the list of Instances for the specified Application\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | \n$appName = \nappName_example\n; // string | \n\ntry {\n    $result = $api_instance-\ngetInstancesConfig($serverName, $vhostName, $appName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi-\ngetInstancesConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nappName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\n\\Model\\InstancesConfig\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\ngetLiveEncoderConfig\n\n\n\n\n\\Model\\LiveEncoderConfig getLiveEncoderConfig($serverName, $vhostName, $appName, $instanceName, $streamName, $publishUser, $publishHost, $publishPort)\n\n\n\n\nRetrieves the LiveEncoder configuration for the specified IncomingStream\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | \n$appName = \nappName_example\n; // string | \n$instanceName = \ninstanceName_example\n; // string | \n$streamName = \nstreamName_example\n; // string | \n$publishUser = \npublishUser_example\n; // string | The publish username to use in the encoder configuration\n$publishHost = \npublishHost_example\n; // string | The IP address then encoder will publish to\n$publishPort = \npublishPort_example\n; // string | The Port number the encoder will publish to\n\ntry {\n    $result = $api_instance-\ngetLiveEncoderConfig($serverName, $vhostName, $appName, $instanceName, $streamName, $publishUser, $publishHost, $publishPort);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi-\ngetLiveEncoderConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nappName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ninstanceName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nstreamName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\npublishUser\n\n\nstring\n\n\nThe publish username to use in the encoder configuration\n\n\n\n\n\n\n\n\npublishHost\n\n\nstring\n\n\nThe IP address then encoder will publish to\n\n\n\n\n\n\n\n\npublishPort\n\n\nstring\n\n\nThe Port number the encoder will publish to\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\n\\Model\\LiveEncoderConfig\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\ngetModulesConfig\n\n\n\n\n\\Model\\ModulesConfig getModulesConfig($serverName, $vhostName, $appName)\n\n\n\n\nRetrieves the list of Modules for the specified Application\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | \n$appName = \nappName_example\n; // string | \n\ntry {\n    $result = $api_instance-\ngetModulesConfig($serverName, $vhostName, $appName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi-\ngetModulesConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nappName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\n\\Model\\ModulesConfig\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\ngetPublisherAppConfig\n\n\n\n\n\\Model\\PublisherAppConfig getPublisherAppConfig($serverName, $vhostName, $publisherName, $appName)\n\n\n\n\nRetrieves the specified Publisher configuration\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | The vhost name\n$publisherName = \npublisherName_example\n; // string | The publisher name\n$appName = \nappName_example\n; // string | \n\ntry {\n    $result = $api_instance-\ngetPublisherAppConfig($serverName, $vhostName, $publisherName, $appName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi-\ngetPublisherAppConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\nThe vhost name\n\n\n\n\n\n\n\n\npublisherName\n\n\nstring\n\n\nThe publisher name\n\n\n\n\n\n\n\n\nappName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\n\\Model\\PublisherAppConfig\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\ngetPublishersAppConfig\n\n\n\n\n\\Model\\PublishersAppConfig getPublishersAppConfig($serverName, $vhostName, $appName)\n\n\n\n\nRetrieves the list of Publishers for the specified Application\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | The vhost name\n$appName = \nappName_example\n; // string | \n\ntry {\n    $result = $api_instance-\ngetPublishersAppConfig($serverName, $vhostName, $appName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi-\ngetPublishersAppConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\nThe vhost name\n\n\n\n\n\n\n\n\nappName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\n\\Model\\PublishersAppConfig\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\ngetPushPublishStreamAppConfig\n\n\n\n\n\\Model\\PushPublishStreamAppConfig getPushPublishStreamAppConfig($serverName, $vhostName, $appName, $entryName)\n\n\n\n\nRetrieves the PushPublish map entry configuration for the specified Application\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | \n$appName = \nappName_example\n; // string | \n$entryName = \nentryName_example\n; // string | The entry name needed for this REST call\n\ntry {\n    $result = $api_instance-\ngetPushPublishStreamAppConfig($serverName, $vhostName, $appName, $entryName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi-\ngetPushPublishStreamAppConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nappName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nentryName\n\n\nstring\n\n\nThe entry name needed for this REST call\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\n\\Model\\PushPublishStreamAppConfig\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\ngetPushPublishStreamsAppConfig\n\n\n\n\n\\Model\\PushPublishStreamsAppConfig getPushPublishStreamsAppConfig($serverName, $vhostName, $appName)\n\n\n\n\nRetrieves the list of PushPublish Streams for the specified Application\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | \n$appName = \nappName_example\n; // string | \n\ntry {\n    $result = $api_instance-\ngetPushPublishStreamsAppConfig($serverName, $vhostName, $appName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi-\ngetPushPublishStreamsAppConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nappName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\n\\Model\\PushPublishStreamsAppConfig\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\ngetSDPFilesAppConfig\n\n\n\n\n\\Model\\SDPFilesAppConfig getSDPFilesAppConfig($serverName, $vhostName, $appName)\n\n\n\n\nRetrieves the list of SDP Files for the specified Application\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | \n$appName = \nappName_example\n; // string | \n\ntry {\n    $result = $api_instance-\ngetSDPFilesAppConfig($serverName, $vhostName, $appName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi-\ngetSDPFilesAppConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nappName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\n\\Model\\SDPFilesAppConfig\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\ngetSMILFileAppConfig\n\n\n\n\n\\Model\\SMILFileAppConfig getSMILFileAppConfig($serverName, $vhostName, $smilfileName, $appName)\n\n\n\n\nRetrieves the specified SMIL File configuration\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | \n$smilfileName = \nsmilfileName_example\n; // string | The SMIL file name without the extension\n$appName = \nappName_example\n; // string | \n\ntry {\n    $result = $api_instance-\ngetSMILFileAppConfig($serverName, $vhostName, $smilfileName, $appName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi-\ngetSMILFileAppConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nsmilfileName\n\n\nstring\n\n\nThe SMIL file name without the extension\n\n\n\n\n\n\n\n\nappName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\n\\Model\\SMILFileAppConfig\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\ngetSMILFilesAppConfig\n\n\n\n\n\\Model\\SMILFilesAppConfig getSMILFilesAppConfig($serverName, $vhostName, $appName)\n\n\n\n\nRetrieves the list of SMIL Files for the specified Application\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | The name of the current VHost the action will be performed on\n$appName = \nappName_example\n; // string | The application name needed for this REST call\n\ntry {\n    $result = $api_instance-\ngetSMILFilesAppConfig($serverName, $vhostName, $appName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi-\ngetSMILFilesAppConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\nThe name of the current VHost the action will be performed on\n\n\n\n\n\n\n\n\nappName\n\n\nstring\n\n\nThe application name needed for this REST call\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\n\\Model\\SMILFilesAppConfig\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\ngetSecurityConfig\n\n\n\n\n\\Model\\SecurityConfig getSecurityConfig($serverName, $vhostName, $appName)\n\n\n\n\nRetrieves the Security configuration for the specified Application\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | \n$appName = \nappName_example\n; // string | \n\ntry {\n    $result = $api_instance-\ngetSecurityConfig($serverName, $vhostName, $appName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi-\ngetSecurityConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nappName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\n\\Model\\SecurityConfig\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\ngetShortUrlEncoderConfig\n\n\n\n\n\\Model\\ShortUrlEncoderConfig getShortUrlEncoderConfig($serverName, $vhostName, $appName, $instanceName, $streamName)\n\n\n\n\nRetrieves the Short URL for the LiveEncoder configuration for the specified IncomingStream\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | \n$appName = \nappName_example\n; // string | \n$instanceName = \ninstanceName_example\n; // string | \n$streamName = \nstreamName_example\n; // string | \n\ntry {\n    $result = $api_instance-\ngetShortUrlEncoderConfig($serverName, $vhostName, $appName, $instanceName, $streamName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi-\ngetShortUrlEncoderConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nappName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ninstanceName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nstreamName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\n\\Model\\ShortUrlEncoderConfig\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\ngetSourceControlConfig\n\n\n\n\n\\Model\\SourceControlConfig getSourceControlConfig($serverName, $vhostName, $appName, $instanceName, $streamName)\n\n\n\n\nGets information about the Source Control and it's supported features\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | \n$appName = \nappName_example\n; // string | \n$instanceName = \ninstanceName_example\n; // string | \n$streamName = \nstreamName_example\n; // string | \n\ntry {\n    $result = $api_instance-\ngetSourceControlConfig($serverName, $vhostName, $appName, $instanceName, $streamName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi-\ngetSourceControlConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nappName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ninstanceName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nstreamName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\n\\Model\\SourceControlConfig\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\ngetStreamConfigurationConfig\n\n\n\n\n\\Model\\StreamConfigurationConfig getStreamConfigurationConfig($serverName, $vhostName, $appName)\n\n\n\n\nRetrieves the Stream configuration for the specified Application\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | \n$appName = \nappName_example\n; // string | \n\ntry {\n    $result = $api_instance-\ngetStreamConfigurationConfig($serverName, $vhostName, $appName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi-\ngetStreamConfigurationConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nappName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\n\\Model\\StreamConfigurationConfig\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\ngetStreamFileAppConfig\n\n\n\n\n\\Model\\StreamFileAppConfig getStreamFileAppConfig($serverName, $vhostName, $streamfileName, $appName)\n\n\n\n\nRetrieves the specified Stream File configuration\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | \n$streamfileName = \nstreamfileName_example\n; // string | The stream file name without the extension\n$appName = \nappName_example\n; // string | \n\ntry {\n    $result = $api_instance-\ngetStreamFileAppConfig($serverName, $vhostName, $streamfileName, $appName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi-\ngetStreamFileAppConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nstreamfileName\n\n\nstring\n\n\nThe stream file name without the extension\n\n\n\n\n\n\n\n\nappName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\n\\Model\\StreamFileAppConfig\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\ngetStreamFileAppConfigAdv\n\n\n\n\n\\Model\\StreamFileAppConfigAdv getStreamFileAppConfigAdv($serverName, $vhostName, $streamfileName, $appName)\n\n\n\n\nRetrieves the Advanced Stream File configuration\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | \n$streamfileName = \nstreamfileName_example\n; // string | The stream file name without the .stream extension\n$appName = \nappName_example\n; // string | \n\ntry {\n    $result = $api_instance-\ngetStreamFileAppConfigAdv($serverName, $vhostName, $streamfileName, $appName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi-\ngetStreamFileAppConfigAdv: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nstreamfileName\n\n\nstring\n\n\nThe stream file name without the .stream extension\n\n\n\n\n\n\n\n\nappName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\n\\Model\\StreamFileAppConfigAdv\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\ngetStreamFilesAppConfig\n\n\n\n\n\\Model\\StreamFilesAppConfig getStreamFilesAppConfig($serverName, $vhostName, $appName)\n\n\n\n\nRetrieves the list of Stream Files for the specified Application\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | \n$appName = \nappName_example\n; // string | \n\ntry {\n    $result = $api_instance-\ngetStreamFilesAppConfig($serverName, $vhostName, $appName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi-\ngetStreamFilesAppConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nappName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\n\\Model\\StreamFilesAppConfig\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\ngetStreamGroupConfig\n\n\n\n\n\\Model\\StreamGroupConfig getStreamGroupConfig($serverName, $vhostName, $appName, $groupName, $instanceName)\n\n\n\n\nRetrieves the specified StreamGroup configuration\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | \n$appName = \nappName_example\n; // string | \n$groupName = \ngroupName_example\n; // string | \n$instanceName = \ninstanceName_example\n; // string | \n\ntry {\n    $result = $api_instance-\ngetStreamGroupConfig($serverName, $vhostName, $appName, $groupName, $instanceName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi-\ngetStreamGroupConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nappName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ngroupName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ninstanceName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\n\\Model\\StreamGroupConfig\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\ngetStreamGroupsConfig\n\n\n\n\n\\Model\\StreamGroupsConfig getStreamGroupsConfig($serverName, $vhostName, $appName, $instanceName)\n\n\n\n\nRetrieves the list of Stream Groups for the specified Application Instance\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | \n$appName = \nappName_example\n; // string | \n$instanceName = \ninstanceName_example\n; // string | \n\ntry {\n    $result = $api_instance-\ngetStreamGroupsConfig($serverName, $vhostName, $appName, $instanceName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi-\ngetStreamGroupsConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nappName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ninstanceName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\n\\Model\\StreamGroupsConfig\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\ngetStreamRecorderConfig\n\n\n\n\n\\Model\\StreamRecorderConfig getStreamRecorderConfig($serverName, $vhostName, $appName, $recorderName, $instanceName)\n\n\n\n\nRetrieves the specifed Stream Recorder\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | \n$appName = \nappName_example\n; // string | \n$recorderName = \nrecorderName_example\n; // string | \n$instanceName = \ninstanceName_example\n; // string | \n\ntry {\n    $result = $api_instance-\ngetStreamRecorderConfig($serverName, $vhostName, $appName, $recorderName, $instanceName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi-\ngetStreamRecorderConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nappName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nrecorderName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ninstanceName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\n\\Model\\StreamRecorderConfig\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\ngetStreamRecordersConfig\n\n\n\n\n\\Model\\StreamRecordersConfig getStreamRecordersConfig($serverName, $vhostName, $appName, $instanceName)\n\n\n\n\nRetrieves the list of Stream Recorders for the specified Application Instance\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | \n$appName = \nappName_example\n; // string | \n$instanceName = \ninstanceName_example\n; // string | \n\ntry {\n    $result = $api_instance-\ngetStreamRecordersConfig($serverName, $vhostName, $appName, $instanceName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi-\ngetStreamRecordersConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nappName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ninstanceName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\n\\Model\\StreamRecordersConfig\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\ngetTranscoderAppConfig\n\n\n\n\n\\Model\\TranscoderAppConfig getTranscoderAppConfig($serverName, $vhostName, $appName)\n\n\n\n\nRetrieves the Transcoder configuration for the specified Application\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | \n$appName = \nappName_example\n; // string | \n\ntry {\n    $result = $api_instance-\ngetTranscoderAppConfig($serverName, $vhostName, $appName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi-\ngetTranscoderAppConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nappName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\n\\Model\\TranscoderAppConfig\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\ngetTranscoderAppConfigAdv\n\n\n\n\n\\Model\\TranscoderAppConfigAdv getTranscoderAppConfigAdv($serverName, $vhostName, $appName)\n\n\n\n\nRetrieves the Advanced Transcoder configuration for the specified Application\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | \n$appName = \nappName_example\n; // string | \n\ntry {\n    $result = $api_instance-\ngetTranscoderAppConfigAdv($serverName, $vhostName, $appName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi-\ngetTranscoderAppConfigAdv: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nappName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\n\\Model\\TranscoderAppConfigAdv\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\ngetTranscoderEncodeAppConfig\n\n\n\n\n\\Model\\TranscoderEncodeAppConfig getTranscoderEncodeAppConfig($serverName, $vhostName, $templateName, $encodeName, $appName)\n\n\n\n\nRetrieves the specified Trancoder Encode configuration\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | \n$templateName = \ntemplateName_example\n; // string | \n$encodeName = \nencodeName_example\n; // string | \n$appName = \nappName_example\n; // string | \n\ntry {\n    $result = $api_instance-\ngetTranscoderEncodeAppConfig($serverName, $vhostName, $templateName, $encodeName, $appName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi-\ngetTranscoderEncodeAppConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ntemplateName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nencodeName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nappName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\n\\Model\\TranscoderEncodeAppConfig\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\ngetTranscoderEncodeAppConfigAdv\n\n\n\n\n\\Model\\TranscoderEncodeAppConfigAdv getTranscoderEncodeAppConfigAdv($serverName, $vhostName, $templateName, $encodeName, $appName)\n\n\n\n\nRetrieves the Advanced Transcoder Encode configuration\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | \n$templateName = \ntemplateName_example\n; // string | \n$encodeName = \nencodeName_example\n; // string | \n$appName = \nappName_example\n; // string | \n\ntry {\n    $result = $api_instance-\ngetTranscoderEncodeAppConfigAdv($serverName, $vhostName, $templateName, $encodeName, $appName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi-\ngetTranscoderEncodeAppConfigAdv: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ntemplateName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nencodeName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nappName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\n\\Model\\TranscoderEncodeAppConfigAdv\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\ngetTranscoderEncodesAppConfig\n\n\n\n\n\\Model\\TranscoderEncodesAppConfig getTranscoderEncodesAppConfig($serverName, $vhostName, $templateName, $appName)\n\n\n\n\nRetrieves the list of Transcoder Encode Configurations for the specified Application\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | \n$templateName = \ntemplateName_example\n; // string | \n$appName = \nappName_example\n; // string | \n\ntry {\n    $result = $api_instance-\ngetTranscoderEncodesAppConfig($serverName, $vhostName, $templateName, $appName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi-\ngetTranscoderEncodesAppConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ntemplateName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nappName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\n\\Model\\TranscoderEncodesAppConfig\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\ngetTranscoderOverlayDecodeAppConfig\n\n\n\n\n\\Model\\TranscoderOverlayDecodeAppConfig getTranscoderOverlayDecodeAppConfig($serverName, $vhostName, $templateName, $overlayName, $appName)\n\n\n\n\nRetrieves the specified Trancoder Overlay Decode configuration\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | \n$templateName = \ntemplateName_example\n; // string | \n$overlayName = \noverlayName_example\n; // string | \n$appName = \nappName_example\n; // string | \n\ntry {\n    $result = $api_instance-\ngetTranscoderOverlayDecodeAppConfig($serverName, $vhostName, $templateName, $overlayName, $appName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi-\ngetTranscoderOverlayDecodeAppConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ntemplateName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\noverlayName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nappName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\n\\Model\\TranscoderOverlayDecodeAppConfig\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\ngetTranscoderOverlayEncodeAppConfig\n\n\n\n\n\\Model\\TranscoderOverlayEncodeAppConfig getTranscoderOverlayEncodeAppConfig($serverName, $vhostName, $templateName, $overlayName, $encodeName, $appName)\n\n\n\n\nRetrieves the specified Trancoder Overlay Encode configuration\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | \n$templateName = \ntemplateName_example\n; // string | \n$overlayName = \noverlayName_example\n; // string | \n$encodeName = \nencodeName_example\n; // string | \n$appName = \nappName_example\n; // string | \n\ntry {\n    $result = $api_instance-\ngetTranscoderOverlayEncodeAppConfig($serverName, $vhostName, $templateName, $overlayName, $encodeName, $appName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi-\ngetTranscoderOverlayEncodeAppConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ntemplateName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\noverlayName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nencodeName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nappName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\n\\Model\\TranscoderOverlayEncodeAppConfig\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\ngetTranscoderStreamNameGroupAppConfig\n\n\n\n\n\\Model\\TranscoderStreamNameGroupAppConfig getTranscoderStreamNameGroupAppConfig($serverName, $vhostName, $templateName, $groupName, $appName)\n\n\n\n\nRetrieves the specified Trancoder StreamNameGroup configuration\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | \n$templateName = \ntemplateName_example\n; // string | \n$groupName = \ngroupName_example\n; // string | \n$appName = \nappName_example\n; // string | \n\ntry {\n    $result = $api_instance-\ngetTranscoderStreamNameGroupAppConfig($serverName, $vhostName, $templateName, $groupName, $appName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi-\ngetTranscoderStreamNameGroupAppConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ntemplateName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ngroupName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nappName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\n\\Model\\TranscoderStreamNameGroupAppConfig\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\ngetTranscoderStreamNameGroupsAppConfig\n\n\n\n\n\\Model\\TranscoderStreamNameGroupsAppConfig getTranscoderStreamNameGroupsAppConfig($serverName, $vhostName, $templateName, $appName)\n\n\n\n\nRetrieves the list of Transcoder Stream Name Groups for the specified Template\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | \n$templateName = \ntemplateName_example\n; // string | \n$appName = \nappName_example\n; // string | \n\ntry {\n    $result = $api_instance-\ngetTranscoderStreamNameGroupsAppConfig($serverName, $vhostName, $templateName, $appName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi-\ngetTranscoderStreamNameGroupsAppConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ntemplateName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nappName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\n\\Model\\TranscoderStreamNameGroupsAppConfig\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\ngetTranscoderTemplateAppConfig\n\n\n\n\n\\Model\\TranscoderTemplateAppConfig getTranscoderTemplateAppConfig($serverName, $vhostName, $templateName, $appName)\n\n\n\n\nRetrieves the specified Trancoder Template configuration\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | \n$templateName = \ntemplateName_example\n; // string | \n$appName = \nappName_example\n; // string | \n\ntry {\n    $result = $api_instance-\ngetTranscoderTemplateAppConfig($serverName, $vhostName, $templateName, $appName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi-\ngetTranscoderTemplateAppConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ntemplateName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nappName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\n\\Model\\TranscoderTemplateAppConfig\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\ngetTranscoderTemplateAppConfigAdv\n\n\n\n\n\\Model\\TranscoderTemplateAppConfigAdv getTranscoderTemplateAppConfigAdv($serverName, $vhostName, $templateName, $appName)\n\n\n\n\nRetrieves the Advanced Transcoder Template configuration\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | \n$templateName = \ntemplateName_example\n; // string | \n$appName = \nappName_example\n; // string | \n\ntry {\n    $result = $api_instance-\ngetTranscoderTemplateAppConfigAdv($serverName, $vhostName, $templateName, $appName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi-\ngetTranscoderTemplateAppConfigAdv: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ntemplateName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nappName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\n\\Model\\TranscoderTemplateAppConfigAdv\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\ngetTranscoderTemplatesAppConfig\n\n\n\n\n\\Model\\TranscoderTemplatesAppConfig getTranscoderTemplatesAppConfig($serverName, $vhostName, $appName)\n\n\n\n\nRetrieves the list of Transcoder Template Configurations for the specified Application\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | The name of the current VHost the action will be performed on\n$appName = \nappName_example\n; // string | \n\ntry {\n    $result = $api_instance-\ngetTranscoderTemplatesAppConfig($serverName, $vhostName, $appName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi-\ngetTranscoderTemplatesAppConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\nThe name of the current VHost the action will be performed on\n\n\n\n\n\n\n\n\nappName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\n\\Model\\TranscoderTemplatesAppConfig\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\ngetVerimatrixStreamMapsConfig\n\n\n\n\n\\Model\\VerimatrixStreamMapsConfig getVerimatrixStreamMapsConfig($serverName, $vhostName, $appName)\n\n\n\n\nRetrieves the Verimatrix stream mapfile for the specified Application\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | \n$appName = \nappName_example\n; // string | \n\ntry {\n    $result = $api_instance-\ngetVerimatrixStreamMapsConfig($serverName, $vhostName, $appName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi-\ngetVerimatrixStreamMapsConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nappName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\n\\Model\\VerimatrixStreamMapsConfig\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\npostApplicationConfig\n\n\n\n\npostApplicationConfig($serverName, $vhostName, $appName, $body)\n\n\n\n\nAdds the specified Application configuration\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | \n$appName = \nappName_example\n; // string | \n$body = new \\Model\\ApplicationConfig(); // \\Model\\ApplicationConfig | \n\ntry {\n    $api_instance-\npostApplicationConfig($serverName, $vhostName, $appName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi-\npostApplicationConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nappName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nbody\n\n\n\\Model\\ApplicationConfig\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\nvoid (empty response body)\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\npostApplicationConfigAdv\n\n\n\n\npostApplicationConfigAdv($serverName, $vhostName, $appName, $body)\n\n\n\n\nAdds the specified advanced Application configuration\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | \n$appName = \nappName_example\n; // string | \n$body = new \\Model\\ApplicationConfigAdv(); // \\Model\\ApplicationConfigAdv | \n\ntry {\n    $api_instance-\npostApplicationConfigAdv($serverName, $vhostName, $appName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi-\npostApplicationConfigAdv: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nappName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nbody\n\n\n\\Model\\ApplicationConfigAdv\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\nvoid (empty response body)\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\npostApplicationsConfig\n\n\n\n\npostApplicationsConfig($serverName, $vhostName, $body)\n\n\n\n\nAdds an Application to the list of Applications  for the specifed vhost\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | \n$body = new \\Model\\ApplicationConfig(); // \\Model\\ApplicationConfig | \n\ntry {\n    $api_instance-\npostApplicationsConfig($serverName, $vhostName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi-\npostApplicationsConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nbody\n\n\n\\Model\\ApplicationConfig\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\nvoid (empty response body)\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\npostPublisherAppConfig\n\n\n\n\npostPublisherAppConfig($serverName, $vhostName, $publisherName, $appName, $body)\n\n\n\n\nAdds the specified Publisher configuration\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | The vhost name\n$publisherName = \npublisherName_example\n; // string | The publisher name\n$appName = \nappName_example\n; // string | \n$body = new \\Model\\PublisherAppConfig(); // \\Model\\PublisherAppConfig | \n\ntry {\n    $api_instance-\npostPublisherAppConfig($serverName, $vhostName, $publisherName, $appName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi-\npostPublisherAppConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\nThe vhost name\n\n\n\n\n\n\n\n\npublisherName\n\n\nstring\n\n\nThe publisher name\n\n\n\n\n\n\n\n\nappName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nbody\n\n\n\\Model\\PublisherAppConfig\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\nvoid (empty response body)\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\npostPublishersAppConfig\n\n\n\n\npostPublishersAppConfig($serverName, $vhostName, $appName, $body)\n\n\n\n\nAdd a Publisher to list of Publishers for the specified Application\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | The vhost name\n$appName = \nappName_example\n; // string | \n$body = new \\Model\\PublisherAppConfig(); // \\Model\\PublisherAppConfig | \n\ntry {\n    $api_instance-\npostPublishersAppConfig($serverName, $vhostName, $appName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi-\npostPublishersAppConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\nThe vhost name\n\n\n\n\n\n\n\n\nappName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nbody\n\n\n\\Model\\PublisherAppConfig\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\nvoid (empty response body)\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\npostPushPublishStreamAppConfig\n\n\n\n\npostPushPublishStreamAppConfig($serverName, $vhostName, $appName, $entryName, $body)\n\n\n\n\nAdds the specified PushPublish map entry configuration\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | \n$appName = \nappName_example\n; // string | \n$entryName = \nentryName_example\n; // string | The entry name needed for this REST call\n$body = new \\Model\\PushPublishStreamAppConfig(); // \\Model\\PushPublishStreamAppConfig | \n\ntry {\n    $api_instance-\npostPushPublishStreamAppConfig($serverName, $vhostName, $appName, $entryName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi-\npostPushPublishStreamAppConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nappName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nentryName\n\n\nstring\n\n\nThe entry name needed for this REST call\n\n\n\n\n\n\n\n\nbody\n\n\n\\Model\\PushPublishStreamAppConfig\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\nvoid (empty response body)\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\npostPushPublishStreamsAppConfig\n\n\n\n\npostPushPublishStreamsAppConfig($serverName, $vhostName, $appName, $body)\n\n\n\n\nAdds a PushPublish Stream to list of PushPublish Streams for the specified Application\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | \n$appName = \nappName_example\n; // string | \n$body = new \\Model\\PushPublishStreamAppConfig(); // \\Model\\PushPublishStreamAppConfig | \n\ntry {\n    $api_instance-\npostPushPublishStreamsAppConfig($serverName, $vhostName, $appName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi-\npostPushPublishStreamsAppConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nappName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nbody\n\n\n\\Model\\PushPublishStreamAppConfig\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\nvoid (empty response body)\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\npostSMILFileAppConfig\n\n\n\n\npostSMILFileAppConfig($serverName, $vhostName, $smilfileName, $appName, $body)\n\n\n\n\nAdds the specified SMIL File configuration\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | \n$smilfileName = \nsmilfileName_example\n; // string | The SMIL file name without the extension\n$appName = \nappName_example\n; // string | \n$body = new \\Model\\SMILFileAppConfig(); // \\Model\\SMILFileAppConfig | \n\ntry {\n    $api_instance-\npostSMILFileAppConfig($serverName, $vhostName, $smilfileName, $appName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi-\npostSMILFileAppConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nsmilfileName\n\n\nstring\n\n\nThe SMIL file name without the extension\n\n\n\n\n\n\n\n\nappName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nbody\n\n\n\\Model\\SMILFileAppConfig\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\nvoid (empty response body)\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\npostSMILFilesAppConfig\n\n\n\n\npostSMILFilesAppConfig($serverName, $vhostName, $appName, $body)\n\n\n\n\nAdds a SMIL File to the list of SMIL Files for the specified Application\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | The name of the current VHost the action will be performed on\n$appName = \nappName_example\n; // string | The application name needed for this REST call\n$body = new \\Model\\SMILFileAppConfig(); // \\Model\\SMILFileAppConfig | \n\ntry {\n    $api_instance-\npostSMILFilesAppConfig($serverName, $vhostName, $appName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi-\npostSMILFilesAppConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\nThe name of the current VHost the action will be performed on\n\n\n\n\n\n\n\n\nappName\n\n\nstring\n\n\nThe application name needed for this REST call\n\n\n\n\n\n\n\n\nbody\n\n\n\\Model\\SMILFileAppConfig\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\nvoid (empty response body)\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\npostStreamFileAppConfig\n\n\n\n\npostStreamFileAppConfig($serverName, $vhostName, $streamfileName, $appName, $body)\n\n\n\n\nAdds the specified Stream File configuration\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | \n$streamfileName = \nstreamfileName_example\n; // string | The stream file name without the extension\n$appName = \nappName_example\n; // string | \n$body = new \\Model\\StreamFileAppConfig(); // \\Model\\StreamFileAppConfig | \n\ntry {\n    $api_instance-\npostStreamFileAppConfig($serverName, $vhostName, $streamfileName, $appName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi-\npostStreamFileAppConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nstreamfileName\n\n\nstring\n\n\nThe stream file name without the extension\n\n\n\n\n\n\n\n\nappName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nbody\n\n\n\\Model\\StreamFileAppConfig\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\nvoid (empty response body)\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\npostStreamFilesAppConfig\n\n\n\n\npostStreamFilesAppConfig($serverName, $vhostName, $appName, $body)\n\n\n\n\nAdds a Stream File to the list of Stream Files for the specified Application\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | \n$appName = \nappName_example\n; // string | \n$body = new \\Model\\StreamFileAppConfig(); // \\Model\\StreamFileAppConfig | \n\ntry {\n    $api_instance-\npostStreamFilesAppConfig($serverName, $vhostName, $appName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi-\npostStreamFilesAppConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nappName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nbody\n\n\n\\Model\\StreamFileAppConfig\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\nvoid (empty response body)\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\npostStreamRecorderConfig\n\n\n\n\npostStreamRecorderConfig($serverName, $vhostName, $appName, $recorderName, $instanceName, $body)\n\n\n\n\nCreates a new Stream Recorder and starts recording\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | \n$appName = \nappName_example\n; // string | \n$recorderName = \nrecorderName_example\n; // string | \n$instanceName = \ninstanceName_example\n; // string | \n$body = new \\Model\\StreamRecorderConfig(); // \\Model\\StreamRecorderConfig | \n\ntry {\n    $api_instance-\npostStreamRecorderConfig($serverName, $vhostName, $appName, $recorderName, $instanceName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi-\npostStreamRecorderConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nappName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nrecorderName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ninstanceName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nbody\n\n\n\\Model\\StreamRecorderConfig\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\nvoid (empty response body)\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\npostStreamRecordersConfig\n\n\n\n\npostStreamRecordersConfig($serverName, $vhostName, $appName, $instanceName, $body)\n\n\n\n\nCreates a new Stream Recorder in the specified Application Instance and starts recording\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | \n$appName = \nappName_example\n; // string | \n$instanceName = \ninstanceName_example\n; // string | \n$body = new \\Model\\StreamRecorderConfig(); // \\Model\\StreamRecorderConfig | \n\ntry {\n    $api_instance-\npostStreamRecordersConfig($serverName, $vhostName, $appName, $instanceName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi-\npostStreamRecordersConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nappName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ninstanceName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nbody\n\n\n\\Model\\StreamRecorderConfig\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\nvoid (empty response body)\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\npostTranscoderEncodeAppConfig\n\n\n\n\npostTranscoderEncodeAppConfig($serverName, $vhostName, $templateName, $encodeName, $appName, $body)\n\n\n\n\nAdds the specified Trancoder Encode configuration\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | \n$templateName = \ntemplateName_example\n; // string | \n$encodeName = \nencodeName_example\n; // string | \n$appName = \nappName_example\n; // string | \n$body = new \\Model\\TranscoderEncodeAppConfig(); // \\Model\\TranscoderEncodeAppConfig | \n\ntry {\n    $api_instance-\npostTranscoderEncodeAppConfig($serverName, $vhostName, $templateName, $encodeName, $appName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi-\npostTranscoderEncodeAppConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ntemplateName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nencodeName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nappName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nbody\n\n\n\\Model\\TranscoderEncodeAppConfig\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\nvoid (empty response body)\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\npostTranscoderEncodesAppConfig\n\n\n\n\npostTranscoderEncodesAppConfig($serverName, $vhostName, $templateName, $appName, $body)\n\n\n\n\nAdds a Transcoder Encode Configuration to the specified Application\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | \n$templateName = \ntemplateName_example\n; // string | \n$appName = \nappName_example\n; // string | \n$body = new \\Model\\TranscoderEncodeAppConfig(); // \\Model\\TranscoderEncodeAppConfig | \n\ntry {\n    $api_instance-\npostTranscoderEncodesAppConfig($serverName, $vhostName, $templateName, $appName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi-\npostTranscoderEncodesAppConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ntemplateName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nappName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nbody\n\n\n\\Model\\TranscoderEncodeAppConfig\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\nvoid (empty response body)\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\npostTranscoderStreamNameGroupAppConfig\n\n\n\n\npostTranscoderStreamNameGroupAppConfig($serverName, $vhostName, $templateName, $groupName, $appName, $body)\n\n\n\n\nAdds the specified Trancoder StreamNameGroup configuration\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | \n$templateName = \ntemplateName_example\n; // string | \n$groupName = \ngroupName_example\n; // string | \n$appName = \nappName_example\n; // string | \n$body = new \\Model\\TranscoderStreamNameGroupAppConfig(); // \\Model\\TranscoderStreamNameGroupAppConfig | \n\ntry {\n    $api_instance-\npostTranscoderStreamNameGroupAppConfig($serverName, $vhostName, $templateName, $groupName, $appName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi-\npostTranscoderStreamNameGroupAppConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ntemplateName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ngroupName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nappName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nbody\n\n\n\\Model\\TranscoderStreamNameGroupAppConfig\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\nvoid (empty response body)\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\npostTranscoderStreamNameGroupsAppConfig\n\n\n\n\npostTranscoderStreamNameGroupsAppConfig($serverName, $vhostName, $templateName, $appName, $body)\n\n\n\n\nAdds a Transcoder Stream Name Groups Configuration to the specified Template\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | \n$templateName = \ntemplateName_example\n; // string | \n$appName = \nappName_example\n; // string | \n$body = new \\Model\\TranscoderStreamNameGroupAppConfig(); // \\Model\\TranscoderStreamNameGroupAppConfig | \n\ntry {\n    $api_instance-\npostTranscoderStreamNameGroupsAppConfig($serverName, $vhostName, $templateName, $appName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi-\npostTranscoderStreamNameGroupsAppConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ntemplateName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nappName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nbody\n\n\n\\Model\\TranscoderStreamNameGroupAppConfig\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\nvoid (empty response body)\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\npostTranscoderTemplateAppConfig\n\n\n\n\npostTranscoderTemplateAppConfig($serverName, $vhostName, $templateName, $appName, $body)\n\n\n\n\nAdds the specified Trancoder Template configuration\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | \n$templateName = \ntemplateName_example\n; // string | \n$appName = \nappName_example\n; // string | \n$body = new \\Model\\TranscoderTemplateAppConfig(); // \\Model\\TranscoderTemplateAppConfig | \n\ntry {\n    $api_instance-\npostTranscoderTemplateAppConfig($serverName, $vhostName, $templateName, $appName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi-\npostTranscoderTemplateAppConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ntemplateName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nappName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nbody\n\n\n\\Model\\TranscoderTemplateAppConfig\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\nvoid (empty response body)\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\npostTranscoderTemplatesAppConfig\n\n\n\n\npostTranscoderTemplatesAppConfig($serverName, $vhostName, $appName, $body)\n\n\n\n\nAdds a Transcoder Templates Configuration to the specified Application\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | The name of the current VHost the action will be performed on\n$appName = \nappName_example\n; // string | \n$body = new \\Model\\TranscoderTemplateAppConfig(); // \\Model\\TranscoderTemplateAppConfig | \n\ntry {\n    $api_instance-\npostTranscoderTemplatesAppConfig($serverName, $vhostName, $appName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi-\npostTranscoderTemplatesAppConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\nThe name of the current VHost the action will be performed on\n\n\n\n\n\n\n\n\nappName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nbody\n\n\n\\Model\\TranscoderTemplateAppConfig\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\nvoid (empty response body)\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\nputApplicationAction\n\n\n\n\nputApplicationAction($serverName, $action, $vhostName, $appName, $dstEntryName)\n\n\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$action = \naction_example\n; // string | The action which should be performed by the server\n$vhostName = \nvhostName_example\n; // string | The name of the current VHost the action will be performed on\n$appName = \nappName_example\n; // string | The application name needed for this REST call\n$dstEntryName = \ndstEntryName_example\n; // string | The destination application name when copying\n\ntry {\n    $api_instance-\nputApplicationAction($serverName, $action, $vhostName, $appName, $dstEntryName);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi-\nputApplicationAction: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\naction\n\n\nstring\n\n\nThe action which should be performed by the server\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\nThe name of the current VHost the action will be performed on\n\n\n\n\n\n\n\n\nappName\n\n\nstring\n\n\nThe application name needed for this REST call\n\n\n\n\n\n\n\n\ndstEntryName\n\n\nstring\n\n\nThe destination application name when copying\n\n\n[optional]\n\n\n\n\n\n\n\n\nReturn type\n\n\nvoid (empty response body)\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\nputApplicationConfig\n\n\n\n\nputApplicationConfig($serverName, $vhostName, $appName, $body)\n\n\n\n\nUpdates the specified Application configuration\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | \n$appName = \nappName_example\n; // string | \n$body = new \\Model\\ApplicationConfig(); // \\Model\\ApplicationConfig | \n\ntry {\n    $api_instance-\nputApplicationConfig($serverName, $vhostName, $appName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi-\nputApplicationConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nappName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nbody\n\n\n\\Model\\ApplicationConfig\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\nvoid (empty response body)\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\nputApplicationConfigAdv\n\n\n\n\nputApplicationConfigAdv($serverName, $vhostName, $appName, $body)\n\n\n\n\nUpdates the specified advanced Application configuration\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | \n$appName = \nappName_example\n; // string | \n$body = new \\Model\\ApplicationConfigAdv(); // \\Model\\ApplicationConfigAdv | \n\ntry {\n    $api_instance-\nputApplicationConfigAdv($serverName, $vhostName, $appName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi-\nputApplicationConfigAdv: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nappName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nbody\n\n\n\\Model\\ApplicationConfigAdv\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\nvoid (empty response body)\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\nputBuyDRMStreamMapsConfig\n\n\n\n\nputBuyDRMStreamMapsConfig($serverName, $vhostName, $appName, $body)\n\n\n\n\nUpdates the BuyDRM stream mapfile for the specified Application\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | \n$appName = \nappName_example\n; // string | \n$body = new \\Model\\BuyDRMStreamMapsConfig(); // \\Model\\BuyDRMStreamMapsConfig | \n\ntry {\n    $api_instance-\nputBuyDRMStreamMapsConfig($serverName, $vhostName, $appName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi-\nputBuyDRMStreamMapsConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nappName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nbody\n\n\n\\Model\\BuyDRMStreamMapsConfig\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\nvoid (empty response body)\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\nputDRMConfig\n\n\n\n\nputDRMConfig($serverName, $vhostName, $appName, $body)\n\n\n\n\nUpdates the DRM configuration for the specified Application\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | \n$appName = \nappName_example\n; // string | \n$body = new \\Model\\DRMConfig(); // \\Model\\DRMConfig | \n\ntry {\n    $api_instance-\nputDRMConfig($serverName, $vhostName, $appName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi-\nputDRMConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nappName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nbody\n\n\n\\Model\\DRMConfig\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\nvoid (empty response body)\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\nputDRMConfigAdv\n\n\n\n\nputDRMConfigAdv($serverName, $vhostName, $appName, $body)\n\n\n\n\nUpdates the advanced DRM configuration for the specified Application\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | \n$appName = \nappName_example\n; // string | \n$body = new \\Model\\DRMConfigAdv(); // \\Model\\DRMConfigAdv | \n\ntry {\n    $api_instance-\nputDRMConfigAdv($serverName, $vhostName, $appName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi-\nputDRMConfigAdv: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nappName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nbody\n\n\n\\Model\\DRMConfigAdv\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\nvoid (empty response body)\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\nputDVRConfig\n\n\n\n\nputDVRConfig($serverName, $vhostName, $appName, $body)\n\n\n\n\nUpdates the DVR configuration for the specified Application\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | \n$appName = \nappName_example\n; // string | \n$body = new \\Model\\DVRConfig(); // \\Model\\DVRConfig | \n\ntry {\n    $api_instance-\nputDVRConfig($serverName, $vhostName, $appName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi-\nputDVRConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nappName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nbody\n\n\n\\Model\\DVRConfig\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\nvoid (empty response body)\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\nputDVRConfigAdv\n\n\n\n\nputDVRConfigAdv($serverName, $vhostName, $appName, $body)\n\n\n\n\nUpdates the advanced DVR configuration for the specified Application\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | \n$appName = \nappName_example\n; // string | \n$body = new \\Model\\DVRConfigAdv(); // \\Model\\DVRConfigAdv | \n\ntry {\n    $api_instance-\nputDVRConfigAdv($serverName, $vhostName, $appName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi-\nputDVRConfigAdv: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nappName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nbody\n\n\n\\Model\\DVRConfigAdv\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\nvoid (empty response body)\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\nputDvrRESTConverterStoreAction\n\n\n\n\nputDvrRESTConverterStoreAction($serverName, $action, $vhostName, $appName, $instanceName, $dvrStoreName)\n\n\n\n\nThis API is available in builds 15942 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$action = \naction_example\n; // string | The action which should be performed by the server\n$vhostName = \nvhostName_example\n; // string | The name of the current VHost the action will be performed on\n$appName = \nappName_example\n; // string | The application name needed for this REST call\n$instanceName = \ninstanceName_example\n; // string | The application instance name needed for this REST call\n$dvrStoreName = \ndvrStoreName_example\n; // string | The nDVR store name needed for this REST call\n\ntry {\n    $api_instance-\nputDvrRESTConverterStoreAction($serverName, $action, $vhostName, $appName, $instanceName, $dvrStoreName);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi-\nputDvrRESTConverterStoreAction: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\naction\n\n\nstring\n\n\nThe action which should be performed by the server\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\nThe name of the current VHost the action will be performed on\n\n\n\n\n\n\n\n\nappName\n\n\nstring\n\n\nThe application name needed for this REST call\n\n\n\n\n\n\n\n\ninstanceName\n\n\nstring\n\n\nThe application instance name needed for this REST call\n\n\n\n\n\n\n\n\ndvrStoreName\n\n\nstring\n\n\nThe nDVR store name needed for this REST call\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\nvoid (empty response body)\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\nputDvrRESTConverterStoresAction\n\n\n\n\nputDvrRESTConverterStoresAction($serverName, $action, $vhostName, $appName, $instanceName, $dvrConverterDefaultFileDestination, $dvrConverterDebugConversions, $dvrConverterContinueOnSourceErrors, $dvrConverterAudioVideoSyncEnable, $dvrConverterAudioVideoMaxOffset, $dvrConverterAudioVideoMaxBuffer, $dvrConverterStartTime, $dvrConverterEndTime, $dvrConverterDuration, $dvrConverterOutputFilename)\n\n\n\n\nThis API is available in builds 15942 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$action = \naction_example\n; // string | The action which should be performed by the server\n$vhostName = \nvhostName_example\n; // string | The name of the current VHost the action will be performed on\n$appName = \nappName_example\n; // string | The application name needed for this REST call\n$instanceName = \ninstanceName_example\n; // string | The application instance name needed for this REST call\n$dvrConverterDefaultFileDestination = \ndvrConverterDefaultFileDestination_example\n; // string | The file location to use when converting a nDVR store, the default is configured as the StorageDir in the application in use\n$dvrConverterDebugConversions = \ndvrConverterDebugConversions_example\n; // string | Indicates if the conversion should have debugging enabled, can be true or false, default is false\n$dvrConverterContinueOnSourceErrors = \ndvrConverterContinueOnSourceErrors_example\n; // string | Indicates if the conversion should continue even if errors are detected, can be true or false, default is true\n$dvrConverterAudioVideoSyncEnable = \ndvrConverterAudioVideoSyncEnable_example\n; // string | Indicates if the audio/video offset should be detected and conversion only started after the sync in no longer detected or over default allowable time. Can be true or false, default is false\n$dvrConverterAudioVideoMaxOffset = \n200\n; // string | Indicates the maximum audio/video timecodes can be out of sync\n$dvrConverterAudioVideoMaxBuffer = \n8000\n; // string | Indicates the maximum time a correct audio/video sync will be searched for before giving up\n$dvrConverterStartTime = \ndvrConverterStartTime_example\n; // string | A start time in UTC from where the conversion should start in the store, default is the first entry in the store\n$dvrConverterEndTime = \ndvrConverterEndTime_example\n; // string | A end time in UTC  where the conversion should end in the store, default is to the end of the store\n$dvrConverterDuration = \ndvrConverterDuration_example\n; // string | A duration for the conversion either added to the start or subtracted from the end time, if you use duration you can not use start and end\n$dvrConverterOutputFilename = \ndvrConverterOutputFilename_example\n; // string | Indicates the output filename if not using the default, which is the name of the store being converted\n\ntry {\n    $api_instance-\nputDvrRESTConverterStoresAction($serverName, $action, $vhostName, $appName, $instanceName, $dvrConverterDefaultFileDestination, $dvrConverterDebugConversions, $dvrConverterContinueOnSourceErrors, $dvrConverterAudioVideoSyncEnable, $dvrConverterAudioVideoMaxOffset, $dvrConverterAudioVideoMaxBuffer, $dvrConverterStartTime, $dvrConverterEndTime, $dvrConverterDuration, $dvrConverterOutputFilename);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi-\nputDvrRESTConverterStoresAction: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\naction\n\n\nstring\n\n\nThe action which should be performed by the server\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\nThe name of the current VHost the action will be performed on\n\n\n\n\n\n\n\n\nappName\n\n\nstring\n\n\nThe application name needed for this REST call\n\n\n\n\n\n\n\n\ninstanceName\n\n\nstring\n\n\nThe application instance name needed for this REST call\n\n\n\n\n\n\n\n\ndvrConverterDefaultFileDestination\n\n\nstring\n\n\nThe file location to use when converting a nDVR store, the default is configured as the StorageDir in the application in use\n\n\n[optional]\n\n\n\n\n\n\ndvrConverterDebugConversions\n\n\nstring\n\n\nIndicates if the conversion should have debugging enabled, can be true or false, default is false\n\n\n[optional]\n\n\n\n\n\n\ndvrConverterContinueOnSourceErrors\n\n\nstring\n\n\nIndicates if the conversion should continue even if errors are detected, can be true or false, default is true\n\n\n[optional]\n\n\n\n\n\n\ndvrConverterAudioVideoSyncEnable\n\n\nstring\n\n\nIndicates if the audio/video offset should be detected and conversion only started after the sync in no longer detected or over default allowable time. Can be true or false, default is false\n\n\n[optional]\n\n\n\n\n\n\ndvrConverterAudioVideoMaxOffset\n\n\nstring\n\n\nIndicates the maximum audio/video timecodes can be out of sync\n\n\n[optional] [default to 200]\n\n\n\n\n\n\ndvrConverterAudioVideoMaxBuffer\n\n\nstring\n\n\nIndicates the maximum time a correct audio/video sync will be searched for before giving up\n\n\n[optional] [default to 8000]\n\n\n\n\n\n\ndvrConverterStartTime\n\n\nstring\n\n\nA start time in UTC from where the conversion should start in the store, default is the first entry in the store\n\n\n[optional]\n\n\n\n\n\n\ndvrConverterEndTime\n\n\nstring\n\n\nA end time in UTC  where the conversion should end in the store, default is to the end of the store\n\n\n[optional]\n\n\n\n\n\n\ndvrConverterDuration\n\n\nstring\n\n\nA duration for the conversion either added to the start or subtracted from the end time, if you use duration you can not use start and end\n\n\n[optional]\n\n\n\n\n\n\ndvrConverterOutputFilename\n\n\nstring\n\n\nIndicates the output filename if not using the default, which is the name of the store being converted\n\n\n[optional]\n\n\n\n\n\n\n\n\nReturn type\n\n\nvoid (empty response body)\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\nputIncomingStreamAction\n\n\n\n\nputIncomingStreamAction($serverName, $action, $vhostName, $appName, $instanceName, $streamName)\n\n\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$action = \naction_example\n; // string | The action which should be performed by the server\n$vhostName = \nvhostName_example\n; // string | The name of the current VHost the action will be performed on\n$appName = \nappName_example\n; // string | The application name needed for this REST call\n$instanceName = \ninstanceName_example\n; // string | The application instance name needed for this REST call\n$streamName = \nstreamName_example\n; // string | The stream name needed for this REST call\n\ntry {\n    $api_instance-\nputIncomingStreamAction($serverName, $action, $vhostName, $appName, $instanceName, $streamName);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi-\nputIncomingStreamAction: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\naction\n\n\nstring\n\n\nThe action which should be performed by the server\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\nThe name of the current VHost the action will be performed on\n\n\n\n\n\n\n\n\nappName\n\n\nstring\n\n\nThe application name needed for this REST call\n\n\n\n\n\n\n\n\ninstanceName\n\n\nstring\n\n\nThe application instance name needed for this REST call\n\n\n\n\n\n\n\n\nstreamName\n\n\nstring\n\n\nThe stream name needed for this REST call\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\nvoid (empty response body)\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\nputInstanceAction\n\n\n\n\nputInstanceAction($serverName, $action, $vhostName, $appName, $instanceName)\n\n\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$action = \naction_example\n; // string | The action which should be performed by the server\n$vhostName = \nvhostName_example\n; // string | The name of the current VHost the action will be performed on\n$appName = \nappName_example\n; // string | The application name needed for this REST call\n$instanceName = \ninstanceName_example\n; // string | The application instance name needed for this REST call\n\ntry {\n    $api_instance-\nputInstanceAction($serverName, $action, $vhostName, $appName, $instanceName);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi-\nputInstanceAction: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\naction\n\n\nstring\n\n\nThe action which should be performed by the server\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\nThe name of the current VHost the action will be performed on\n\n\n\n\n\n\n\n\nappName\n\n\nstring\n\n\nThe application name needed for this REST call\n\n\n\n\n\n\n\n\ninstanceName\n\n\nstring\n\n\nThe application instance name needed for this REST call\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\nvoid (empty response body)\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\nputMediaCacheApplicationStoreAction\n\n\n\n\nputMediaCacheApplicationStoreAction($serverName, $action, $vhostName, $appName, $instanceName, $filename)\n\n\n\n\nThis API is available in builds 15942 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$action = \naction_example\n; // string | The action which should be performed by the server\n$vhostName = \nvhostName_example\n; // string | The name of the current VHost the action will be performed on\n$appName = \nappName_example\n; // string | The application name needed for this REST call\n$instanceName = \ninstanceName_example\n; // string | The application instance name needed for this REST call\n$filename = \nfilename_example\n; // string | The file or stream name item to be used in all rest action requests\n\ntry {\n    $api_instance-\nputMediaCacheApplicationStoreAction($serverName, $action, $vhostName, $appName, $instanceName, $filename);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi-\nputMediaCacheApplicationStoreAction: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\naction\n\n\nstring\n\n\nThe action which should be performed by the server\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\nThe name of the current VHost the action will be performed on\n\n\n\n\n\n\n\n\nappName\n\n\nstring\n\n\nThe application name needed for this REST call\n\n\n\n\n\n\n\n\ninstanceName\n\n\nstring\n\n\nThe application instance name needed for this REST call\n\n\n\n\n\n\n\n\nfilename\n\n\nstring\n\n\nThe file or stream name item to be used in all rest action requests\n\n\n[optional]\n\n\n\n\n\n\n\n\nReturn type\n\n\nvoid (empty response body)\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\nputModulesConfig\n\n\n\n\nputModulesConfig($serverName, $vhostName, $appName, $body)\n\n\n\n\nUpdates the list of Modules for the specified Application\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | \n$appName = \nappName_example\n; // string | \n$body = new \\Model\\ModulesConfig(); // \\Model\\ModulesConfig | \n\ntry {\n    $api_instance-\nputModulesConfig($serverName, $vhostName, $appName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi-\nputModulesConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nappName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nbody\n\n\n\\Model\\ModulesConfig\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\nvoid (empty response body)\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\nputPublisherAppConfig\n\n\n\n\nputPublisherAppConfig($serverName, $vhostName, $publisherName, $appName, $body)\n\n\n\n\nUpdates the specified Publisher configuration\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | The vhost name\n$publisherName = \npublisherName_example\n; // string | The publisher name\n$appName = \nappName_example\n; // string | \n$body = new \\Model\\PublisherAppConfig(); // \\Model\\PublisherAppConfig | \n\ntry {\n    $api_instance-\nputPublisherAppConfig($serverName, $vhostName, $publisherName, $appName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi-\nputPublisherAppConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\nThe vhost name\n\n\n\n\n\n\n\n\npublisherName\n\n\nstring\n\n\nThe publisher name\n\n\n\n\n\n\n\n\nappName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nbody\n\n\n\\Model\\PublisherAppConfig\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\nvoid (empty response body)\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\nputPushPublishStreamAppAction\n\n\n\n\nputPushPublishStreamAppAction($serverName, $action, $vhostName, $appName, $entryName, $dstEntryName)\n\n\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$action = \naction_example\n; // string | The action which should be performed by the server\n$vhostName = \nvhostName_example\n; // string | The name of the current VHost the action will be performed on\n$appName = \nappName_example\n; // string | The application name needed for this REST call\n$entryName = \nentryName_example\n; // string | The map entry name needed for this REST call\n$dstEntryName = \ndstEntryName_example\n; // string | The destination entryName when copying\n\ntry {\n    $api_instance-\nputPushPublishStreamAppAction($serverName, $action, $vhostName, $appName, $entryName, $dstEntryName);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi-\nputPushPublishStreamAppAction: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\naction\n\n\nstring\n\n\nThe action which should be performed by the server\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\nThe name of the current VHost the action will be performed on\n\n\n\n\n\n\n\n\nappName\n\n\nstring\n\n\nThe application name needed for this REST call\n\n\n\n\n\n\n\n\nentryName\n\n\nstring\n\n\nThe map entry name needed for this REST call\n\n\n\n\n\n\n\n\ndstEntryName\n\n\nstring\n\n\nThe destination entryName when copying\n\n\n[optional]\n\n\n\n\n\n\n\n\nReturn type\n\n\nvoid (empty response body)\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\nputPushPublishStreamAppConfig\n\n\n\n\nputPushPublishStreamAppConfig($serverName, $vhostName, $appName, $entryName, $body)\n\n\n\n\nUpdates the specified PushPublish map entry configuration\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | \n$appName = \nappName_example\n; // string | \n$entryName = \nentryName_example\n; // string | The entry name needed for this REST call\n$body = new \\Model\\PushPublishStreamAppConfig(); // \\Model\\PushPublishStreamAppConfig | \n\ntry {\n    $api_instance-\nputPushPublishStreamAppConfig($serverName, $vhostName, $appName, $entryName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi-\nputPushPublishStreamAppConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nappName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nentryName\n\n\nstring\n\n\nThe entry name needed for this REST call\n\n\n\n\n\n\n\n\nbody\n\n\n\\Model\\PushPublishStreamAppConfig\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\nvoid (empty response body)\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\nputPushPublishStreamsAppConfig\n\n\n\n\nputPushPublishStreamsAppConfig($serverName, $vhostName, $appName, $body)\n\n\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | \n$appName = \nappName_example\n; // string | \n$body = new \\Model\\PushPublishStreamAppConfig(); // \\Model\\PushPublishStreamAppConfig | \n\ntry {\n    $api_instance-\nputPushPublishStreamsAppConfig($serverName, $vhostName, $appName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi-\nputPushPublishStreamsAppConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nappName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nbody\n\n\n\\Model\\PushPublishStreamAppConfig\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\nvoid (empty response body)\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\nputSDPFileAppAction\n\n\n\n\nputSDPFileAppAction($serverName, $action, $mediaCasterType, $vhostName, $appName, $sdpfileName, $connectAppName, $appInstance)\n\n\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$action = \naction_example\n; // string | The action which should be performed by the server\n$mediaCasterType = \nrtp\n; // string | The MediaCasterType to use for the connection\n$vhostName = \nvhostName_example\n; // string | The name of the current VHost the action will be performed on\n$appName = \nappName_example\n; // string | The application name needed for this REST call\n$sdpfileName = \nsdpfileName_example\n; // string | The sdp file name needed for this REST call\n$connectAppName = \nconnectAppName_example\n; // string | The name of the application to connect to\n$appInstance = \nappInstance_example\n; // string | The name of the application instance to connect to\n\ntry {\n    $api_instance-\nputSDPFileAppAction($serverName, $action, $mediaCasterType, $vhostName, $appName, $sdpfileName, $connectAppName, $appInstance);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi-\nputSDPFileAppAction: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\naction\n\n\nstring\n\n\nThe action which should be performed by the server\n\n\n\n\n\n\n\n\nmediaCasterType\n\n\nstring\n\n\nThe MediaCasterType to use for the connection\n\n\n[default to rtp]\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\nThe name of the current VHost the action will be performed on\n\n\n\n\n\n\n\n\nappName\n\n\nstring\n\n\nThe application name needed for this REST call\n\n\n\n\n\n\n\n\nsdpfileName\n\n\nstring\n\n\nThe sdp file name needed for this REST call\n\n\n\n\n\n\n\n\nconnectAppName\n\n\nstring\n\n\nThe name of the application to connect to\n\n\n[optional]\n\n\n\n\n\n\nappInstance\n\n\nstring\n\n\nThe name of the application instance to connect to\n\n\n[optional]\n\n\n\n\n\n\n\n\nReturn type\n\n\nvoid (empty response body)\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\nputSMILFileAppAction\n\n\n\n\nputSMILFileAppAction($serverName, $action, $mediaCasterType, $vhostName, $appName, $smilfileName, $connectAppName, $appInstance, $dstEntryName)\n\n\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$action = \naction_example\n; // string | The action which should be performed by the server\n$mediaCasterType = \nrtp\n; // string | The MediaCasterType to use for the connection\n$vhostName = \nvhostName_example\n; // string | The name of the current VHost the action will be performed on\n$appName = \nappName_example\n; // string | The application name needed for this REST call\n$smilfileName = \nsmilfileName_example\n; // string | The SMIL file name needed for this REST call\n$connectAppName = \nconnectAppName_example\n; // string | The name of the application to connect to\n$appInstance = \nappInstance_example\n; // string | The name of the application instance to connect to\n$dstEntryName = \ndstEntryName_example\n; // string | The destination SMIL file name when copying\n\ntry {\n    $api_instance-\nputSMILFileAppAction($serverName, $action, $mediaCasterType, $vhostName, $appName, $smilfileName, $connectAppName, $appInstance, $dstEntryName);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi-\nputSMILFileAppAction: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\naction\n\n\nstring\n\n\nThe action which should be performed by the server\n\n\n\n\n\n\n\n\nmediaCasterType\n\n\nstring\n\n\nThe MediaCasterType to use for the connection\n\n\n[default to rtp]\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\nThe name of the current VHost the action will be performed on\n\n\n\n\n\n\n\n\nappName\n\n\nstring\n\n\nThe application name needed for this REST call\n\n\n\n\n\n\n\n\nsmilfileName\n\n\nstring\n\n\nThe SMIL file name needed for this REST call\n\n\n\n\n\n\n\n\nconnectAppName\n\n\nstring\n\n\nThe name of the application to connect to\n\n\n[optional]\n\n\n\n\n\n\nappInstance\n\n\nstring\n\n\nThe name of the application instance to connect to\n\n\n[optional]\n\n\n\n\n\n\ndstEntryName\n\n\nstring\n\n\nThe destination SMIL file name when copying\n\n\n[optional]\n\n\n\n\n\n\n\n\nReturn type\n\n\nvoid (empty response body)\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\nputSMILFileAppConfig\n\n\n\n\nputSMILFileAppConfig($serverName, $vhostName, $smilfileName, $appName, $body)\n\n\n\n\nUpdates the specified SMIL File configuration\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | \n$smilfileName = \nsmilfileName_example\n; // string | The SMIL file name without the extension\n$appName = \nappName_example\n; // string | \n$body = new \\Model\\SMILFileAppConfig(); // \\Model\\SMILFileAppConfig | \n\ntry {\n    $api_instance-\nputSMILFileAppConfig($serverName, $vhostName, $smilfileName, $appName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi-\nputSMILFileAppConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nsmilfileName\n\n\nstring\n\n\nThe SMIL file name without the extension\n\n\n\n\n\n\n\n\nappName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nbody\n\n\n\\Model\\SMILFileAppConfig\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\nvoid (empty response body)\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\nputSecurityConfig\n\n\n\n\nputSecurityConfig($serverName, $vhostName, $appName, $body)\n\n\n\n\nUpdates the Security configuration for the specified Application\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | \n$appName = \nappName_example\n; // string | \n$body = new \\Model\\SecurityConfig(); // \\Model\\SecurityConfig | \n\ntry {\n    $api_instance-\nputSecurityConfig($serverName, $vhostName, $appName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi-\nputSecurityConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nappName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nbody\n\n\n\\Model\\SecurityConfig\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\nvoid (empty response body)\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\nputSourceControlAction\n\n\n\n\nputSourceControlAction($serverName, $action, $vhostName, $appName, $instanceName, $streamName, $direction)\n\n\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$action = \naction_example\n; // string | The action which should be performed by the server\n$vhostName = \nvhostName_example\n; // string | The VHost name\n$appName = \nappName_example\n; // string | The Application name\n$instanceName = \ninstanceName_example\n; // string | The Application Instance name\n$streamName = \nstreamName_example\n; // string | The Stream name\n$direction = \ndirection_example\n; // string | No query params available for captureImage. Optional query params for zoom and panTilt:   ZoomIn, ZoomOut,   PanTiltUp, PanTiltRight, PanTiltDown, PanTiltLeft, PanTiltHome, PanTiltUpRight, PanTiltDownRight, PanTiltDownLeft, PanTiltUpLeft\n\ntry {\n    $api_instance-\nputSourceControlAction($serverName, $action, $vhostName, $appName, $instanceName, $streamName, $direction);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi-\nputSourceControlAction: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\naction\n\n\nstring\n\n\nThe action which should be performed by the server\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\nThe VHost name\n\n\n\n\n\n\n\n\nappName\n\n\nstring\n\n\nThe Application name\n\n\n\n\n\n\n\n\ninstanceName\n\n\nstring\n\n\nThe Application Instance name\n\n\n\n\n\n\n\n\nstreamName\n\n\nstring\n\n\nThe Stream name\n\n\n\n\n\n\n\n\ndirection\n\n\nstring\n\n\nNo query params available for captureImage. Optional query params for zoom and panTilt:   ZoomIn, ZoomOut,   PanTiltUp, PanTiltRight, PanTiltDown, PanTiltLeft, PanTiltHome, PanTiltUpRight, PanTiltDownRight, PanTiltDownLeft, PanTiltUpLeft\n\n\n[optional]\n\n\n\n\n\n\n\n\nReturn type\n\n\nvoid (empty response body)\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\nputStreamConfigurationConfig\n\n\n\n\nputStreamConfigurationConfig($serverName, $vhostName, $appName, $body)\n\n\n\n\nUpdates the Stream configuration for the specified Application\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | \n$appName = \nappName_example\n; // string | \n$body = new \\Model\\StreamConfigurationConfig(); // \\Model\\StreamConfigurationConfig | \n\ntry {\n    $api_instance-\nputStreamConfigurationConfig($serverName, $vhostName, $appName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi-\nputStreamConfigurationConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nappName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nbody\n\n\n\\Model\\StreamConfigurationConfig\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\nvoid (empty response body)\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\nputStreamFileAppAction\n\n\n\n\nputStreamFileAppAction($serverName, $action, $mediaCasterType, $vhostName, $appName, $streamfileName, $connectAppName, $appInstance, $dstEntryName)\n\n\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$action = \naction_example\n; // string | The action which should be performed by the server\n$mediaCasterType = \nrtp\n; // string | The MediaCasterType to use for the connection\n$vhostName = \nvhostName_example\n; // string | The name of the current VHost the action will be performed on\n$appName = \nappName_example\n; // string | The application name needed for this REST call\n$streamfileName = \nstreamfileName_example\n; // string | The stream file, file name needed for this REST call\n$connectAppName = \nconnectAppName_example\n; // string | The name of the application to connect to\n$appInstance = \nappInstance_example\n; // string | The name of the application instance to connect to\n$dstEntryName = \ndstEntryName_example\n; // string | The destination stream file name when copying\n\ntry {\n    $api_instance-\nputStreamFileAppAction($serverName, $action, $mediaCasterType, $vhostName, $appName, $streamfileName, $connectAppName, $appInstance, $dstEntryName);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi-\nputStreamFileAppAction: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\naction\n\n\nstring\n\n\nThe action which should be performed by the server\n\n\n\n\n\n\n\n\nmediaCasterType\n\n\nstring\n\n\nThe MediaCasterType to use for the connection\n\n\n[default to rtp]\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\nThe name of the current VHost the action will be performed on\n\n\n\n\n\n\n\n\nappName\n\n\nstring\n\n\nThe application name needed for this REST call\n\n\n\n\n\n\n\n\nstreamfileName\n\n\nstring\n\n\nThe stream file, file name needed for this REST call\n\n\n\n\n\n\n\n\nconnectAppName\n\n\nstring\n\n\nThe name of the application to connect to\n\n\n[optional]\n\n\n\n\n\n\nappInstance\n\n\nstring\n\n\nThe name of the application instance to connect to\n\n\n[optional]\n\n\n\n\n\n\ndstEntryName\n\n\nstring\n\n\nThe destination stream file name when copying\n\n\n[optional]\n\n\n\n\n\n\n\n\nReturn type\n\n\nvoid (empty response body)\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\nputStreamFileAppConfig\n\n\n\n\nputStreamFileAppConfig($serverName, $vhostName, $streamfileName, $appName, $body)\n\n\n\n\nUpdates the specified Stream File configuration\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | \n$streamfileName = \nstreamfileName_example\n; // string | The stream file name without the extension\n$appName = \nappName_example\n; // string | \n$body = new \\Model\\StreamFileAppConfig(); // \\Model\\StreamFileAppConfig | \n\ntry {\n    $api_instance-\nputStreamFileAppConfig($serverName, $vhostName, $streamfileName, $appName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi-\nputStreamFileAppConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nstreamfileName\n\n\nstring\n\n\nThe stream file name without the extension\n\n\n\n\n\n\n\n\nappName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nbody\n\n\n\\Model\\StreamFileAppConfig\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\nvoid (empty response body)\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\nputStreamFileAppConfigAdv\n\n\n\n\nputStreamFileAppConfigAdv($serverName, $vhostName, $streamfileName, $appName, $body)\n\n\n\n\nUpdates the Advanced Stream File configuration\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | \n$streamfileName = \nstreamfileName_example\n; // string | The stream file name without the .stream extension\n$appName = \nappName_example\n; // string | \n$body = new \\Model\\StreamFileAppConfigAdv(); // \\Model\\StreamFileAppConfigAdv | \n\ntry {\n    $api_instance-\nputStreamFileAppConfigAdv($serverName, $vhostName, $streamfileName, $appName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi-\nputStreamFileAppConfigAdv: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nstreamfileName\n\n\nstring\n\n\nThe stream file name without the .stream extension\n\n\n\n\n\n\n\n\nappName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nbody\n\n\n\\Model\\StreamFileAppConfigAdv\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\nvoid (empty response body)\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\nputStreamGroupAction\n\n\n\n\nputStreamGroupAction($serverName, $action, $vhostName, $appName, $instanceName, $groupName)\n\n\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$action = \naction_example\n; // string | The action which should be performed by the server\n$vhostName = \nvhostName_example\n; // string | The name of the current VHost the action will be performed on\n$appName = \nappName_example\n; // string | The application name needed for this REST call\n$instanceName = \ninstanceName_example\n; // string | The application instance name needed for this REST call\n$groupName = \ngroupName_example\n; // string | The group name needed for this REST call\n\ntry {\n    $api_instance-\nputStreamGroupAction($serverName, $action, $vhostName, $appName, $instanceName, $groupName);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi-\nputStreamGroupAction: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\naction\n\n\nstring\n\n\nThe action which should be performed by the server\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\nThe name of the current VHost the action will be performed on\n\n\n\n\n\n\n\n\nappName\n\n\nstring\n\n\nThe application name needed for this REST call\n\n\n\n\n\n\n\n\ninstanceName\n\n\nstring\n\n\nThe application instance name needed for this REST call\n\n\n\n\n\n\n\n\ngroupName\n\n\nstring\n\n\nThe group name needed for this REST call\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\nvoid (empty response body)\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\nputStreamRecorderAction\n\n\n\n\nputStreamRecorderAction($serverName, $action, $vhostName, $appName, $instanceName, $recorderName)\n\n\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$action = \naction_example\n; // string | The action which should be performed by the server\n$vhostName = \nvhostName_example\n; // string | The name of the current VHost the action will be performed on\n$appName = \nappName_example\n; // string | The application name needed for this REST call\n$instanceName = \ninstanceName_example\n; // string | The application instance name needed for this REST call\n$recorderName = \nrecorderName_example\n; // string | The recorder name (stream name) needed for this REST call\n\ntry {\n    $api_instance-\nputStreamRecorderAction($serverName, $action, $vhostName, $appName, $instanceName, $recorderName);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi-\nputStreamRecorderAction: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\naction\n\n\nstring\n\n\nThe action which should be performed by the server\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\nThe name of the current VHost the action will be performed on\n\n\n\n\n\n\n\n\nappName\n\n\nstring\n\n\nThe application name needed for this REST call\n\n\n\n\n\n\n\n\ninstanceName\n\n\nstring\n\n\nThe application instance name needed for this REST call\n\n\n\n\n\n\n\n\nrecorderName\n\n\nstring\n\n\nThe recorder name (stream name) needed for this REST call\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\nvoid (empty response body)\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\nputTranscoderAppConfig\n\n\n\n\nputTranscoderAppConfig($serverName, $vhostName, $appName, $body)\n\n\n\n\nUpdates the Transcoder configuration for the specified Application\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | \n$appName = \nappName_example\n; // string | \n$body = new \\Model\\TranscoderAppConfig(); // \\Model\\TranscoderAppConfig | \n\ntry {\n    $api_instance-\nputTranscoderAppConfig($serverName, $vhostName, $appName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi-\nputTranscoderAppConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nappName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nbody\n\n\n\\Model\\TranscoderAppConfig\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\nvoid (empty response body)\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\nputTranscoderAppConfigAdv\n\n\n\n\nputTranscoderAppConfigAdv($serverName, $vhostName, $appName, $body)\n\n\n\n\nUpdates the Advanced Transcoder configuration for the specified Application\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | \n$appName = \nappName_example\n; // string | \n$body = new \\Model\\TranscoderAppConfigAdv(); // \\Model\\TranscoderAppConfigAdv | \n\ntry {\n    $api_instance-\nputTranscoderAppConfigAdv($serverName, $vhostName, $appName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi-\nputTranscoderAppConfigAdv: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nappName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nbody\n\n\n\\Model\\TranscoderAppConfigAdv\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\nvoid (empty response body)\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\nputTranscoderEncodeAppConfig\n\n\n\n\nputTranscoderEncodeAppConfig($serverName, $vhostName, $templateName, $encodeName, $appName, $body)\n\n\n\n\nUpdates the specified Trancoder Encode configuration\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | \n$templateName = \ntemplateName_example\n; // string | \n$encodeName = \nencodeName_example\n; // string | \n$appName = \nappName_example\n; // string | \n$body = new \\Model\\TranscoderEncodeAppConfig(); // \\Model\\TranscoderEncodeAppConfig | \n\ntry {\n    $api_instance-\nputTranscoderEncodeAppConfig($serverName, $vhostName, $templateName, $encodeName, $appName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi-\nputTranscoderEncodeAppConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ntemplateName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nencodeName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nappName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nbody\n\n\n\\Model\\TranscoderEncodeAppConfig\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\nvoid (empty response body)\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\nputTranscoderEncodeAppConfigAdv\n\n\n\n\nputTranscoderEncodeAppConfigAdv($serverName, $vhostName, $templateName, $encodeName, $appName, $body)\n\n\n\n\nUpdates the Advanced Transcoder Encode configuration\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | \n$templateName = \ntemplateName_example\n; // string | \n$encodeName = \nencodeName_example\n; // string | \n$appName = \nappName_example\n; // string | \n$body = new \\Model\\TranscoderEncodeAppConfigAdv(); // \\Model\\TranscoderEncodeAppConfigAdv | \n\ntry {\n    $api_instance-\nputTranscoderEncodeAppConfigAdv($serverName, $vhostName, $templateName, $encodeName, $appName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi-\nputTranscoderEncodeAppConfigAdv: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ntemplateName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nencodeName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nappName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nbody\n\n\n\\Model\\TranscoderEncodeAppConfigAdv\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\nvoid (empty response body)\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\nputTranscoderOverlayDecodeAppConfig\n\n\n\n\nputTranscoderOverlayDecodeAppConfig($serverName, $vhostName, $templateName, $overlayName, $appName, $body)\n\n\n\n\nUpdates the specified Trancoder Overlay Decode configuration\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | \n$templateName = \ntemplateName_example\n; // string | \n$overlayName = \noverlayName_example\n; // string | \n$appName = \nappName_example\n; // string | \n$body = new \\Model\\TranscoderOverlayDecodeAppConfig(); // \\Model\\TranscoderOverlayDecodeAppConfig | \n\ntry {\n    $api_instance-\nputTranscoderOverlayDecodeAppConfig($serverName, $vhostName, $templateName, $overlayName, $appName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi-\nputTranscoderOverlayDecodeAppConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ntemplateName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\noverlayName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nappName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nbody\n\n\n\\Model\\TranscoderOverlayDecodeAppConfig\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\nvoid (empty response body)\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\nputTranscoderOverlayEncodeAppConfig\n\n\n\n\nputTranscoderOverlayEncodeAppConfig($serverName, $vhostName, $templateName, $overlayName, $encodeName, $appName, $body)\n\n\n\n\nUpdates the specified Trancoder Overlay Encode configuration\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | \n$templateName = \ntemplateName_example\n; // string | \n$overlayName = \noverlayName_example\n; // string | \n$encodeName = \nencodeName_example\n; // string | \n$appName = \nappName_example\n; // string | \n$body = new \\Model\\TranscoderOverlayEncodeAppConfig(); // \\Model\\TranscoderOverlayEncodeAppConfig | \n\ntry {\n    $api_instance-\nputTranscoderOverlayEncodeAppConfig($serverName, $vhostName, $templateName, $overlayName, $encodeName, $appName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi-\nputTranscoderOverlayEncodeAppConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ntemplateName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\noverlayName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nencodeName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nappName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nbody\n\n\n\\Model\\TranscoderOverlayEncodeAppConfig\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\nvoid (empty response body)\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\nputTranscoderStreamNameGroupAppConfig\n\n\n\n\nputTranscoderStreamNameGroupAppConfig($serverName, $vhostName, $templateName, $groupName, $appName, $body)\n\n\n\n\nUpdates the specified Trancoder StreamNameGroup configuration\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | \n$templateName = \ntemplateName_example\n; // string | \n$groupName = \ngroupName_example\n; // string | \n$appName = \nappName_example\n; // string | \n$body = new \\Model\\TranscoderStreamNameGroupAppConfig(); // \\Model\\TranscoderStreamNameGroupAppConfig | \n\ntry {\n    $api_instance-\nputTranscoderStreamNameGroupAppConfig($serverName, $vhostName, $templateName, $groupName, $appName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi-\nputTranscoderStreamNameGroupAppConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ntemplateName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ngroupName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nappName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nbody\n\n\n\\Model\\TranscoderStreamNameGroupAppConfig\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\nvoid (empty response body)\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\nputTranscoderTemplateAppAction\n\n\n\n\nputTranscoderTemplateAppAction($serverName, $action, $vhostName, $appName, $templateName, $dstEntryName)\n\n\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$action = \naction_example\n; // string | The action which should be performed by the server\n$vhostName = \nvhostName_example\n; // string | The name of the current VHost the action will be performed on\n$appName = \nappName_example\n; // string | The application name needed for this REST call\n$templateName = \ntemplateName_example\n; // string | The template name needed for this REST call\n$dstEntryName = \ndstEntryName_example\n; // string | The destination transcode template file name when copying\n\ntry {\n    $api_instance-\nputTranscoderTemplateAppAction($serverName, $action, $vhostName, $appName, $templateName, $dstEntryName);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi-\nputTranscoderTemplateAppAction: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\naction\n\n\nstring\n\n\nThe action which should be performed by the server\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\nThe name of the current VHost the action will be performed on\n\n\n\n\n\n\n\n\nappName\n\n\nstring\n\n\nThe application name needed for this REST call\n\n\n\n\n\n\n\n\ntemplateName\n\n\nstring\n\n\nThe template name needed for this REST call\n\n\n\n\n\n\n\n\ndstEntryName\n\n\nstring\n\n\nThe destination transcode template file name when copying\n\n\n[optional]\n\n\n\n\n\n\n\n\nReturn type\n\n\nvoid (empty response body)\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\nputTranscoderTemplateAppConfig\n\n\n\n\nputTranscoderTemplateAppConfig($serverName, $vhostName, $templateName, $appName, $body)\n\n\n\n\nUpdates the specified Trancoder Template configuration\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | \n$templateName = \ntemplateName_example\n; // string | \n$appName = \nappName_example\n; // string | \n$body = new \\Model\\TranscoderTemplateAppConfig(); // \\Model\\TranscoderTemplateAppConfig | \n\ntry {\n    $api_instance-\nputTranscoderTemplateAppConfig($serverName, $vhostName, $templateName, $appName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi-\nputTranscoderTemplateAppConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ntemplateName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nappName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nbody\n\n\n\\Model\\TranscoderTemplateAppConfig\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\nvoid (empty response body)\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\nputTranscoderTemplateAppConfigAdv\n\n\n\n\nputTranscoderTemplateAppConfigAdv($serverName, $vhostName, $templateName, $appName, $body)\n\n\n\n\nUpdates the Advanced Transcoder Template configuration\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | \n$templateName = \ntemplateName_example\n; // string | \n$appName = \nappName_example\n; // string | \n$body = new \\Model\\TranscoderTemplateAppConfigAdv(); // \\Model\\TranscoderTemplateAppConfigAdv | \n\ntry {\n    $api_instance-\nputTranscoderTemplateAppConfigAdv($serverName, $vhostName, $templateName, $appName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi-\nputTranscoderTemplateAppConfigAdv: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ntemplateName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nappName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nbody\n\n\n\\Model\\TranscoderTemplateAppConfigAdv\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\nvoid (empty response body)\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]\n\n\nputVerimatrixStreamMapsConfig\n\n\n\n\nputVerimatrixStreamMapsConfig($serverName, $vhostName, $appName, $body)\n\n\n\n\nUpdates the Verimatrix stream mapfile for the specified Application\n\n\nThis API is available in builds 15089 or later.\n\n\nExample\n\n\n?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName = \nserverName_example\n; // string | Reserved for future use\n$vhostName = \nvhostName_example\n; // string | \n$appName = \nappName_example\n; // string | \n$body = new \\Model\\VerimatrixStreamMapsConfig(); // \\Model\\VerimatrixStreamMapsConfig | \n\ntry {\n    $api_instance-\nputVerimatrixStreamMapsConfig($serverName, $vhostName, $appName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi-\nputVerimatrixStreamMapsConfig: ', $e-\ngetMessage(), PHP_EOL;\n}\n?\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\nReserved for future use\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nappName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nbody\n\n\n\\Model\\VerimatrixStreamMapsConfig\n\n\n\n\n\n\n\n\n\n\n\n\nReturn type\n\n\nvoid (empty response body)\n\n\nAuthorization\n\n\nNo authorization required\n\n\nHTTP request headers\n\n\n\n\nContent-Type\n: application/xml, text/xml, application/json\n\n\nAccept\n: application/xml, text/xml, application/json\n\n\n\n\n[Back to top]\n \n[Back to API list]\n \n[Back to Model list]\n \n[Back to README]", 
            "title": "VserversserverNamevhostsvhostNameapplicationsApi"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#wowzaapivserversservernamevhostsvhostnameapplicationsapi", 
            "text": "All URIs are relative to  http://localhost:8087/     Method  HTTP request  Description      deleteApplicationConfig  DELETE  /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}  Deletes the specified Application configuration    deletePublisherAppConfig  DELETE  /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/publishers/{publisherName}  Deletes the specified Publisher configuration    deletePushPublishStreamAppConfig  DELETE  /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/pushpublish/mapentries/{entryName}  Deletes the specified PushPublish map entry configuration    deleteSDPFileAppConfig  DELETE  /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/sdpfiles/{sdpfileName}  Deletes the specified SDP file    deleteSMILFileAppConfig  DELETE  /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/smilfiles/{smilfileName}  Deletes the specified SMIL File configuration    deleteStreamFileAppConfig  DELETE  /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/streamfiles/{streamfileName}  Deletes the specified Stream File configuration    deleteTranscoderEncodeAppConfig  DELETE  /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/transcoder/templates/{templateName}/encodes/{encodeName}  Deletes the specified Trancoder Encode configuration    deleteTranscoderOverlayDecodeAppConfig  DELETE  /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/transcoder/templates/{templateName}/decode/overlays/{overlayName}  Deletes the specified Trancoder Overlay Decode configuration    deleteTranscoderOverlayEncodeAppConfig  DELETE  /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/transcoder/templates/{templateName}/encodes/{encodeName}/overlays/{overlayName}  Deletes the specified Trancoder Overlay Encode configuration    deleteTranscoderStreamNameGroupAppConfig  DELETE  /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/transcoder/templates/{templateName}/streamnamegroups/{groupName}  Deletes the specified Trancoder StreamNameGroup configuration    deleteTranscoderTemplateAppConfig  DELETE  /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/transcoder/templates/{templateName}  Deletes the specified Trancoder Template configuration    getApplicationConfig  GET  /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}  Retrieves the specified Application configuration    getApplicationConfigAdv  GET  /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/adv  Retrieves the specified advanced Application configuration    getApplicationsConfig  GET  /v2/servers/{serverName}/vhosts/{vhostName}/applications  Retrieves the list of Applications for the specifed vhost    getBuyDRMStreamMapsConfig  GET  /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/drm/buydrmmapfile  Retrieves the BuyDRM stream mapfile for the specified Application    getCurrentApplicationStatistics  GET  /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/monitoring/current  Retrieves the current Application statistics    getCurrentIncomingStreamStatistics  GET  /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/instances/{instanceName}/incomingstreams/{streamName}/monitoring/current  Retrieves the Current Incoming Stream statistics for the specifed Incoming Stream    getDRMConfig  GET  /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/drm  Retrieves the DRM configuration for the specified Application    getDRMConfigAdv  GET  /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/drm/adv  Retrieves the advanced DRM configuration for the specified Application    getDVRConfig  GET  /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/dvr  Retrieves the DVR configuration for the specified Application    getDVRConfigAdv  GET  /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/dvr/adv  Retrieves the advanced DVR configuration for the specified Application    getDefaultStreamRecorderConfig  GET  /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/instances/{instanceName}/streamrecorders/{recorderName}/default  Retrieves a Stream Recorder of the requested name, popluated with the default values    getDvrRESTConverterStore  GET  /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/instances/{instanceName}/dvrstores/{dvrStoreName}  Retrieves the information about a store/converter associated with the application instance    getDvrRESTConverterStores  GET  /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/instances/{instanceName}/dvrstores  Retrieves the list of DVR stores associated with this application instance    getHistoricApplicationStatistics  GET  /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/monitoring/historic  Retrieves the historic Application statistics    getIncomingStreamConfig  GET  /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/instances/{instanceName}/incomingstreams/{streamName}  Retrieves the Incoming Stream information for the specifed Incoming Stream    getInstanceConfig  GET  /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/instances/{instanceName}  Retrieves the specified Application Instance information    getInstancesConfig  GET  /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/instances  Retrieves the list of Instances for the specified Application    getLiveEncoderConfig  GET  /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/instances/{instanceName}/incomingstreams/{streamName}/encoder/live  Retrieves the LiveEncoder configuration for the specified IncomingStream    getModulesConfig  GET  /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/modules  Retrieves the list of Modules for the specified Application    getPublisherAppConfig  GET  /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/publishers/{publisherName}  Retrieves the specified Publisher configuration    getPublishersAppConfig  GET  /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/publishers  Retrieves the list of Publishers for the specified Application    getPushPublishStreamAppConfig  GET  /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/pushpublish/mapentries/{entryName}  Retrieves the PushPublish map entry configuration for the specified Application    getPushPublishStreamsAppConfig  GET  /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/pushpublish/mapentries  Retrieves the list of PushPublish Streams for the specified Application    getSDPFilesAppConfig  GET  /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/sdpfiles  Retrieves the list of SDP Files for the specified Application    getSMILFileAppConfig  GET  /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/smilfiles/{smilfileName}  Retrieves the specified SMIL File configuration    getSMILFilesAppConfig  GET  /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/smilfiles  Retrieves the list of SMIL Files for the specified Application    getSecurityConfig  GET  /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/security  Retrieves the Security configuration for the specified Application    getShortUrlEncoderConfig  GET  /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/instances/{instanceName}/incomingstreams/{streamName}/encoder/shorturl  Retrieves the Short URL for the LiveEncoder configuration for the specified IncomingStream    getSourceControlConfig  GET  /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/instances/{instanceName}/incomingstreams/{streamName}/sourcecontrol  Gets information about the Source Control and it s supported features    getStreamConfigurationConfig  GET  /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/streamconfiguration  Retrieves the Stream configuration for the specified Application    getStreamFileAppConfig  GET  /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/streamfiles/{streamfileName}  Retrieves the specified Stream File configuration    getStreamFileAppConfigAdv  GET  /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/streamfiles/{streamfileName}/adv  Retrieves the Advanced Stream File configuration    getStreamFilesAppConfig  GET  /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/streamfiles  Retrieves the list of Stream Files for the specified Application    getStreamGroupConfig  GET  /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/instances/{instanceName}/streamgroups/{groupName}  Retrieves the specified StreamGroup configuration    getStreamGroupsConfig  GET  /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/instances/{instanceName}/streamgroups  Retrieves the list of Stream Groups for the specified Application Instance    getStreamRecorderConfig  GET  /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/instances/{instanceName}/streamrecorders/{recorderName}  Retrieves the specifed Stream Recorder    getStreamRecordersConfig  GET  /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/instances/{instanceName}/streamrecorders  Retrieves the list of Stream Recorders for the specified Application Instance    getTranscoderAppConfig  GET  /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/transcoder  Retrieves the Transcoder configuration for the specified Application    getTranscoderAppConfigAdv  GET  /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/transcoder/adv  Retrieves the Advanced Transcoder configuration for the specified Application    getTranscoderEncodeAppConfig  GET  /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/transcoder/templates/{templateName}/encodes/{encodeName}  Retrieves the specified Trancoder Encode configuration    getTranscoderEncodeAppConfigAdv  GET  /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/transcoder/templates/{templateName}/encodes/{encodeName}/adv  Retrieves the Advanced Transcoder Encode configuration    getTranscoderEncodesAppConfig  GET  /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/transcoder/templates/{templateName}/encodes  Retrieves the list of Transcoder Encode Configurations for the specified Application    getTranscoderOverlayDecodeAppConfig  GET  /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/transcoder/templates/{templateName}/decode/overlays/{overlayName}  Retrieves the specified Trancoder Overlay Decode configuration    getTranscoderOverlayEncodeAppConfig  GET  /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/transcoder/templates/{templateName}/encodes/{encodeName}/overlays/{overlayName}  Retrieves the specified Trancoder Overlay Encode configuration    getTranscoderStreamNameGroupAppConfig  GET  /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/transcoder/templates/{templateName}/streamnamegroups/{groupName}  Retrieves the specified Trancoder StreamNameGroup configuration    getTranscoderStreamNameGroupsAppConfig  GET  /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/transcoder/templates/{templateName}/streamnamegroups  Retrieves the list of Transcoder Stream Name Groups for the specified Template    getTranscoderTemplateAppConfig  GET  /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/transcoder/templates/{templateName}  Retrieves the specified Trancoder Template configuration    getTranscoderTemplateAppConfigAdv  GET  /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/transcoder/templates/{templateName}/adv  Retrieves the Advanced Transcoder Template configuration    getTranscoderTemplatesAppConfig  GET  /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/transcoder/templates  Retrieves the list of Transcoder Template Configurations for the specified Application    getVerimatrixStreamMapsConfig  GET  /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/drm/verimatrixmapfile  Retrieves the Verimatrix stream mapfile for the specified Application    postApplicationConfig  POST  /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}  Adds the specified Application configuration    postApplicationConfigAdv  POST  /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/adv  Adds the specified advanced Application configuration    postApplicationsConfig  POST  /v2/servers/{serverName}/vhosts/{vhostName}/applications  Adds an Application to the list of Applications  for the specifed vhost    postPublisherAppConfig  POST  /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/publishers/{publisherName}  Adds the specified Publisher configuration    postPublishersAppConfig  POST  /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/publishers  Add a Publisher to list of Publishers for the specified Application    postPushPublishStreamAppConfig  POST  /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/pushpublish/mapentries/{entryName}  Adds the specified PushPublish map entry configuration    postPushPublishStreamsAppConfig  POST  /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/pushpublish/mapentries  Adds a PushPublish Stream to list of PushPublish Streams for the specified Application    postSMILFileAppConfig  POST  /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/smilfiles/{smilfileName}  Adds the specified SMIL File configuration    postSMILFilesAppConfig  POST  /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/smilfiles  Adds a SMIL File to the list of SMIL Files for the specified Application    postStreamFileAppConfig  POST  /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/streamfiles/{streamfileName}  Adds the specified Stream File configuration    postStreamFilesAppConfig  POST  /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/streamfiles  Adds a Stream File to the list of Stream Files for the specified Application    postStreamRecorderConfig  POST  /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/instances/{instanceName}/streamrecorders/{recorderName}  Creates a new Stream Recorder and starts recording    postStreamRecordersConfig  POST  /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/instances/{instanceName}/streamrecorders  Creates a new Stream Recorder in the specified Application Instance and starts recording    postTranscoderEncodeAppConfig  POST  /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/transcoder/templates/{templateName}/encodes/{encodeName}  Adds the specified Trancoder Encode configuration    postTranscoderEncodesAppConfig  POST  /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/transcoder/templates/{templateName}/encodes  Adds a Transcoder Encode Configuration to the specified Application    postTranscoderStreamNameGroupAppConfig  POST  /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/transcoder/templates/{templateName}/streamnamegroups/{groupName}  Adds the specified Trancoder StreamNameGroup configuration    postTranscoderStreamNameGroupsAppConfig  POST  /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/transcoder/templates/{templateName}/streamnamegroups  Adds a Transcoder Stream Name Groups Configuration to the specified Template    postTranscoderTemplateAppConfig  POST  /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/transcoder/templates/{templateName}  Adds the specified Trancoder Template configuration    postTranscoderTemplatesAppConfig  POST  /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/transcoder/templates  Adds a Transcoder Templates Configuration to the specified Application    putApplicationAction  PUT  /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/actions/{action}     putApplicationConfig  PUT  /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}  Updates the specified Application configuration    putApplicationConfigAdv  PUT  /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/adv  Updates the specified advanced Application configuration    putBuyDRMStreamMapsConfig  PUT  /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/drm/buydrmmapfile  Updates the BuyDRM stream mapfile for the specified Application    putDRMConfig  PUT  /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/drm  Updates the DRM configuration for the specified Application    putDRMConfigAdv  PUT  /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/drm/adv  Updates the advanced DRM configuration for the specified Application    putDVRConfig  PUT  /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/dvr  Updates the DVR configuration for the specified Application    putDVRConfigAdv  PUT  /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/dvr/adv  Updates the advanced DVR configuration for the specified Application    putDvrRESTConverterStoreAction  PUT  /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/instances/{instanceName}/dvrstores/{dvrStoreName}/actions/{action}     putDvrRESTConverterStoresAction  PUT  /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/instances/{instanceName}/dvrstores/actions/{action}     putIncomingStreamAction  PUT  /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/instances/{instanceName}/incomingstreams/{streamName}/actions/{action}     putInstanceAction  PUT  /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/instances/{instanceName}/actions/{action}     putMediaCacheApplicationStoreAction  PUT  /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/instances/{instanceName}/mediacache/stores/actions/{action}     putModulesConfig  PUT  /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/modules  Updates the list of Modules for the specified Application    putPublisherAppConfig  PUT  /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/publishers/{publisherName}  Updates the specified Publisher configuration    putPushPublishStreamAppAction  PUT  /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/pushpublish/mapentries/{entryName}/actions/{action}     putPushPublishStreamAppConfig  PUT  /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/pushpublish/mapentries/{entryName}  Updates the specified PushPublish map entry configuration    putPushPublishStreamsAppConfig  PUT  /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/pushpublish/mapentries     putSDPFileAppAction  PUT  /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/sdpfiles/{sdpfileName}/actions/{action}     putSMILFileAppAction  PUT  /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/smilfiles/{smilfileName}/actions/{action}     putSMILFileAppConfig  PUT  /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/smilfiles/{smilfileName}  Updates the specified SMIL File configuration    putSecurityConfig  PUT  /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/security  Updates the Security configuration for the specified Application    putSourceControlAction  PUT  /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/instances/{instanceName}/incomingstreams/{streamName}/sourcecontrol/actions/{action}     putStreamConfigurationConfig  PUT  /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/streamconfiguration  Updates the Stream configuration for the specified Application    putStreamFileAppAction  PUT  /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/streamfiles/{streamfileName}/actions/{action}     putStreamFileAppConfig  PUT  /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/streamfiles/{streamfileName}  Updates the specified Stream File configuration    putStreamFileAppConfigAdv  PUT  /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/streamfiles/{streamfileName}/adv  Updates the Advanced Stream File configuration    putStreamGroupAction  PUT  /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/instances/{instanceName}/streamgroups/{groupName}/actions/{action}     putStreamRecorderAction  PUT  /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/instances/{instanceName}/streamrecorders/{recorderName}/actions/{action}     putTranscoderAppConfig  PUT  /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/transcoder  Updates the Transcoder configuration for the specified Application    putTranscoderAppConfigAdv  PUT  /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/transcoder/adv  Updates the Advanced Transcoder configuration for the specified Application    putTranscoderEncodeAppConfig  PUT  /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/transcoder/templates/{templateName}/encodes/{encodeName}  Updates the specified Trancoder Encode configuration    putTranscoderEncodeAppConfigAdv  PUT  /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/transcoder/templates/{templateName}/encodes/{encodeName}/adv  Updates the Advanced Transcoder Encode configuration    putTranscoderOverlayDecodeAppConfig  PUT  /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/transcoder/templates/{templateName}/decode/overlays/{overlayName}  Updates the specified Trancoder Overlay Decode configuration    putTranscoderOverlayEncodeAppConfig  PUT  /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/transcoder/templates/{templateName}/encodes/{encodeName}/overlays/{overlayName}  Updates the specified Trancoder Overlay Encode configuration    putTranscoderStreamNameGroupAppConfig  PUT  /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/transcoder/templates/{templateName}/streamnamegroups/{groupName}  Updates the specified Trancoder StreamNameGroup configuration    putTranscoderTemplateAppAction  PUT  /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/transcoder/templates/{templateName}/actions/{action}     putTranscoderTemplateAppConfig  PUT  /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/transcoder/templates/{templateName}  Updates the specified Trancoder Template configuration    putTranscoderTemplateAppConfigAdv  PUT  /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/transcoder/templates/{templateName}/adv  Updates the Advanced Transcoder Template configuration    putVerimatrixStreamMapsConfig  PUT  /v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/drm/verimatrixmapfile  Updates the Verimatrix stream mapfile for the specified Application", 
            "title": "WowzaApi\\VserversserverNamevhostsvhostNameapplicationsApi"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#deleteapplicationconfig", 
            "text": "deleteApplicationConfig($serverName, $vhostName, $appName)   Deletes the specified Application configuration  This API is available in builds 15089 or later.", 
            "title": "deleteApplicationConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#example", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | \n$appName =  appName_example ; // string | \n\ntry {\n    $api_instance- deleteApplicationConfig($serverName, $vhostName, $appName);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi- deleteApplicationConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#parameters", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string      appName  string", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#return-type", 
            "text": "void (empty response body)", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#authorization", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#http-request-headers", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#deletepublisherappconfig", 
            "text": "deletePublisherAppConfig($serverName, $vhostName, $publisherName, $appName)   Deletes the specified Publisher configuration  This API is available in builds 15089 or later.", 
            "title": "deletePublisherAppConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#example_1", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | The vhost name\n$publisherName =  publisherName_example ; // string | The publisher name\n$appName =  appName_example ; // string | \n\ntry {\n    $api_instance- deletePublisherAppConfig($serverName, $vhostName, $publisherName, $appName);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi- deletePublisherAppConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#parameters_1", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string  The vhost name     publisherName  string  The publisher name     appName  string", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#return-type_1", 
            "text": "void (empty response body)", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#authorization_1", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#http-request-headers_1", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#deletepushpublishstreamappconfig", 
            "text": "deletePushPublishStreamAppConfig($serverName, $vhostName, $appName, $entryName)   Deletes the specified PushPublish map entry configuration  This API is available in builds 15089 or later.", 
            "title": "deletePushPublishStreamAppConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#example_2", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | \n$appName =  appName_example ; // string | \n$entryName =  entryName_example ; // string | The entry name needed for this REST call\n\ntry {\n    $api_instance- deletePushPublishStreamAppConfig($serverName, $vhostName, $appName, $entryName);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi- deletePushPublishStreamAppConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#parameters_2", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string      appName  string      entryName  string  The entry name needed for this REST call", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#return-type_2", 
            "text": "void (empty response body)", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#authorization_2", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#http-request-headers_2", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#deletesdpfileappconfig", 
            "text": "deleteSDPFileAppConfig($serverName, $vhostName, $sdpfileName, $appName)   Deletes the specified SDP file  This API is available in builds 15089 or later.", 
            "title": "deleteSDPFileAppConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#example_3", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | \n$sdpfileName =  sdpfileName_example ; // string | The SDP file name without the extension\n$appName =  appName_example ; // string | \n\ntry {\n    $api_instance- deleteSDPFileAppConfig($serverName, $vhostName, $sdpfileName, $appName);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi- deleteSDPFileAppConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#parameters_3", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string      sdpfileName  string  The SDP file name without the extension     appName  string", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#return-type_3", 
            "text": "void (empty response body)", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#authorization_3", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#http-request-headers_3", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#deletesmilfileappconfig", 
            "text": "deleteSMILFileAppConfig($serverName, $vhostName, $smilfileName, $appName)   Deletes the specified SMIL File configuration  This API is available in builds 15089 or later.", 
            "title": "deleteSMILFileAppConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#example_4", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | \n$smilfileName =  smilfileName_example ; // string | The SMIL file name without the extension\n$appName =  appName_example ; // string | \n\ntry {\n    $api_instance- deleteSMILFileAppConfig($serverName, $vhostName, $smilfileName, $appName);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi- deleteSMILFileAppConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#parameters_4", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string      smilfileName  string  The SMIL file name without the extension     appName  string", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#return-type_4", 
            "text": "void (empty response body)", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#authorization_4", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#http-request-headers_4", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#deletestreamfileappconfig", 
            "text": "deleteStreamFileAppConfig($serverName, $vhostName, $streamfileName, $appName)   Deletes the specified Stream File configuration  This API is available in builds 15089 or later.", 
            "title": "deleteStreamFileAppConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#example_5", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | \n$streamfileName =  streamfileName_example ; // string | The stream file name without the extension\n$appName =  appName_example ; // string | \n\ntry {\n    $api_instance- deleteStreamFileAppConfig($serverName, $vhostName, $streamfileName, $appName);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi- deleteStreamFileAppConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#parameters_5", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string      streamfileName  string  The stream file name without the extension     appName  string", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#return-type_5", 
            "text": "void (empty response body)", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#authorization_5", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#http-request-headers_5", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#deletetranscoderencodeappconfig", 
            "text": "deleteTranscoderEncodeAppConfig($serverName, $vhostName, $templateName, $encodeName, $appName)   Deletes the specified Trancoder Encode configuration  This API is available in builds 15089 or later.", 
            "title": "deleteTranscoderEncodeAppConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#example_6", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | \n$templateName =  templateName_example ; // string | \n$encodeName =  encodeName_example ; // string | \n$appName =  appName_example ; // string | \n\ntry {\n    $api_instance- deleteTranscoderEncodeAppConfig($serverName, $vhostName, $templateName, $encodeName, $appName);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi- deleteTranscoderEncodeAppConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#parameters_6", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string      templateName  string      encodeName  string      appName  string", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#return-type_6", 
            "text": "void (empty response body)", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#authorization_6", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#http-request-headers_6", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#deletetranscoderoverlaydecodeappconfig", 
            "text": "deleteTranscoderOverlayDecodeAppConfig($serverName, $vhostName, $templateName, $overlayName, $appName)   Deletes the specified Trancoder Overlay Decode configuration  This API is available in builds 15089 or later.", 
            "title": "deleteTranscoderOverlayDecodeAppConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#example_7", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | \n$templateName =  templateName_example ; // string | \n$overlayName =  overlayName_example ; // string | \n$appName =  appName_example ; // string | \n\ntry {\n    $api_instance- deleteTranscoderOverlayDecodeAppConfig($serverName, $vhostName, $templateName, $overlayName, $appName);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi- deleteTranscoderOverlayDecodeAppConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#parameters_7", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string      templateName  string      overlayName  string      appName  string", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#return-type_7", 
            "text": "void (empty response body)", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#authorization_7", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#http-request-headers_7", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#deletetranscoderoverlayencodeappconfig", 
            "text": "deleteTranscoderOverlayEncodeAppConfig($serverName, $vhostName, $templateName, $overlayName, $encodeName, $appName)   Deletes the specified Trancoder Overlay Encode configuration  This API is available in builds 15089 or later.", 
            "title": "deleteTranscoderOverlayEncodeAppConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#example_8", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | \n$templateName =  templateName_example ; // string | \n$overlayName =  overlayName_example ; // string | \n$encodeName =  encodeName_example ; // string | \n$appName =  appName_example ; // string | \n\ntry {\n    $api_instance- deleteTranscoderOverlayEncodeAppConfig($serverName, $vhostName, $templateName, $overlayName, $encodeName, $appName);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi- deleteTranscoderOverlayEncodeAppConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#parameters_8", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string      templateName  string      overlayName  string      encodeName  string      appName  string", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#return-type_8", 
            "text": "void (empty response body)", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#authorization_8", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#http-request-headers_8", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#deletetranscoderstreamnamegroupappconfig", 
            "text": "deleteTranscoderStreamNameGroupAppConfig($serverName, $vhostName, $templateName, $groupName, $appName)   Deletes the specified Trancoder StreamNameGroup configuration  This API is available in builds 15089 or later.", 
            "title": "deleteTranscoderStreamNameGroupAppConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#example_9", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | \n$templateName =  templateName_example ; // string | \n$groupName =  groupName_example ; // string | \n$appName =  appName_example ; // string | \n\ntry {\n    $api_instance- deleteTranscoderStreamNameGroupAppConfig($serverName, $vhostName, $templateName, $groupName, $appName);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi- deleteTranscoderStreamNameGroupAppConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#parameters_9", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string      templateName  string      groupName  string      appName  string", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#return-type_9", 
            "text": "void (empty response body)", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#authorization_9", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#http-request-headers_9", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#deletetranscodertemplateappconfig", 
            "text": "deleteTranscoderTemplateAppConfig($serverName, $vhostName, $templateName, $appName)   Deletes the specified Trancoder Template configuration  This API is available in builds 15089 or later.", 
            "title": "deleteTranscoderTemplateAppConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#example_10", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | \n$templateName =  templateName_example ; // string | \n$appName =  appName_example ; // string | \n\ntry {\n    $api_instance- deleteTranscoderTemplateAppConfig($serverName, $vhostName, $templateName, $appName);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi- deleteTranscoderTemplateAppConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#parameters_10", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string      templateName  string      appName  string", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#return-type_10", 
            "text": "void (empty response body)", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#authorization_10", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#http-request-headers_10", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#getapplicationconfig", 
            "text": "\\Model\\ApplicationConfig getApplicationConfig($serverName, $vhostName, $appName)   Retrieves the specified Application configuration  This API is available in builds 15089 or later.", 
            "title": "getApplicationConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#example_11", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | \n$appName =  appName_example ; // string | \n\ntry {\n    $result = $api_instance- getApplicationConfig($serverName, $vhostName, $appName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi- getApplicationConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#parameters_11", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string      appName  string", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#return-type_11", 
            "text": "\\Model\\ApplicationConfig", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#authorization_11", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#http-request-headers_11", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#getapplicationconfigadv", 
            "text": "\\Model\\ApplicationConfigAdv getApplicationConfigAdv($serverName, $vhostName, $appName)   Retrieves the specified advanced Application configuration  This API is available in builds 15089 or later.", 
            "title": "getApplicationConfigAdv"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#example_12", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | \n$appName =  appName_example ; // string | \n\ntry {\n    $result = $api_instance- getApplicationConfigAdv($serverName, $vhostName, $appName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi- getApplicationConfigAdv: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#parameters_12", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string      appName  string", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#return-type_12", 
            "text": "\\Model\\ApplicationConfigAdv", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#authorization_12", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#http-request-headers_12", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#getapplicationsconfig", 
            "text": "\\Model\\ApplicationsConfig getApplicationsConfig($serverName, $vhostName)   Retrieves the list of Applications for the specifed vhost  This API is available in builds 15089 or later.", 
            "title": "getApplicationsConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#example_13", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | \n\ntry {\n    $result = $api_instance- getApplicationsConfig($serverName, $vhostName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi- getApplicationsConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#parameters_13", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#return-type_13", 
            "text": "\\Model\\ApplicationsConfig", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#authorization_13", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#http-request-headers_13", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#getbuydrmstreammapsconfig", 
            "text": "\\Model\\BuyDRMStreamMapsConfig getBuyDRMStreamMapsConfig($serverName, $vhostName, $appName)   Retrieves the BuyDRM stream mapfile for the specified Application  This API is available in builds 15089 or later.", 
            "title": "getBuyDRMStreamMapsConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#example_14", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | \n$appName =  appName_example ; // string | \n\ntry {\n    $result = $api_instance- getBuyDRMStreamMapsConfig($serverName, $vhostName, $appName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi- getBuyDRMStreamMapsConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#parameters_14", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string      appName  string", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#return-type_14", 
            "text": "\\Model\\BuyDRMStreamMapsConfig", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#authorization_14", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#http-request-headers_14", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#getcurrentapplicationstatistics", 
            "text": "\\Model\\CurrentApplicationStatistics getCurrentApplicationStatistics($serverName, $vhostName, $appName)   Retrieves the current Application statistics  This API is available in builds 15089 or later.", 
            "title": "getCurrentApplicationStatistics"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#example_15", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | \n$appName =  appName_example ; // string | \n\ntry {\n    $result = $api_instance- getCurrentApplicationStatistics($serverName, $vhostName, $appName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi- getCurrentApplicationStatistics: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#parameters_15", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string      appName  string", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#return-type_15", 
            "text": "\\Model\\CurrentApplicationStatistics", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#authorization_15", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#http-request-headers_15", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#getcurrentincomingstreamstatistics", 
            "text": "\\Model\\CurrentIncomingStreamStatistics getCurrentIncomingStreamStatistics($serverName, $vhostName, $appName, $instanceName, $streamName)   Retrieves the Current Incoming Stream statistics for the specifed Incoming Stream  This API is available in builds 15089 or later.", 
            "title": "getCurrentIncomingStreamStatistics"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#example_16", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | \n$appName =  appName_example ; // string | \n$instanceName =  instanceName_example ; // string | \n$streamName =  streamName_example ; // string | \n\ntry {\n    $result = $api_instance- getCurrentIncomingStreamStatistics($serverName, $vhostName, $appName, $instanceName, $streamName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi- getCurrentIncomingStreamStatistics: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#parameters_16", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string      appName  string      instanceName  string      streamName  string", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#return-type_16", 
            "text": "\\Model\\CurrentIncomingStreamStatistics", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#authorization_16", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#http-request-headers_16", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#getdrmconfig", 
            "text": "\\Model\\DRMConfig getDRMConfig($serverName, $vhostName, $appName)   Retrieves the DRM configuration for the specified Application  This API is available in builds 15089 or later.", 
            "title": "getDRMConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#example_17", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | \n$appName =  appName_example ; // string | \n\ntry {\n    $result = $api_instance- getDRMConfig($serverName, $vhostName, $appName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi- getDRMConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#parameters_17", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string      appName  string", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#return-type_17", 
            "text": "\\Model\\DRMConfig", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#authorization_17", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#http-request-headers_17", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#getdrmconfigadv", 
            "text": "\\Model\\DRMConfigAdv getDRMConfigAdv($serverName, $vhostName, $appName)   Retrieves the advanced DRM configuration for the specified Application  This API is available in builds 15089 or later.", 
            "title": "getDRMConfigAdv"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#example_18", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | \n$appName =  appName_example ; // string | \n\ntry {\n    $result = $api_instance- getDRMConfigAdv($serverName, $vhostName, $appName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi- getDRMConfigAdv: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#parameters_18", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string      appName  string", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#return-type_18", 
            "text": "\\Model\\DRMConfigAdv", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#authorization_18", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#http-request-headers_18", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#getdvrconfig", 
            "text": "\\Model\\DVRConfig getDVRConfig($serverName, $vhostName, $appName)   Retrieves the DVR configuration for the specified Application  This API is available in builds 15089 or later.", 
            "title": "getDVRConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#example_19", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | \n$appName =  appName_example ; // string | \n\ntry {\n    $result = $api_instance- getDVRConfig($serverName, $vhostName, $appName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi- getDVRConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#parameters_19", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string      appName  string", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#return-type_19", 
            "text": "\\Model\\DVRConfig", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#authorization_19", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#http-request-headers_19", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#getdvrconfigadv", 
            "text": "\\Model\\DVRConfigAdv getDVRConfigAdv($serverName, $vhostName, $appName)   Retrieves the advanced DVR configuration for the specified Application  This API is available in builds 15089 or later.", 
            "title": "getDVRConfigAdv"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#example_20", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | \n$appName =  appName_example ; // string | \n\ntry {\n    $result = $api_instance- getDVRConfigAdv($serverName, $vhostName, $appName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi- getDVRConfigAdv: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#parameters_20", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string      appName  string", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#return-type_20", 
            "text": "\\Model\\DVRConfigAdv", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#authorization_20", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#http-request-headers_20", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#getdefaultstreamrecorderconfig", 
            "text": "\\Model\\DefaultStreamRecorderConfig getDefaultStreamRecorderConfig($serverName, $vhostName, $appName, $recorderName, $instanceName)   Retrieves a Stream Recorder of the requested name, popluated with the default values  This API is available in builds 15089 or later.", 
            "title": "getDefaultStreamRecorderConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#example_21", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | \n$appName =  appName_example ; // string | \n$recorderName =  recorderName_example ; // string | \n$instanceName =  instanceName_example ; // string | \n\ntry {\n    $result = $api_instance- getDefaultStreamRecorderConfig($serverName, $vhostName, $appName, $recorderName, $instanceName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi- getDefaultStreamRecorderConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#parameters_21", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string      appName  string      recorderName  string      instanceName  string", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#return-type_21", 
            "text": "\\Model\\DefaultStreamRecorderConfig", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#authorization_21", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#http-request-headers_21", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#getdvrrestconverterstore", 
            "text": "\\Model\\DvrRESTConverterStore getDvrRESTConverterStore($serverName, $vhostName, $appName, $instanceName, $dvrStoreName)   Retrieves the information about a store/converter associated with the application instance  This API is available in builds 15942 or later.", 
            "title": "getDvrRESTConverterStore"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#example_22", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | \n$appName =  appName_example ; // string | \n$instanceName =  instanceName_example ; // string | \n$dvrStoreName =  dvrStoreName_example ; // string | \n\ntry {\n    $result = $api_instance- getDvrRESTConverterStore($serverName, $vhostName, $appName, $instanceName, $dvrStoreName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi- getDvrRESTConverterStore: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#parameters_22", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string      appName  string      instanceName  string      dvrStoreName  string", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#return-type_22", 
            "text": "\\Model\\DvrRESTConverterStore", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#authorization_22", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#http-request-headers_22", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#getdvrrestconverterstores", 
            "text": "\\Model\\DvrRESTConverterStores getDvrRESTConverterStores($serverName, $vhostName, $appName, $instanceName)   Retrieves the list of DVR stores associated with this application instance  This API is available in builds 15942 or later.", 
            "title": "getDvrRESTConverterStores"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#example_23", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | \n$appName =  appName_example ; // string | \n$instanceName =  instanceName_example ; // string | \n\ntry {\n    $result = $api_instance- getDvrRESTConverterStores($serverName, $vhostName, $appName, $instanceName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi- getDvrRESTConverterStores: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#parameters_23", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string      appName  string      instanceName  string", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#return-type_23", 
            "text": "\\Model\\DvrRESTConverterStores", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#authorization_23", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#http-request-headers_23", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#gethistoricapplicationstatistics", 
            "text": "\\Model\\HistoricApplicationStatistics getHistoricApplicationStatistics($serverName, $vhostName, $appName)   Retrieves the historic Application statistics  This API is available in builds 15089 or later.", 
            "title": "getHistoricApplicationStatistics"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#example_24", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | \n$appName =  appName_example ; // string | \n\ntry {\n    $result = $api_instance- getHistoricApplicationStatistics($serverName, $vhostName, $appName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi- getHistoricApplicationStatistics: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#parameters_24", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string      appName  string", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#return-type_24", 
            "text": "\\Model\\HistoricApplicationStatistics", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#authorization_24", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#http-request-headers_24", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#getincomingstreamconfig", 
            "text": "\\Model\\IncomingStreamConfig getIncomingStreamConfig($serverName, $vhostName, $appName, $instanceName, $streamName)   Retrieves the Incoming Stream information for the specifed Incoming Stream  This API is available in builds 15089 or later.", 
            "title": "getIncomingStreamConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#example_25", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | \n$appName =  appName_example ; // string | \n$instanceName =  instanceName_example ; // string | \n$streamName =  streamName_example ; // string | \n\ntry {\n    $result = $api_instance- getIncomingStreamConfig($serverName, $vhostName, $appName, $instanceName, $streamName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi- getIncomingStreamConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#parameters_25", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string      appName  string      instanceName  string      streamName  string", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#return-type_25", 
            "text": "\\Model\\IncomingStreamConfig", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#authorization_25", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#http-request-headers_25", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#getinstanceconfig", 
            "text": "\\Model\\InstanceConfig getInstanceConfig($serverName, $vhostName, $appName, $instanceName)   Retrieves the specified Application Instance information  This API is available in builds 15089 or later.", 
            "title": "getInstanceConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#example_26", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | \n$appName =  appName_example ; // string | \n$instanceName =  instanceName_example ; // string | \n\ntry {\n    $result = $api_instance- getInstanceConfig($serverName, $vhostName, $appName, $instanceName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi- getInstanceConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#parameters_26", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string      appName  string      instanceName  string", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#return-type_26", 
            "text": "\\Model\\InstanceConfig", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#authorization_26", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#http-request-headers_26", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#getinstancesconfig", 
            "text": "\\Model\\InstancesConfig getInstancesConfig($serverName, $vhostName, $appName)   Retrieves the list of Instances for the specified Application  This API is available in builds 15089 or later.", 
            "title": "getInstancesConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#example_27", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | \n$appName =  appName_example ; // string | \n\ntry {\n    $result = $api_instance- getInstancesConfig($serverName, $vhostName, $appName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi- getInstancesConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#parameters_27", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string      appName  string", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#return-type_27", 
            "text": "\\Model\\InstancesConfig", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#authorization_27", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#http-request-headers_27", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#getliveencoderconfig", 
            "text": "\\Model\\LiveEncoderConfig getLiveEncoderConfig($serverName, $vhostName, $appName, $instanceName, $streamName, $publishUser, $publishHost, $publishPort)   Retrieves the LiveEncoder configuration for the specified IncomingStream  This API is available in builds 15089 or later.", 
            "title": "getLiveEncoderConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#example_28", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | \n$appName =  appName_example ; // string | \n$instanceName =  instanceName_example ; // string | \n$streamName =  streamName_example ; // string | \n$publishUser =  publishUser_example ; // string | The publish username to use in the encoder configuration\n$publishHost =  publishHost_example ; // string | The IP address then encoder will publish to\n$publishPort =  publishPort_example ; // string | The Port number the encoder will publish to\n\ntry {\n    $result = $api_instance- getLiveEncoderConfig($serverName, $vhostName, $appName, $instanceName, $streamName, $publishUser, $publishHost, $publishPort);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi- getLiveEncoderConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#parameters_28", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string      appName  string      instanceName  string      streamName  string      publishUser  string  The publish username to use in the encoder configuration     publishHost  string  The IP address then encoder will publish to     publishPort  string  The Port number the encoder will publish to", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#return-type_28", 
            "text": "\\Model\\LiveEncoderConfig", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#authorization_28", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#http-request-headers_28", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#getmodulesconfig", 
            "text": "\\Model\\ModulesConfig getModulesConfig($serverName, $vhostName, $appName)   Retrieves the list of Modules for the specified Application  This API is available in builds 15089 or later.", 
            "title": "getModulesConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#example_29", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | \n$appName =  appName_example ; // string | \n\ntry {\n    $result = $api_instance- getModulesConfig($serverName, $vhostName, $appName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi- getModulesConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#parameters_29", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string      appName  string", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#return-type_29", 
            "text": "\\Model\\ModulesConfig", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#authorization_29", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#http-request-headers_29", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#getpublisherappconfig", 
            "text": "\\Model\\PublisherAppConfig getPublisherAppConfig($serverName, $vhostName, $publisherName, $appName)   Retrieves the specified Publisher configuration  This API is available in builds 15089 or later.", 
            "title": "getPublisherAppConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#example_30", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | The vhost name\n$publisherName =  publisherName_example ; // string | The publisher name\n$appName =  appName_example ; // string | \n\ntry {\n    $result = $api_instance- getPublisherAppConfig($serverName, $vhostName, $publisherName, $appName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi- getPublisherAppConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#parameters_30", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string  The vhost name     publisherName  string  The publisher name     appName  string", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#return-type_30", 
            "text": "\\Model\\PublisherAppConfig", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#authorization_30", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#http-request-headers_30", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#getpublishersappconfig", 
            "text": "\\Model\\PublishersAppConfig getPublishersAppConfig($serverName, $vhostName, $appName)   Retrieves the list of Publishers for the specified Application  This API is available in builds 15089 or later.", 
            "title": "getPublishersAppConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#example_31", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | The vhost name\n$appName =  appName_example ; // string | \n\ntry {\n    $result = $api_instance- getPublishersAppConfig($serverName, $vhostName, $appName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi- getPublishersAppConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#parameters_31", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string  The vhost name     appName  string", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#return-type_31", 
            "text": "\\Model\\PublishersAppConfig", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#authorization_31", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#http-request-headers_31", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#getpushpublishstreamappconfig", 
            "text": "\\Model\\PushPublishStreamAppConfig getPushPublishStreamAppConfig($serverName, $vhostName, $appName, $entryName)   Retrieves the PushPublish map entry configuration for the specified Application  This API is available in builds 15089 or later.", 
            "title": "getPushPublishStreamAppConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#example_32", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | \n$appName =  appName_example ; // string | \n$entryName =  entryName_example ; // string | The entry name needed for this REST call\n\ntry {\n    $result = $api_instance- getPushPublishStreamAppConfig($serverName, $vhostName, $appName, $entryName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi- getPushPublishStreamAppConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#parameters_32", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string      appName  string      entryName  string  The entry name needed for this REST call", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#return-type_32", 
            "text": "\\Model\\PushPublishStreamAppConfig", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#authorization_32", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#http-request-headers_32", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#getpushpublishstreamsappconfig", 
            "text": "\\Model\\PushPublishStreamsAppConfig getPushPublishStreamsAppConfig($serverName, $vhostName, $appName)   Retrieves the list of PushPublish Streams for the specified Application  This API is available in builds 15089 or later.", 
            "title": "getPushPublishStreamsAppConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#example_33", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | \n$appName =  appName_example ; // string | \n\ntry {\n    $result = $api_instance- getPushPublishStreamsAppConfig($serverName, $vhostName, $appName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi- getPushPublishStreamsAppConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#parameters_33", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string      appName  string", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#return-type_33", 
            "text": "\\Model\\PushPublishStreamsAppConfig", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#authorization_33", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#http-request-headers_33", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#getsdpfilesappconfig", 
            "text": "\\Model\\SDPFilesAppConfig getSDPFilesAppConfig($serverName, $vhostName, $appName)   Retrieves the list of SDP Files for the specified Application  This API is available in builds 15089 or later.", 
            "title": "getSDPFilesAppConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#example_34", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | \n$appName =  appName_example ; // string | \n\ntry {\n    $result = $api_instance- getSDPFilesAppConfig($serverName, $vhostName, $appName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi- getSDPFilesAppConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#parameters_34", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string      appName  string", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#return-type_34", 
            "text": "\\Model\\SDPFilesAppConfig", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#authorization_34", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#http-request-headers_34", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#getsmilfileappconfig", 
            "text": "\\Model\\SMILFileAppConfig getSMILFileAppConfig($serverName, $vhostName, $smilfileName, $appName)   Retrieves the specified SMIL File configuration  This API is available in builds 15089 or later.", 
            "title": "getSMILFileAppConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#example_35", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | \n$smilfileName =  smilfileName_example ; // string | The SMIL file name without the extension\n$appName =  appName_example ; // string | \n\ntry {\n    $result = $api_instance- getSMILFileAppConfig($serverName, $vhostName, $smilfileName, $appName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi- getSMILFileAppConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#parameters_35", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string      smilfileName  string  The SMIL file name without the extension     appName  string", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#return-type_35", 
            "text": "\\Model\\SMILFileAppConfig", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#authorization_35", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#http-request-headers_35", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#getsmilfilesappconfig", 
            "text": "\\Model\\SMILFilesAppConfig getSMILFilesAppConfig($serverName, $vhostName, $appName)   Retrieves the list of SMIL Files for the specified Application  This API is available in builds 15089 or later.", 
            "title": "getSMILFilesAppConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#example_36", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | The name of the current VHost the action will be performed on\n$appName =  appName_example ; // string | The application name needed for this REST call\n\ntry {\n    $result = $api_instance- getSMILFilesAppConfig($serverName, $vhostName, $appName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi- getSMILFilesAppConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#parameters_36", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string  The name of the current VHost the action will be performed on     appName  string  The application name needed for this REST call", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#return-type_36", 
            "text": "\\Model\\SMILFilesAppConfig", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#authorization_36", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#http-request-headers_36", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#getsecurityconfig", 
            "text": "\\Model\\SecurityConfig getSecurityConfig($serverName, $vhostName, $appName)   Retrieves the Security configuration for the specified Application  This API is available in builds 15089 or later.", 
            "title": "getSecurityConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#example_37", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | \n$appName =  appName_example ; // string | \n\ntry {\n    $result = $api_instance- getSecurityConfig($serverName, $vhostName, $appName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi- getSecurityConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#parameters_37", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string      appName  string", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#return-type_37", 
            "text": "\\Model\\SecurityConfig", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#authorization_37", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#http-request-headers_37", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#getshorturlencoderconfig", 
            "text": "\\Model\\ShortUrlEncoderConfig getShortUrlEncoderConfig($serverName, $vhostName, $appName, $instanceName, $streamName)   Retrieves the Short URL for the LiveEncoder configuration for the specified IncomingStream  This API is available in builds 15089 or later.", 
            "title": "getShortUrlEncoderConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#example_38", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | \n$appName =  appName_example ; // string | \n$instanceName =  instanceName_example ; // string | \n$streamName =  streamName_example ; // string | \n\ntry {\n    $result = $api_instance- getShortUrlEncoderConfig($serverName, $vhostName, $appName, $instanceName, $streamName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi- getShortUrlEncoderConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#parameters_38", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string      appName  string      instanceName  string      streamName  string", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#return-type_38", 
            "text": "\\Model\\ShortUrlEncoderConfig", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#authorization_38", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#http-request-headers_38", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#getsourcecontrolconfig", 
            "text": "\\Model\\SourceControlConfig getSourceControlConfig($serverName, $vhostName, $appName, $instanceName, $streamName)   Gets information about the Source Control and it's supported features  This API is available in builds 15089 or later.", 
            "title": "getSourceControlConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#example_39", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | \n$appName =  appName_example ; // string | \n$instanceName =  instanceName_example ; // string | \n$streamName =  streamName_example ; // string | \n\ntry {\n    $result = $api_instance- getSourceControlConfig($serverName, $vhostName, $appName, $instanceName, $streamName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi- getSourceControlConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#parameters_39", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string      appName  string      instanceName  string      streamName  string", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#return-type_39", 
            "text": "\\Model\\SourceControlConfig", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#authorization_39", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#http-request-headers_39", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#getstreamconfigurationconfig", 
            "text": "\\Model\\StreamConfigurationConfig getStreamConfigurationConfig($serverName, $vhostName, $appName)   Retrieves the Stream configuration for the specified Application  This API is available in builds 15089 or later.", 
            "title": "getStreamConfigurationConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#example_40", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | \n$appName =  appName_example ; // string | \n\ntry {\n    $result = $api_instance- getStreamConfigurationConfig($serverName, $vhostName, $appName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi- getStreamConfigurationConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#parameters_40", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string      appName  string", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#return-type_40", 
            "text": "\\Model\\StreamConfigurationConfig", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#authorization_40", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#http-request-headers_40", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#getstreamfileappconfig", 
            "text": "\\Model\\StreamFileAppConfig getStreamFileAppConfig($serverName, $vhostName, $streamfileName, $appName)   Retrieves the specified Stream File configuration  This API is available in builds 15089 or later.", 
            "title": "getStreamFileAppConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#example_41", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | \n$streamfileName =  streamfileName_example ; // string | The stream file name without the extension\n$appName =  appName_example ; // string | \n\ntry {\n    $result = $api_instance- getStreamFileAppConfig($serverName, $vhostName, $streamfileName, $appName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi- getStreamFileAppConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#parameters_41", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string      streamfileName  string  The stream file name without the extension     appName  string", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#return-type_41", 
            "text": "\\Model\\StreamFileAppConfig", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#authorization_41", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#http-request-headers_41", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#getstreamfileappconfigadv", 
            "text": "\\Model\\StreamFileAppConfigAdv getStreamFileAppConfigAdv($serverName, $vhostName, $streamfileName, $appName)   Retrieves the Advanced Stream File configuration  This API is available in builds 15089 or later.", 
            "title": "getStreamFileAppConfigAdv"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#example_42", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | \n$streamfileName =  streamfileName_example ; // string | The stream file name without the .stream extension\n$appName =  appName_example ; // string | \n\ntry {\n    $result = $api_instance- getStreamFileAppConfigAdv($serverName, $vhostName, $streamfileName, $appName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi- getStreamFileAppConfigAdv: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#parameters_42", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string      streamfileName  string  The stream file name without the .stream extension     appName  string", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#return-type_42", 
            "text": "\\Model\\StreamFileAppConfigAdv", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#authorization_42", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#http-request-headers_42", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#getstreamfilesappconfig", 
            "text": "\\Model\\StreamFilesAppConfig getStreamFilesAppConfig($serverName, $vhostName, $appName)   Retrieves the list of Stream Files for the specified Application  This API is available in builds 15089 or later.", 
            "title": "getStreamFilesAppConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#example_43", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | \n$appName =  appName_example ; // string | \n\ntry {\n    $result = $api_instance- getStreamFilesAppConfig($serverName, $vhostName, $appName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi- getStreamFilesAppConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#parameters_43", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string      appName  string", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#return-type_43", 
            "text": "\\Model\\StreamFilesAppConfig", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#authorization_43", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#http-request-headers_43", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#getstreamgroupconfig", 
            "text": "\\Model\\StreamGroupConfig getStreamGroupConfig($serverName, $vhostName, $appName, $groupName, $instanceName)   Retrieves the specified StreamGroup configuration  This API is available in builds 15089 or later.", 
            "title": "getStreamGroupConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#example_44", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | \n$appName =  appName_example ; // string | \n$groupName =  groupName_example ; // string | \n$instanceName =  instanceName_example ; // string | \n\ntry {\n    $result = $api_instance- getStreamGroupConfig($serverName, $vhostName, $appName, $groupName, $instanceName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi- getStreamGroupConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#parameters_44", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string      appName  string      groupName  string      instanceName  string", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#return-type_44", 
            "text": "\\Model\\StreamGroupConfig", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#authorization_44", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#http-request-headers_44", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#getstreamgroupsconfig", 
            "text": "\\Model\\StreamGroupsConfig getStreamGroupsConfig($serverName, $vhostName, $appName, $instanceName)   Retrieves the list of Stream Groups for the specified Application Instance  This API is available in builds 15089 or later.", 
            "title": "getStreamGroupsConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#example_45", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | \n$appName =  appName_example ; // string | \n$instanceName =  instanceName_example ; // string | \n\ntry {\n    $result = $api_instance- getStreamGroupsConfig($serverName, $vhostName, $appName, $instanceName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi- getStreamGroupsConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#parameters_45", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string      appName  string      instanceName  string", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#return-type_45", 
            "text": "\\Model\\StreamGroupsConfig", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#authorization_45", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#http-request-headers_45", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#getstreamrecorderconfig", 
            "text": "\\Model\\StreamRecorderConfig getStreamRecorderConfig($serverName, $vhostName, $appName, $recorderName, $instanceName)   Retrieves the specifed Stream Recorder  This API is available in builds 15089 or later.", 
            "title": "getStreamRecorderConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#example_46", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | \n$appName =  appName_example ; // string | \n$recorderName =  recorderName_example ; // string | \n$instanceName =  instanceName_example ; // string | \n\ntry {\n    $result = $api_instance- getStreamRecorderConfig($serverName, $vhostName, $appName, $recorderName, $instanceName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi- getStreamRecorderConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#parameters_46", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string      appName  string      recorderName  string      instanceName  string", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#return-type_46", 
            "text": "\\Model\\StreamRecorderConfig", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#authorization_46", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#http-request-headers_46", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#getstreamrecordersconfig", 
            "text": "\\Model\\StreamRecordersConfig getStreamRecordersConfig($serverName, $vhostName, $appName, $instanceName)   Retrieves the list of Stream Recorders for the specified Application Instance  This API is available in builds 15089 or later.", 
            "title": "getStreamRecordersConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#example_47", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | \n$appName =  appName_example ; // string | \n$instanceName =  instanceName_example ; // string | \n\ntry {\n    $result = $api_instance- getStreamRecordersConfig($serverName, $vhostName, $appName, $instanceName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi- getStreamRecordersConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#parameters_47", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string      appName  string      instanceName  string", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#return-type_47", 
            "text": "\\Model\\StreamRecordersConfig", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#authorization_47", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#http-request-headers_47", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#gettranscoderappconfig", 
            "text": "\\Model\\TranscoderAppConfig getTranscoderAppConfig($serverName, $vhostName, $appName)   Retrieves the Transcoder configuration for the specified Application  This API is available in builds 15089 or later.", 
            "title": "getTranscoderAppConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#example_48", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | \n$appName =  appName_example ; // string | \n\ntry {\n    $result = $api_instance- getTranscoderAppConfig($serverName, $vhostName, $appName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi- getTranscoderAppConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#parameters_48", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string      appName  string", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#return-type_48", 
            "text": "\\Model\\TranscoderAppConfig", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#authorization_48", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#http-request-headers_48", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#gettranscoderappconfigadv", 
            "text": "\\Model\\TranscoderAppConfigAdv getTranscoderAppConfigAdv($serverName, $vhostName, $appName)   Retrieves the Advanced Transcoder configuration for the specified Application  This API is available in builds 15089 or later.", 
            "title": "getTranscoderAppConfigAdv"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#example_49", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | \n$appName =  appName_example ; // string | \n\ntry {\n    $result = $api_instance- getTranscoderAppConfigAdv($serverName, $vhostName, $appName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi- getTranscoderAppConfigAdv: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#parameters_49", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string      appName  string", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#return-type_49", 
            "text": "\\Model\\TranscoderAppConfigAdv", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#authorization_49", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#http-request-headers_49", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#gettranscoderencodeappconfig", 
            "text": "\\Model\\TranscoderEncodeAppConfig getTranscoderEncodeAppConfig($serverName, $vhostName, $templateName, $encodeName, $appName)   Retrieves the specified Trancoder Encode configuration  This API is available in builds 15089 or later.", 
            "title": "getTranscoderEncodeAppConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#example_50", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | \n$templateName =  templateName_example ; // string | \n$encodeName =  encodeName_example ; // string | \n$appName =  appName_example ; // string | \n\ntry {\n    $result = $api_instance- getTranscoderEncodeAppConfig($serverName, $vhostName, $templateName, $encodeName, $appName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi- getTranscoderEncodeAppConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#parameters_50", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string      templateName  string      encodeName  string      appName  string", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#return-type_50", 
            "text": "\\Model\\TranscoderEncodeAppConfig", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#authorization_50", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#http-request-headers_50", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#gettranscoderencodeappconfigadv", 
            "text": "\\Model\\TranscoderEncodeAppConfigAdv getTranscoderEncodeAppConfigAdv($serverName, $vhostName, $templateName, $encodeName, $appName)   Retrieves the Advanced Transcoder Encode configuration  This API is available in builds 15089 or later.", 
            "title": "getTranscoderEncodeAppConfigAdv"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#example_51", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | \n$templateName =  templateName_example ; // string | \n$encodeName =  encodeName_example ; // string | \n$appName =  appName_example ; // string | \n\ntry {\n    $result = $api_instance- getTranscoderEncodeAppConfigAdv($serverName, $vhostName, $templateName, $encodeName, $appName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi- getTranscoderEncodeAppConfigAdv: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#parameters_51", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string      templateName  string      encodeName  string      appName  string", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#return-type_51", 
            "text": "\\Model\\TranscoderEncodeAppConfigAdv", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#authorization_51", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#http-request-headers_51", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#gettranscoderencodesappconfig", 
            "text": "\\Model\\TranscoderEncodesAppConfig getTranscoderEncodesAppConfig($serverName, $vhostName, $templateName, $appName)   Retrieves the list of Transcoder Encode Configurations for the specified Application  This API is available in builds 15089 or later.", 
            "title": "getTranscoderEncodesAppConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#example_52", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | \n$templateName =  templateName_example ; // string | \n$appName =  appName_example ; // string | \n\ntry {\n    $result = $api_instance- getTranscoderEncodesAppConfig($serverName, $vhostName, $templateName, $appName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi- getTranscoderEncodesAppConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#parameters_52", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string      templateName  string      appName  string", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#return-type_52", 
            "text": "\\Model\\TranscoderEncodesAppConfig", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#authorization_52", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#http-request-headers_52", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#gettranscoderoverlaydecodeappconfig", 
            "text": "\\Model\\TranscoderOverlayDecodeAppConfig getTranscoderOverlayDecodeAppConfig($serverName, $vhostName, $templateName, $overlayName, $appName)   Retrieves the specified Trancoder Overlay Decode configuration  This API is available in builds 15089 or later.", 
            "title": "getTranscoderOverlayDecodeAppConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#example_53", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | \n$templateName =  templateName_example ; // string | \n$overlayName =  overlayName_example ; // string | \n$appName =  appName_example ; // string | \n\ntry {\n    $result = $api_instance- getTranscoderOverlayDecodeAppConfig($serverName, $vhostName, $templateName, $overlayName, $appName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi- getTranscoderOverlayDecodeAppConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#parameters_53", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string      templateName  string      overlayName  string      appName  string", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#return-type_53", 
            "text": "\\Model\\TranscoderOverlayDecodeAppConfig", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#authorization_53", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#http-request-headers_53", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#gettranscoderoverlayencodeappconfig", 
            "text": "\\Model\\TranscoderOverlayEncodeAppConfig getTranscoderOverlayEncodeAppConfig($serverName, $vhostName, $templateName, $overlayName, $encodeName, $appName)   Retrieves the specified Trancoder Overlay Encode configuration  This API is available in builds 15089 or later.", 
            "title": "getTranscoderOverlayEncodeAppConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#example_54", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | \n$templateName =  templateName_example ; // string | \n$overlayName =  overlayName_example ; // string | \n$encodeName =  encodeName_example ; // string | \n$appName =  appName_example ; // string | \n\ntry {\n    $result = $api_instance- getTranscoderOverlayEncodeAppConfig($serverName, $vhostName, $templateName, $overlayName, $encodeName, $appName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi- getTranscoderOverlayEncodeAppConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#parameters_54", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string      templateName  string      overlayName  string      encodeName  string      appName  string", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#return-type_54", 
            "text": "\\Model\\TranscoderOverlayEncodeAppConfig", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#authorization_54", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#http-request-headers_54", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#gettranscoderstreamnamegroupappconfig", 
            "text": "\\Model\\TranscoderStreamNameGroupAppConfig getTranscoderStreamNameGroupAppConfig($serverName, $vhostName, $templateName, $groupName, $appName)   Retrieves the specified Trancoder StreamNameGroup configuration  This API is available in builds 15089 or later.", 
            "title": "getTranscoderStreamNameGroupAppConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#example_55", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | \n$templateName =  templateName_example ; // string | \n$groupName =  groupName_example ; // string | \n$appName =  appName_example ; // string | \n\ntry {\n    $result = $api_instance- getTranscoderStreamNameGroupAppConfig($serverName, $vhostName, $templateName, $groupName, $appName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi- getTranscoderStreamNameGroupAppConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#parameters_55", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string      templateName  string      groupName  string      appName  string", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#return-type_55", 
            "text": "\\Model\\TranscoderStreamNameGroupAppConfig", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#authorization_55", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#http-request-headers_55", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#gettranscoderstreamnamegroupsappconfig", 
            "text": "\\Model\\TranscoderStreamNameGroupsAppConfig getTranscoderStreamNameGroupsAppConfig($serverName, $vhostName, $templateName, $appName)   Retrieves the list of Transcoder Stream Name Groups for the specified Template  This API is available in builds 15089 or later.", 
            "title": "getTranscoderStreamNameGroupsAppConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#example_56", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | \n$templateName =  templateName_example ; // string | \n$appName =  appName_example ; // string | \n\ntry {\n    $result = $api_instance- getTranscoderStreamNameGroupsAppConfig($serverName, $vhostName, $templateName, $appName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi- getTranscoderStreamNameGroupsAppConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#parameters_56", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string      templateName  string      appName  string", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#return-type_56", 
            "text": "\\Model\\TranscoderStreamNameGroupsAppConfig", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#authorization_56", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#http-request-headers_56", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#gettranscodertemplateappconfig", 
            "text": "\\Model\\TranscoderTemplateAppConfig getTranscoderTemplateAppConfig($serverName, $vhostName, $templateName, $appName)   Retrieves the specified Trancoder Template configuration  This API is available in builds 15089 or later.", 
            "title": "getTranscoderTemplateAppConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#example_57", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | \n$templateName =  templateName_example ; // string | \n$appName =  appName_example ; // string | \n\ntry {\n    $result = $api_instance- getTranscoderTemplateAppConfig($serverName, $vhostName, $templateName, $appName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi- getTranscoderTemplateAppConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#parameters_57", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string      templateName  string      appName  string", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#return-type_57", 
            "text": "\\Model\\TranscoderTemplateAppConfig", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#authorization_57", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#http-request-headers_57", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#gettranscodertemplateappconfigadv", 
            "text": "\\Model\\TranscoderTemplateAppConfigAdv getTranscoderTemplateAppConfigAdv($serverName, $vhostName, $templateName, $appName)   Retrieves the Advanced Transcoder Template configuration  This API is available in builds 15089 or later.", 
            "title": "getTranscoderTemplateAppConfigAdv"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#example_58", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | \n$templateName =  templateName_example ; // string | \n$appName =  appName_example ; // string | \n\ntry {\n    $result = $api_instance- getTranscoderTemplateAppConfigAdv($serverName, $vhostName, $templateName, $appName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi- getTranscoderTemplateAppConfigAdv: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#parameters_58", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string      templateName  string      appName  string", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#return-type_58", 
            "text": "\\Model\\TranscoderTemplateAppConfigAdv", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#authorization_58", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#http-request-headers_58", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#gettranscodertemplatesappconfig", 
            "text": "\\Model\\TranscoderTemplatesAppConfig getTranscoderTemplatesAppConfig($serverName, $vhostName, $appName)   Retrieves the list of Transcoder Template Configurations for the specified Application  This API is available in builds 15089 or later.", 
            "title": "getTranscoderTemplatesAppConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#example_59", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | The name of the current VHost the action will be performed on\n$appName =  appName_example ; // string | \n\ntry {\n    $result = $api_instance- getTranscoderTemplatesAppConfig($serverName, $vhostName, $appName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi- getTranscoderTemplatesAppConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#parameters_59", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string  The name of the current VHost the action will be performed on     appName  string", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#return-type_59", 
            "text": "\\Model\\TranscoderTemplatesAppConfig", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#authorization_59", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#http-request-headers_59", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#getverimatrixstreammapsconfig", 
            "text": "\\Model\\VerimatrixStreamMapsConfig getVerimatrixStreamMapsConfig($serverName, $vhostName, $appName)   Retrieves the Verimatrix stream mapfile for the specified Application  This API is available in builds 15089 or later.", 
            "title": "getVerimatrixStreamMapsConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#example_60", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | \n$appName =  appName_example ; // string | \n\ntry {\n    $result = $api_instance- getVerimatrixStreamMapsConfig($serverName, $vhostName, $appName);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi- getVerimatrixStreamMapsConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#parameters_60", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string      appName  string", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#return-type_60", 
            "text": "\\Model\\VerimatrixStreamMapsConfig", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#authorization_60", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#http-request-headers_60", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#postapplicationconfig", 
            "text": "postApplicationConfig($serverName, $vhostName, $appName, $body)   Adds the specified Application configuration  This API is available in builds 15089 or later.", 
            "title": "postApplicationConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#example_61", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | \n$appName =  appName_example ; // string | \n$body = new \\Model\\ApplicationConfig(); // \\Model\\ApplicationConfig | \n\ntry {\n    $api_instance- postApplicationConfig($serverName, $vhostName, $appName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi- postApplicationConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#parameters_61", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string      appName  string      body  \\Model\\ApplicationConfig", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#return-type_61", 
            "text": "void (empty response body)", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#authorization_61", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#http-request-headers_61", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#postapplicationconfigadv", 
            "text": "postApplicationConfigAdv($serverName, $vhostName, $appName, $body)   Adds the specified advanced Application configuration  This API is available in builds 15089 or later.", 
            "title": "postApplicationConfigAdv"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#example_62", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | \n$appName =  appName_example ; // string | \n$body = new \\Model\\ApplicationConfigAdv(); // \\Model\\ApplicationConfigAdv | \n\ntry {\n    $api_instance- postApplicationConfigAdv($serverName, $vhostName, $appName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi- postApplicationConfigAdv: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#parameters_62", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string      appName  string      body  \\Model\\ApplicationConfigAdv", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#return-type_62", 
            "text": "void (empty response body)", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#authorization_62", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#http-request-headers_62", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#postapplicationsconfig", 
            "text": "postApplicationsConfig($serverName, $vhostName, $body)   Adds an Application to the list of Applications  for the specifed vhost  This API is available in builds 15089 or later.", 
            "title": "postApplicationsConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#example_63", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | \n$body = new \\Model\\ApplicationConfig(); // \\Model\\ApplicationConfig | \n\ntry {\n    $api_instance- postApplicationsConfig($serverName, $vhostName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi- postApplicationsConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#parameters_63", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string      body  \\Model\\ApplicationConfig", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#return-type_63", 
            "text": "void (empty response body)", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#authorization_63", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#http-request-headers_63", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#postpublisherappconfig", 
            "text": "postPublisherAppConfig($serverName, $vhostName, $publisherName, $appName, $body)   Adds the specified Publisher configuration  This API is available in builds 15089 or later.", 
            "title": "postPublisherAppConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#example_64", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | The vhost name\n$publisherName =  publisherName_example ; // string | The publisher name\n$appName =  appName_example ; // string | \n$body = new \\Model\\PublisherAppConfig(); // \\Model\\PublisherAppConfig | \n\ntry {\n    $api_instance- postPublisherAppConfig($serverName, $vhostName, $publisherName, $appName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi- postPublisherAppConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#parameters_64", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string  The vhost name     publisherName  string  The publisher name     appName  string      body  \\Model\\PublisherAppConfig", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#return-type_64", 
            "text": "void (empty response body)", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#authorization_64", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#http-request-headers_64", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#postpublishersappconfig", 
            "text": "postPublishersAppConfig($serverName, $vhostName, $appName, $body)   Add a Publisher to list of Publishers for the specified Application  This API is available in builds 15089 or later.", 
            "title": "postPublishersAppConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#example_65", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | The vhost name\n$appName =  appName_example ; // string | \n$body = new \\Model\\PublisherAppConfig(); // \\Model\\PublisherAppConfig | \n\ntry {\n    $api_instance- postPublishersAppConfig($serverName, $vhostName, $appName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi- postPublishersAppConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#parameters_65", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string  The vhost name     appName  string      body  \\Model\\PublisherAppConfig", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#return-type_65", 
            "text": "void (empty response body)", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#authorization_65", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#http-request-headers_65", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#postpushpublishstreamappconfig", 
            "text": "postPushPublishStreamAppConfig($serverName, $vhostName, $appName, $entryName, $body)   Adds the specified PushPublish map entry configuration  This API is available in builds 15089 or later.", 
            "title": "postPushPublishStreamAppConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#example_66", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | \n$appName =  appName_example ; // string | \n$entryName =  entryName_example ; // string | The entry name needed for this REST call\n$body = new \\Model\\PushPublishStreamAppConfig(); // \\Model\\PushPublishStreamAppConfig | \n\ntry {\n    $api_instance- postPushPublishStreamAppConfig($serverName, $vhostName, $appName, $entryName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi- postPushPublishStreamAppConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#parameters_66", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string      appName  string      entryName  string  The entry name needed for this REST call     body  \\Model\\PushPublishStreamAppConfig", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#return-type_66", 
            "text": "void (empty response body)", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#authorization_66", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#http-request-headers_66", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#postpushpublishstreamsappconfig", 
            "text": "postPushPublishStreamsAppConfig($serverName, $vhostName, $appName, $body)   Adds a PushPublish Stream to list of PushPublish Streams for the specified Application  This API is available in builds 15089 or later.", 
            "title": "postPushPublishStreamsAppConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#example_67", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | \n$appName =  appName_example ; // string | \n$body = new \\Model\\PushPublishStreamAppConfig(); // \\Model\\PushPublishStreamAppConfig | \n\ntry {\n    $api_instance- postPushPublishStreamsAppConfig($serverName, $vhostName, $appName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi- postPushPublishStreamsAppConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#parameters_67", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string      appName  string      body  \\Model\\PushPublishStreamAppConfig", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#return-type_67", 
            "text": "void (empty response body)", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#authorization_67", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#http-request-headers_67", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#postsmilfileappconfig", 
            "text": "postSMILFileAppConfig($serverName, $vhostName, $smilfileName, $appName, $body)   Adds the specified SMIL File configuration  This API is available in builds 15089 or later.", 
            "title": "postSMILFileAppConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#example_68", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | \n$smilfileName =  smilfileName_example ; // string | The SMIL file name without the extension\n$appName =  appName_example ; // string | \n$body = new \\Model\\SMILFileAppConfig(); // \\Model\\SMILFileAppConfig | \n\ntry {\n    $api_instance- postSMILFileAppConfig($serverName, $vhostName, $smilfileName, $appName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi- postSMILFileAppConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#parameters_68", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string      smilfileName  string  The SMIL file name without the extension     appName  string      body  \\Model\\SMILFileAppConfig", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#return-type_68", 
            "text": "void (empty response body)", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#authorization_68", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#http-request-headers_68", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#postsmilfilesappconfig", 
            "text": "postSMILFilesAppConfig($serverName, $vhostName, $appName, $body)   Adds a SMIL File to the list of SMIL Files for the specified Application  This API is available in builds 15089 or later.", 
            "title": "postSMILFilesAppConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#example_69", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | The name of the current VHost the action will be performed on\n$appName =  appName_example ; // string | The application name needed for this REST call\n$body = new \\Model\\SMILFileAppConfig(); // \\Model\\SMILFileAppConfig | \n\ntry {\n    $api_instance- postSMILFilesAppConfig($serverName, $vhostName, $appName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi- postSMILFilesAppConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#parameters_69", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string  The name of the current VHost the action will be performed on     appName  string  The application name needed for this REST call     body  \\Model\\SMILFileAppConfig", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#return-type_69", 
            "text": "void (empty response body)", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#authorization_69", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#http-request-headers_69", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#poststreamfileappconfig", 
            "text": "postStreamFileAppConfig($serverName, $vhostName, $streamfileName, $appName, $body)   Adds the specified Stream File configuration  This API is available in builds 15089 or later.", 
            "title": "postStreamFileAppConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#example_70", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | \n$streamfileName =  streamfileName_example ; // string | The stream file name without the extension\n$appName =  appName_example ; // string | \n$body = new \\Model\\StreamFileAppConfig(); // \\Model\\StreamFileAppConfig | \n\ntry {\n    $api_instance- postStreamFileAppConfig($serverName, $vhostName, $streamfileName, $appName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi- postStreamFileAppConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#parameters_70", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string      streamfileName  string  The stream file name without the extension     appName  string      body  \\Model\\StreamFileAppConfig", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#return-type_70", 
            "text": "void (empty response body)", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#authorization_70", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#http-request-headers_70", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#poststreamfilesappconfig", 
            "text": "postStreamFilesAppConfig($serverName, $vhostName, $appName, $body)   Adds a Stream File to the list of Stream Files for the specified Application  This API is available in builds 15089 or later.", 
            "title": "postStreamFilesAppConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#example_71", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | \n$appName =  appName_example ; // string | \n$body = new \\Model\\StreamFileAppConfig(); // \\Model\\StreamFileAppConfig | \n\ntry {\n    $api_instance- postStreamFilesAppConfig($serverName, $vhostName, $appName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi- postStreamFilesAppConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#parameters_71", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string      appName  string      body  \\Model\\StreamFileAppConfig", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#return-type_71", 
            "text": "void (empty response body)", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#authorization_71", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#http-request-headers_71", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#poststreamrecorderconfig", 
            "text": "postStreamRecorderConfig($serverName, $vhostName, $appName, $recorderName, $instanceName, $body)   Creates a new Stream Recorder and starts recording  This API is available in builds 15089 or later.", 
            "title": "postStreamRecorderConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#example_72", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | \n$appName =  appName_example ; // string | \n$recorderName =  recorderName_example ; // string | \n$instanceName =  instanceName_example ; // string | \n$body = new \\Model\\StreamRecorderConfig(); // \\Model\\StreamRecorderConfig | \n\ntry {\n    $api_instance- postStreamRecorderConfig($serverName, $vhostName, $appName, $recorderName, $instanceName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi- postStreamRecorderConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#parameters_72", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string      appName  string      recorderName  string      instanceName  string      body  \\Model\\StreamRecorderConfig", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#return-type_72", 
            "text": "void (empty response body)", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#authorization_72", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#http-request-headers_72", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#poststreamrecordersconfig", 
            "text": "postStreamRecordersConfig($serverName, $vhostName, $appName, $instanceName, $body)   Creates a new Stream Recorder in the specified Application Instance and starts recording  This API is available in builds 15089 or later.", 
            "title": "postStreamRecordersConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#example_73", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | \n$appName =  appName_example ; // string | \n$instanceName =  instanceName_example ; // string | \n$body = new \\Model\\StreamRecorderConfig(); // \\Model\\StreamRecorderConfig | \n\ntry {\n    $api_instance- postStreamRecordersConfig($serverName, $vhostName, $appName, $instanceName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi- postStreamRecordersConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#parameters_73", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string      appName  string      instanceName  string      body  \\Model\\StreamRecorderConfig", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#return-type_73", 
            "text": "void (empty response body)", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#authorization_73", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#http-request-headers_73", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#posttranscoderencodeappconfig", 
            "text": "postTranscoderEncodeAppConfig($serverName, $vhostName, $templateName, $encodeName, $appName, $body)   Adds the specified Trancoder Encode configuration  This API is available in builds 15089 or later.", 
            "title": "postTranscoderEncodeAppConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#example_74", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | \n$templateName =  templateName_example ; // string | \n$encodeName =  encodeName_example ; // string | \n$appName =  appName_example ; // string | \n$body = new \\Model\\TranscoderEncodeAppConfig(); // \\Model\\TranscoderEncodeAppConfig | \n\ntry {\n    $api_instance- postTranscoderEncodeAppConfig($serverName, $vhostName, $templateName, $encodeName, $appName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi- postTranscoderEncodeAppConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#parameters_74", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string      templateName  string      encodeName  string      appName  string      body  \\Model\\TranscoderEncodeAppConfig", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#return-type_74", 
            "text": "void (empty response body)", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#authorization_74", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#http-request-headers_74", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#posttranscoderencodesappconfig", 
            "text": "postTranscoderEncodesAppConfig($serverName, $vhostName, $templateName, $appName, $body)   Adds a Transcoder Encode Configuration to the specified Application  This API is available in builds 15089 or later.", 
            "title": "postTranscoderEncodesAppConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#example_75", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | \n$templateName =  templateName_example ; // string | \n$appName =  appName_example ; // string | \n$body = new \\Model\\TranscoderEncodeAppConfig(); // \\Model\\TranscoderEncodeAppConfig | \n\ntry {\n    $api_instance- postTranscoderEncodesAppConfig($serverName, $vhostName, $templateName, $appName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi- postTranscoderEncodesAppConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#parameters_75", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string      templateName  string      appName  string      body  \\Model\\TranscoderEncodeAppConfig", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#return-type_75", 
            "text": "void (empty response body)", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#authorization_75", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#http-request-headers_75", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#posttranscoderstreamnamegroupappconfig", 
            "text": "postTranscoderStreamNameGroupAppConfig($serverName, $vhostName, $templateName, $groupName, $appName, $body)   Adds the specified Trancoder StreamNameGroup configuration  This API is available in builds 15089 or later.", 
            "title": "postTranscoderStreamNameGroupAppConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#example_76", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | \n$templateName =  templateName_example ; // string | \n$groupName =  groupName_example ; // string | \n$appName =  appName_example ; // string | \n$body = new \\Model\\TranscoderStreamNameGroupAppConfig(); // \\Model\\TranscoderStreamNameGroupAppConfig | \n\ntry {\n    $api_instance- postTranscoderStreamNameGroupAppConfig($serverName, $vhostName, $templateName, $groupName, $appName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi- postTranscoderStreamNameGroupAppConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#parameters_76", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string      templateName  string      groupName  string      appName  string      body  \\Model\\TranscoderStreamNameGroupAppConfig", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#return-type_76", 
            "text": "void (empty response body)", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#authorization_76", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#http-request-headers_76", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#posttranscoderstreamnamegroupsappconfig", 
            "text": "postTranscoderStreamNameGroupsAppConfig($serverName, $vhostName, $templateName, $appName, $body)   Adds a Transcoder Stream Name Groups Configuration to the specified Template  This API is available in builds 15089 or later.", 
            "title": "postTranscoderStreamNameGroupsAppConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#example_77", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | \n$templateName =  templateName_example ; // string | \n$appName =  appName_example ; // string | \n$body = new \\Model\\TranscoderStreamNameGroupAppConfig(); // \\Model\\TranscoderStreamNameGroupAppConfig | \n\ntry {\n    $api_instance- postTranscoderStreamNameGroupsAppConfig($serverName, $vhostName, $templateName, $appName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi- postTranscoderStreamNameGroupsAppConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#parameters_77", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string      templateName  string      appName  string      body  \\Model\\TranscoderStreamNameGroupAppConfig", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#return-type_77", 
            "text": "void (empty response body)", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#authorization_77", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#http-request-headers_77", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#posttranscodertemplateappconfig", 
            "text": "postTranscoderTemplateAppConfig($serverName, $vhostName, $templateName, $appName, $body)   Adds the specified Trancoder Template configuration  This API is available in builds 15089 or later.", 
            "title": "postTranscoderTemplateAppConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#example_78", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | \n$templateName =  templateName_example ; // string | \n$appName =  appName_example ; // string | \n$body = new \\Model\\TranscoderTemplateAppConfig(); // \\Model\\TranscoderTemplateAppConfig | \n\ntry {\n    $api_instance- postTranscoderTemplateAppConfig($serverName, $vhostName, $templateName, $appName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi- postTranscoderTemplateAppConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#parameters_78", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string      templateName  string      appName  string      body  \\Model\\TranscoderTemplateAppConfig", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#return-type_78", 
            "text": "void (empty response body)", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#authorization_78", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#http-request-headers_78", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#posttranscodertemplatesappconfig", 
            "text": "postTranscoderTemplatesAppConfig($serverName, $vhostName, $appName, $body)   Adds a Transcoder Templates Configuration to the specified Application  This API is available in builds 15089 or later.", 
            "title": "postTranscoderTemplatesAppConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#example_79", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | The name of the current VHost the action will be performed on\n$appName =  appName_example ; // string | \n$body = new \\Model\\TranscoderTemplateAppConfig(); // \\Model\\TranscoderTemplateAppConfig | \n\ntry {\n    $api_instance- postTranscoderTemplatesAppConfig($serverName, $vhostName, $appName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi- postTranscoderTemplatesAppConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#parameters_79", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string  The name of the current VHost the action will be performed on     appName  string      body  \\Model\\TranscoderTemplateAppConfig", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#return-type_79", 
            "text": "void (empty response body)", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#authorization_79", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#http-request-headers_79", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#putapplicationaction", 
            "text": "putApplicationAction($serverName, $action, $vhostName, $appName, $dstEntryName)   This API is available in builds 15089 or later.", 
            "title": "putApplicationAction"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#example_80", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$action =  action_example ; // string | The action which should be performed by the server\n$vhostName =  vhostName_example ; // string | The name of the current VHost the action will be performed on\n$appName =  appName_example ; // string | The application name needed for this REST call\n$dstEntryName =  dstEntryName_example ; // string | The destination application name when copying\n\ntry {\n    $api_instance- putApplicationAction($serverName, $action, $vhostName, $appName, $dstEntryName);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi- putApplicationAction: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#parameters_80", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     action  string  The action which should be performed by the server     vhostName  string  The name of the current VHost the action will be performed on     appName  string  The application name needed for this REST call     dstEntryName  string  The destination application name when copying  [optional]", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#return-type_80", 
            "text": "void (empty response body)", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#authorization_80", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#http-request-headers_80", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#putapplicationconfig", 
            "text": "putApplicationConfig($serverName, $vhostName, $appName, $body)   Updates the specified Application configuration  This API is available in builds 15089 or later.", 
            "title": "putApplicationConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#example_81", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | \n$appName =  appName_example ; // string | \n$body = new \\Model\\ApplicationConfig(); // \\Model\\ApplicationConfig | \n\ntry {\n    $api_instance- putApplicationConfig($serverName, $vhostName, $appName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi- putApplicationConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#parameters_81", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string      appName  string      body  \\Model\\ApplicationConfig", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#return-type_81", 
            "text": "void (empty response body)", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#authorization_81", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#http-request-headers_81", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#putapplicationconfigadv", 
            "text": "putApplicationConfigAdv($serverName, $vhostName, $appName, $body)   Updates the specified advanced Application configuration  This API is available in builds 15089 or later.", 
            "title": "putApplicationConfigAdv"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#example_82", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | \n$appName =  appName_example ; // string | \n$body = new \\Model\\ApplicationConfigAdv(); // \\Model\\ApplicationConfigAdv | \n\ntry {\n    $api_instance- putApplicationConfigAdv($serverName, $vhostName, $appName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi- putApplicationConfigAdv: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#parameters_82", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string      appName  string      body  \\Model\\ApplicationConfigAdv", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#return-type_82", 
            "text": "void (empty response body)", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#authorization_82", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#http-request-headers_82", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#putbuydrmstreammapsconfig", 
            "text": "putBuyDRMStreamMapsConfig($serverName, $vhostName, $appName, $body)   Updates the BuyDRM stream mapfile for the specified Application  This API is available in builds 15089 or later.", 
            "title": "putBuyDRMStreamMapsConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#example_83", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | \n$appName =  appName_example ; // string | \n$body = new \\Model\\BuyDRMStreamMapsConfig(); // \\Model\\BuyDRMStreamMapsConfig | \n\ntry {\n    $api_instance- putBuyDRMStreamMapsConfig($serverName, $vhostName, $appName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi- putBuyDRMStreamMapsConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#parameters_83", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string      appName  string      body  \\Model\\BuyDRMStreamMapsConfig", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#return-type_83", 
            "text": "void (empty response body)", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#authorization_83", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#http-request-headers_83", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#putdrmconfig", 
            "text": "putDRMConfig($serverName, $vhostName, $appName, $body)   Updates the DRM configuration for the specified Application  This API is available in builds 15089 or later.", 
            "title": "putDRMConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#example_84", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | \n$appName =  appName_example ; // string | \n$body = new \\Model\\DRMConfig(); // \\Model\\DRMConfig | \n\ntry {\n    $api_instance- putDRMConfig($serverName, $vhostName, $appName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi- putDRMConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#parameters_84", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string      appName  string      body  \\Model\\DRMConfig", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#return-type_84", 
            "text": "void (empty response body)", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#authorization_84", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#http-request-headers_84", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#putdrmconfigadv", 
            "text": "putDRMConfigAdv($serverName, $vhostName, $appName, $body)   Updates the advanced DRM configuration for the specified Application  This API is available in builds 15089 or later.", 
            "title": "putDRMConfigAdv"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#example_85", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | \n$appName =  appName_example ; // string | \n$body = new \\Model\\DRMConfigAdv(); // \\Model\\DRMConfigAdv | \n\ntry {\n    $api_instance- putDRMConfigAdv($serverName, $vhostName, $appName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi- putDRMConfigAdv: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#parameters_85", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string      appName  string      body  \\Model\\DRMConfigAdv", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#return-type_85", 
            "text": "void (empty response body)", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#authorization_85", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#http-request-headers_85", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#putdvrconfig", 
            "text": "putDVRConfig($serverName, $vhostName, $appName, $body)   Updates the DVR configuration for the specified Application  This API is available in builds 15089 or later.", 
            "title": "putDVRConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#example_86", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | \n$appName =  appName_example ; // string | \n$body = new \\Model\\DVRConfig(); // \\Model\\DVRConfig | \n\ntry {\n    $api_instance- putDVRConfig($serverName, $vhostName, $appName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi- putDVRConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#parameters_86", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string      appName  string      body  \\Model\\DVRConfig", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#return-type_86", 
            "text": "void (empty response body)", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#authorization_86", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#http-request-headers_86", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#putdvrconfigadv", 
            "text": "putDVRConfigAdv($serverName, $vhostName, $appName, $body)   Updates the advanced DVR configuration for the specified Application  This API is available in builds 15089 or later.", 
            "title": "putDVRConfigAdv"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#example_87", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | \n$appName =  appName_example ; // string | \n$body = new \\Model\\DVRConfigAdv(); // \\Model\\DVRConfigAdv | \n\ntry {\n    $api_instance- putDVRConfigAdv($serverName, $vhostName, $appName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi- putDVRConfigAdv: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#parameters_87", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string      appName  string      body  \\Model\\DVRConfigAdv", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#return-type_87", 
            "text": "void (empty response body)", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#authorization_87", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#http-request-headers_87", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#putdvrrestconverterstoreaction", 
            "text": "putDvrRESTConverterStoreAction($serverName, $action, $vhostName, $appName, $instanceName, $dvrStoreName)   This API is available in builds 15942 or later.", 
            "title": "putDvrRESTConverterStoreAction"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#example_88", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$action =  action_example ; // string | The action which should be performed by the server\n$vhostName =  vhostName_example ; // string | The name of the current VHost the action will be performed on\n$appName =  appName_example ; // string | The application name needed for this REST call\n$instanceName =  instanceName_example ; // string | The application instance name needed for this REST call\n$dvrStoreName =  dvrStoreName_example ; // string | The nDVR store name needed for this REST call\n\ntry {\n    $api_instance- putDvrRESTConverterStoreAction($serverName, $action, $vhostName, $appName, $instanceName, $dvrStoreName);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi- putDvrRESTConverterStoreAction: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#parameters_88", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     action  string  The action which should be performed by the server     vhostName  string  The name of the current VHost the action will be performed on     appName  string  The application name needed for this REST call     instanceName  string  The application instance name needed for this REST call     dvrStoreName  string  The nDVR store name needed for this REST call", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#return-type_88", 
            "text": "void (empty response body)", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#authorization_88", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#http-request-headers_88", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#putdvrrestconverterstoresaction", 
            "text": "putDvrRESTConverterStoresAction($serverName, $action, $vhostName, $appName, $instanceName, $dvrConverterDefaultFileDestination, $dvrConverterDebugConversions, $dvrConverterContinueOnSourceErrors, $dvrConverterAudioVideoSyncEnable, $dvrConverterAudioVideoMaxOffset, $dvrConverterAudioVideoMaxBuffer, $dvrConverterStartTime, $dvrConverterEndTime, $dvrConverterDuration, $dvrConverterOutputFilename)   This API is available in builds 15942 or later.", 
            "title": "putDvrRESTConverterStoresAction"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#example_89", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$action =  action_example ; // string | The action which should be performed by the server\n$vhostName =  vhostName_example ; // string | The name of the current VHost the action will be performed on\n$appName =  appName_example ; // string | The application name needed for this REST call\n$instanceName =  instanceName_example ; // string | The application instance name needed for this REST call\n$dvrConverterDefaultFileDestination =  dvrConverterDefaultFileDestination_example ; // string | The file location to use when converting a nDVR store, the default is configured as the StorageDir in the application in use\n$dvrConverterDebugConversions =  dvrConverterDebugConversions_example ; // string | Indicates if the conversion should have debugging enabled, can be true or false, default is false\n$dvrConverterContinueOnSourceErrors =  dvrConverterContinueOnSourceErrors_example ; // string | Indicates if the conversion should continue even if errors are detected, can be true or false, default is true\n$dvrConverterAudioVideoSyncEnable =  dvrConverterAudioVideoSyncEnable_example ; // string | Indicates if the audio/video offset should be detected and conversion only started after the sync in no longer detected or over default allowable time. Can be true or false, default is false\n$dvrConverterAudioVideoMaxOffset =  200 ; // string | Indicates the maximum audio/video timecodes can be out of sync\n$dvrConverterAudioVideoMaxBuffer =  8000 ; // string | Indicates the maximum time a correct audio/video sync will be searched for before giving up\n$dvrConverterStartTime =  dvrConverterStartTime_example ; // string | A start time in UTC from where the conversion should start in the store, default is the first entry in the store\n$dvrConverterEndTime =  dvrConverterEndTime_example ; // string | A end time in UTC  where the conversion should end in the store, default is to the end of the store\n$dvrConverterDuration =  dvrConverterDuration_example ; // string | A duration for the conversion either added to the start or subtracted from the end time, if you use duration you can not use start and end\n$dvrConverterOutputFilename =  dvrConverterOutputFilename_example ; // string | Indicates the output filename if not using the default, which is the name of the store being converted\n\ntry {\n    $api_instance- putDvrRESTConverterStoresAction($serverName, $action, $vhostName, $appName, $instanceName, $dvrConverterDefaultFileDestination, $dvrConverterDebugConversions, $dvrConverterContinueOnSourceErrors, $dvrConverterAudioVideoSyncEnable, $dvrConverterAudioVideoMaxOffset, $dvrConverterAudioVideoMaxBuffer, $dvrConverterStartTime, $dvrConverterEndTime, $dvrConverterDuration, $dvrConverterOutputFilename);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi- putDvrRESTConverterStoresAction: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#parameters_89", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     action  string  The action which should be performed by the server     vhostName  string  The name of the current VHost the action will be performed on     appName  string  The application name needed for this REST call     instanceName  string  The application instance name needed for this REST call     dvrConverterDefaultFileDestination  string  The file location to use when converting a nDVR store, the default is configured as the StorageDir in the application in use  [optional]    dvrConverterDebugConversions  string  Indicates if the conversion should have debugging enabled, can be true or false, default is false  [optional]    dvrConverterContinueOnSourceErrors  string  Indicates if the conversion should continue even if errors are detected, can be true or false, default is true  [optional]    dvrConverterAudioVideoSyncEnable  string  Indicates if the audio/video offset should be detected and conversion only started after the sync in no longer detected or over default allowable time. Can be true or false, default is false  [optional]    dvrConverterAudioVideoMaxOffset  string  Indicates the maximum audio/video timecodes can be out of sync  [optional] [default to 200]    dvrConverterAudioVideoMaxBuffer  string  Indicates the maximum time a correct audio/video sync will be searched for before giving up  [optional] [default to 8000]    dvrConverterStartTime  string  A start time in UTC from where the conversion should start in the store, default is the first entry in the store  [optional]    dvrConverterEndTime  string  A end time in UTC  where the conversion should end in the store, default is to the end of the store  [optional]    dvrConverterDuration  string  A duration for the conversion either added to the start or subtracted from the end time, if you use duration you can not use start and end  [optional]    dvrConverterOutputFilename  string  Indicates the output filename if not using the default, which is the name of the store being converted  [optional]", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#return-type_89", 
            "text": "void (empty response body)", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#authorization_89", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#http-request-headers_89", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#putincomingstreamaction", 
            "text": "putIncomingStreamAction($serverName, $action, $vhostName, $appName, $instanceName, $streamName)   This API is available in builds 15089 or later.", 
            "title": "putIncomingStreamAction"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#example_90", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$action =  action_example ; // string | The action which should be performed by the server\n$vhostName =  vhostName_example ; // string | The name of the current VHost the action will be performed on\n$appName =  appName_example ; // string | The application name needed for this REST call\n$instanceName =  instanceName_example ; // string | The application instance name needed for this REST call\n$streamName =  streamName_example ; // string | The stream name needed for this REST call\n\ntry {\n    $api_instance- putIncomingStreamAction($serverName, $action, $vhostName, $appName, $instanceName, $streamName);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi- putIncomingStreamAction: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#parameters_90", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     action  string  The action which should be performed by the server     vhostName  string  The name of the current VHost the action will be performed on     appName  string  The application name needed for this REST call     instanceName  string  The application instance name needed for this REST call     streamName  string  The stream name needed for this REST call", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#return-type_90", 
            "text": "void (empty response body)", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#authorization_90", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#http-request-headers_90", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#putinstanceaction", 
            "text": "putInstanceAction($serverName, $action, $vhostName, $appName, $instanceName)   This API is available in builds 15089 or later.", 
            "title": "putInstanceAction"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#example_91", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$action =  action_example ; // string | The action which should be performed by the server\n$vhostName =  vhostName_example ; // string | The name of the current VHost the action will be performed on\n$appName =  appName_example ; // string | The application name needed for this REST call\n$instanceName =  instanceName_example ; // string | The application instance name needed for this REST call\n\ntry {\n    $api_instance- putInstanceAction($serverName, $action, $vhostName, $appName, $instanceName);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi- putInstanceAction: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#parameters_91", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     action  string  The action which should be performed by the server     vhostName  string  The name of the current VHost the action will be performed on     appName  string  The application name needed for this REST call     instanceName  string  The application instance name needed for this REST call", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#return-type_91", 
            "text": "void (empty response body)", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#authorization_91", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#http-request-headers_91", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#putmediacacheapplicationstoreaction", 
            "text": "putMediaCacheApplicationStoreAction($serverName, $action, $vhostName, $appName, $instanceName, $filename)   This API is available in builds 15942 or later.", 
            "title": "putMediaCacheApplicationStoreAction"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#example_92", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$action =  action_example ; // string | The action which should be performed by the server\n$vhostName =  vhostName_example ; // string | The name of the current VHost the action will be performed on\n$appName =  appName_example ; // string | The application name needed for this REST call\n$instanceName =  instanceName_example ; // string | The application instance name needed for this REST call\n$filename =  filename_example ; // string | The file or stream name item to be used in all rest action requests\n\ntry {\n    $api_instance- putMediaCacheApplicationStoreAction($serverName, $action, $vhostName, $appName, $instanceName, $filename);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi- putMediaCacheApplicationStoreAction: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#parameters_92", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     action  string  The action which should be performed by the server     vhostName  string  The name of the current VHost the action will be performed on     appName  string  The application name needed for this REST call     instanceName  string  The application instance name needed for this REST call     filename  string  The file or stream name item to be used in all rest action requests  [optional]", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#return-type_92", 
            "text": "void (empty response body)", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#authorization_92", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#http-request-headers_92", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#putmodulesconfig", 
            "text": "putModulesConfig($serverName, $vhostName, $appName, $body)   Updates the list of Modules for the specified Application  This API is available in builds 15089 or later.", 
            "title": "putModulesConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#example_93", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | \n$appName =  appName_example ; // string | \n$body = new \\Model\\ModulesConfig(); // \\Model\\ModulesConfig | \n\ntry {\n    $api_instance- putModulesConfig($serverName, $vhostName, $appName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi- putModulesConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#parameters_93", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string      appName  string      body  \\Model\\ModulesConfig", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#return-type_93", 
            "text": "void (empty response body)", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#authorization_93", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#http-request-headers_93", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#putpublisherappconfig", 
            "text": "putPublisherAppConfig($serverName, $vhostName, $publisherName, $appName, $body)   Updates the specified Publisher configuration  This API is available in builds 15089 or later.", 
            "title": "putPublisherAppConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#example_94", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | The vhost name\n$publisherName =  publisherName_example ; // string | The publisher name\n$appName =  appName_example ; // string | \n$body = new \\Model\\PublisherAppConfig(); // \\Model\\PublisherAppConfig | \n\ntry {\n    $api_instance- putPublisherAppConfig($serverName, $vhostName, $publisherName, $appName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi- putPublisherAppConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#parameters_94", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string  The vhost name     publisherName  string  The publisher name     appName  string      body  \\Model\\PublisherAppConfig", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#return-type_94", 
            "text": "void (empty response body)", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#authorization_94", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#http-request-headers_94", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#putpushpublishstreamappaction", 
            "text": "putPushPublishStreamAppAction($serverName, $action, $vhostName, $appName, $entryName, $dstEntryName)   This API is available in builds 15089 or later.", 
            "title": "putPushPublishStreamAppAction"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#example_95", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$action =  action_example ; // string | The action which should be performed by the server\n$vhostName =  vhostName_example ; // string | The name of the current VHost the action will be performed on\n$appName =  appName_example ; // string | The application name needed for this REST call\n$entryName =  entryName_example ; // string | The map entry name needed for this REST call\n$dstEntryName =  dstEntryName_example ; // string | The destination entryName when copying\n\ntry {\n    $api_instance- putPushPublishStreamAppAction($serverName, $action, $vhostName, $appName, $entryName, $dstEntryName);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi- putPushPublishStreamAppAction: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#parameters_95", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     action  string  The action which should be performed by the server     vhostName  string  The name of the current VHost the action will be performed on     appName  string  The application name needed for this REST call     entryName  string  The map entry name needed for this REST call     dstEntryName  string  The destination entryName when copying  [optional]", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#return-type_95", 
            "text": "void (empty response body)", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#authorization_95", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#http-request-headers_95", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#putpushpublishstreamappconfig", 
            "text": "putPushPublishStreamAppConfig($serverName, $vhostName, $appName, $entryName, $body)   Updates the specified PushPublish map entry configuration  This API is available in builds 15089 or later.", 
            "title": "putPushPublishStreamAppConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#example_96", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | \n$appName =  appName_example ; // string | \n$entryName =  entryName_example ; // string | The entry name needed for this REST call\n$body = new \\Model\\PushPublishStreamAppConfig(); // \\Model\\PushPublishStreamAppConfig | \n\ntry {\n    $api_instance- putPushPublishStreamAppConfig($serverName, $vhostName, $appName, $entryName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi- putPushPublishStreamAppConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#parameters_96", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string      appName  string      entryName  string  The entry name needed for this REST call     body  \\Model\\PushPublishStreamAppConfig", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#return-type_96", 
            "text": "void (empty response body)", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#authorization_96", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#http-request-headers_96", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#putpushpublishstreamsappconfig", 
            "text": "putPushPublishStreamsAppConfig($serverName, $vhostName, $appName, $body)   This API is available in builds 15089 or later.", 
            "title": "putPushPublishStreamsAppConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#example_97", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | \n$appName =  appName_example ; // string | \n$body = new \\Model\\PushPublishStreamAppConfig(); // \\Model\\PushPublishStreamAppConfig | \n\ntry {\n    $api_instance- putPushPublishStreamsAppConfig($serverName, $vhostName, $appName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi- putPushPublishStreamsAppConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#parameters_97", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string      appName  string      body  \\Model\\PushPublishStreamAppConfig", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#return-type_97", 
            "text": "void (empty response body)", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#authorization_97", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#http-request-headers_97", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#putsdpfileappaction", 
            "text": "putSDPFileAppAction($serverName, $action, $mediaCasterType, $vhostName, $appName, $sdpfileName, $connectAppName, $appInstance)   This API is available in builds 15089 or later.", 
            "title": "putSDPFileAppAction"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#example_98", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$action =  action_example ; // string | The action which should be performed by the server\n$mediaCasterType =  rtp ; // string | The MediaCasterType to use for the connection\n$vhostName =  vhostName_example ; // string | The name of the current VHost the action will be performed on\n$appName =  appName_example ; // string | The application name needed for this REST call\n$sdpfileName =  sdpfileName_example ; // string | The sdp file name needed for this REST call\n$connectAppName =  connectAppName_example ; // string | The name of the application to connect to\n$appInstance =  appInstance_example ; // string | The name of the application instance to connect to\n\ntry {\n    $api_instance- putSDPFileAppAction($serverName, $action, $mediaCasterType, $vhostName, $appName, $sdpfileName, $connectAppName, $appInstance);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi- putSDPFileAppAction: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#parameters_98", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     action  string  The action which should be performed by the server     mediaCasterType  string  The MediaCasterType to use for the connection  [default to rtp]    vhostName  string  The name of the current VHost the action will be performed on     appName  string  The application name needed for this REST call     sdpfileName  string  The sdp file name needed for this REST call     connectAppName  string  The name of the application to connect to  [optional]    appInstance  string  The name of the application instance to connect to  [optional]", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#return-type_98", 
            "text": "void (empty response body)", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#authorization_98", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#http-request-headers_98", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#putsmilfileappaction", 
            "text": "putSMILFileAppAction($serverName, $action, $mediaCasterType, $vhostName, $appName, $smilfileName, $connectAppName, $appInstance, $dstEntryName)   This API is available in builds 15089 or later.", 
            "title": "putSMILFileAppAction"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#example_99", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$action =  action_example ; // string | The action which should be performed by the server\n$mediaCasterType =  rtp ; // string | The MediaCasterType to use for the connection\n$vhostName =  vhostName_example ; // string | The name of the current VHost the action will be performed on\n$appName =  appName_example ; // string | The application name needed for this REST call\n$smilfileName =  smilfileName_example ; // string | The SMIL file name needed for this REST call\n$connectAppName =  connectAppName_example ; // string | The name of the application to connect to\n$appInstance =  appInstance_example ; // string | The name of the application instance to connect to\n$dstEntryName =  dstEntryName_example ; // string | The destination SMIL file name when copying\n\ntry {\n    $api_instance- putSMILFileAppAction($serverName, $action, $mediaCasterType, $vhostName, $appName, $smilfileName, $connectAppName, $appInstance, $dstEntryName);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi- putSMILFileAppAction: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#parameters_99", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     action  string  The action which should be performed by the server     mediaCasterType  string  The MediaCasterType to use for the connection  [default to rtp]    vhostName  string  The name of the current VHost the action will be performed on     appName  string  The application name needed for this REST call     smilfileName  string  The SMIL file name needed for this REST call     connectAppName  string  The name of the application to connect to  [optional]    appInstance  string  The name of the application instance to connect to  [optional]    dstEntryName  string  The destination SMIL file name when copying  [optional]", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#return-type_99", 
            "text": "void (empty response body)", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#authorization_99", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#http-request-headers_99", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#putsmilfileappconfig", 
            "text": "putSMILFileAppConfig($serverName, $vhostName, $smilfileName, $appName, $body)   Updates the specified SMIL File configuration  This API is available in builds 15089 or later.", 
            "title": "putSMILFileAppConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#example_100", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | \n$smilfileName =  smilfileName_example ; // string | The SMIL file name without the extension\n$appName =  appName_example ; // string | \n$body = new \\Model\\SMILFileAppConfig(); // \\Model\\SMILFileAppConfig | \n\ntry {\n    $api_instance- putSMILFileAppConfig($serverName, $vhostName, $smilfileName, $appName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi- putSMILFileAppConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#parameters_100", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string      smilfileName  string  The SMIL file name without the extension     appName  string      body  \\Model\\SMILFileAppConfig", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#return-type_100", 
            "text": "void (empty response body)", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#authorization_100", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#http-request-headers_100", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#putsecurityconfig", 
            "text": "putSecurityConfig($serverName, $vhostName, $appName, $body)   Updates the Security configuration for the specified Application  This API is available in builds 15089 or later.", 
            "title": "putSecurityConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#example_101", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | \n$appName =  appName_example ; // string | \n$body = new \\Model\\SecurityConfig(); // \\Model\\SecurityConfig | \n\ntry {\n    $api_instance- putSecurityConfig($serverName, $vhostName, $appName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi- putSecurityConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#parameters_101", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string      appName  string      body  \\Model\\SecurityConfig", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#return-type_101", 
            "text": "void (empty response body)", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#authorization_101", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#http-request-headers_101", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#putsourcecontrolaction", 
            "text": "putSourceControlAction($serverName, $action, $vhostName, $appName, $instanceName, $streamName, $direction)   This API is available in builds 15089 or later.", 
            "title": "putSourceControlAction"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#example_102", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$action =  action_example ; // string | The action which should be performed by the server\n$vhostName =  vhostName_example ; // string | The VHost name\n$appName =  appName_example ; // string | The Application name\n$instanceName =  instanceName_example ; // string | The Application Instance name\n$streamName =  streamName_example ; // string | The Stream name\n$direction =  direction_example ; // string | No query params available for captureImage. Optional query params for zoom and panTilt:   ZoomIn, ZoomOut,   PanTiltUp, PanTiltRight, PanTiltDown, PanTiltLeft, PanTiltHome, PanTiltUpRight, PanTiltDownRight, PanTiltDownLeft, PanTiltUpLeft\n\ntry {\n    $api_instance- putSourceControlAction($serverName, $action, $vhostName, $appName, $instanceName, $streamName, $direction);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi- putSourceControlAction: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#parameters_102", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     action  string  The action which should be performed by the server     vhostName  string  The VHost name     appName  string  The Application name     instanceName  string  The Application Instance name     streamName  string  The Stream name     direction  string  No query params available for captureImage. Optional query params for zoom and panTilt:   ZoomIn, ZoomOut,   PanTiltUp, PanTiltRight, PanTiltDown, PanTiltLeft, PanTiltHome, PanTiltUpRight, PanTiltDownRight, PanTiltDownLeft, PanTiltUpLeft  [optional]", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#return-type_102", 
            "text": "void (empty response body)", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#authorization_102", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#http-request-headers_102", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#putstreamconfigurationconfig", 
            "text": "putStreamConfigurationConfig($serverName, $vhostName, $appName, $body)   Updates the Stream configuration for the specified Application  This API is available in builds 15089 or later.", 
            "title": "putStreamConfigurationConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#example_103", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | \n$appName =  appName_example ; // string | \n$body = new \\Model\\StreamConfigurationConfig(); // \\Model\\StreamConfigurationConfig | \n\ntry {\n    $api_instance- putStreamConfigurationConfig($serverName, $vhostName, $appName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi- putStreamConfigurationConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#parameters_103", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string      appName  string      body  \\Model\\StreamConfigurationConfig", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#return-type_103", 
            "text": "void (empty response body)", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#authorization_103", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#http-request-headers_103", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#putstreamfileappaction", 
            "text": "putStreamFileAppAction($serverName, $action, $mediaCasterType, $vhostName, $appName, $streamfileName, $connectAppName, $appInstance, $dstEntryName)   This API is available in builds 15089 or later.", 
            "title": "putStreamFileAppAction"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#example_104", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$action =  action_example ; // string | The action which should be performed by the server\n$mediaCasterType =  rtp ; // string | The MediaCasterType to use for the connection\n$vhostName =  vhostName_example ; // string | The name of the current VHost the action will be performed on\n$appName =  appName_example ; // string | The application name needed for this REST call\n$streamfileName =  streamfileName_example ; // string | The stream file, file name needed for this REST call\n$connectAppName =  connectAppName_example ; // string | The name of the application to connect to\n$appInstance =  appInstance_example ; // string | The name of the application instance to connect to\n$dstEntryName =  dstEntryName_example ; // string | The destination stream file name when copying\n\ntry {\n    $api_instance- putStreamFileAppAction($serverName, $action, $mediaCasterType, $vhostName, $appName, $streamfileName, $connectAppName, $appInstance, $dstEntryName);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi- putStreamFileAppAction: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#parameters_104", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     action  string  The action which should be performed by the server     mediaCasterType  string  The MediaCasterType to use for the connection  [default to rtp]    vhostName  string  The name of the current VHost the action will be performed on     appName  string  The application name needed for this REST call     streamfileName  string  The stream file, file name needed for this REST call     connectAppName  string  The name of the application to connect to  [optional]    appInstance  string  The name of the application instance to connect to  [optional]    dstEntryName  string  The destination stream file name when copying  [optional]", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#return-type_104", 
            "text": "void (empty response body)", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#authorization_104", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#http-request-headers_104", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#putstreamfileappconfig", 
            "text": "putStreamFileAppConfig($serverName, $vhostName, $streamfileName, $appName, $body)   Updates the specified Stream File configuration  This API is available in builds 15089 or later.", 
            "title": "putStreamFileAppConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#example_105", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | \n$streamfileName =  streamfileName_example ; // string | The stream file name without the extension\n$appName =  appName_example ; // string | \n$body = new \\Model\\StreamFileAppConfig(); // \\Model\\StreamFileAppConfig | \n\ntry {\n    $api_instance- putStreamFileAppConfig($serverName, $vhostName, $streamfileName, $appName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi- putStreamFileAppConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#parameters_105", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string      streamfileName  string  The stream file name without the extension     appName  string      body  \\Model\\StreamFileAppConfig", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#return-type_105", 
            "text": "void (empty response body)", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#authorization_105", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#http-request-headers_105", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#putstreamfileappconfigadv", 
            "text": "putStreamFileAppConfigAdv($serverName, $vhostName, $streamfileName, $appName, $body)   Updates the Advanced Stream File configuration  This API is available in builds 15089 or later.", 
            "title": "putStreamFileAppConfigAdv"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#example_106", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | \n$streamfileName =  streamfileName_example ; // string | The stream file name without the .stream extension\n$appName =  appName_example ; // string | \n$body = new \\Model\\StreamFileAppConfigAdv(); // \\Model\\StreamFileAppConfigAdv | \n\ntry {\n    $api_instance- putStreamFileAppConfigAdv($serverName, $vhostName, $streamfileName, $appName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi- putStreamFileAppConfigAdv: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#parameters_106", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string      streamfileName  string  The stream file name without the .stream extension     appName  string      body  \\Model\\StreamFileAppConfigAdv", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#return-type_106", 
            "text": "void (empty response body)", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#authorization_106", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#http-request-headers_106", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#putstreamgroupaction", 
            "text": "putStreamGroupAction($serverName, $action, $vhostName, $appName, $instanceName, $groupName)   This API is available in builds 15089 or later.", 
            "title": "putStreamGroupAction"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#example_107", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$action =  action_example ; // string | The action which should be performed by the server\n$vhostName =  vhostName_example ; // string | The name of the current VHost the action will be performed on\n$appName =  appName_example ; // string | The application name needed for this REST call\n$instanceName =  instanceName_example ; // string | The application instance name needed for this REST call\n$groupName =  groupName_example ; // string | The group name needed for this REST call\n\ntry {\n    $api_instance- putStreamGroupAction($serverName, $action, $vhostName, $appName, $instanceName, $groupName);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi- putStreamGroupAction: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#parameters_107", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     action  string  The action which should be performed by the server     vhostName  string  The name of the current VHost the action will be performed on     appName  string  The application name needed for this REST call     instanceName  string  The application instance name needed for this REST call     groupName  string  The group name needed for this REST call", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#return-type_107", 
            "text": "void (empty response body)", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#authorization_107", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#http-request-headers_107", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#putstreamrecorderaction", 
            "text": "putStreamRecorderAction($serverName, $action, $vhostName, $appName, $instanceName, $recorderName)   This API is available in builds 15089 or later.", 
            "title": "putStreamRecorderAction"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#example_108", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$action =  action_example ; // string | The action which should be performed by the server\n$vhostName =  vhostName_example ; // string | The name of the current VHost the action will be performed on\n$appName =  appName_example ; // string | The application name needed for this REST call\n$instanceName =  instanceName_example ; // string | The application instance name needed for this REST call\n$recorderName =  recorderName_example ; // string | The recorder name (stream name) needed for this REST call\n\ntry {\n    $api_instance- putStreamRecorderAction($serverName, $action, $vhostName, $appName, $instanceName, $recorderName);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi- putStreamRecorderAction: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#parameters_108", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     action  string  The action which should be performed by the server     vhostName  string  The name of the current VHost the action will be performed on     appName  string  The application name needed for this REST call     instanceName  string  The application instance name needed for this REST call     recorderName  string  The recorder name (stream name) needed for this REST call", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#return-type_108", 
            "text": "void (empty response body)", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#authorization_108", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#http-request-headers_108", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#puttranscoderappconfig", 
            "text": "putTranscoderAppConfig($serverName, $vhostName, $appName, $body)   Updates the Transcoder configuration for the specified Application  This API is available in builds 15089 or later.", 
            "title": "putTranscoderAppConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#example_109", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | \n$appName =  appName_example ; // string | \n$body = new \\Model\\TranscoderAppConfig(); // \\Model\\TranscoderAppConfig | \n\ntry {\n    $api_instance- putTranscoderAppConfig($serverName, $vhostName, $appName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi- putTranscoderAppConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#parameters_109", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string      appName  string      body  \\Model\\TranscoderAppConfig", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#return-type_109", 
            "text": "void (empty response body)", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#authorization_109", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#http-request-headers_109", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#puttranscoderappconfigadv", 
            "text": "putTranscoderAppConfigAdv($serverName, $vhostName, $appName, $body)   Updates the Advanced Transcoder configuration for the specified Application  This API is available in builds 15089 or later.", 
            "title": "putTranscoderAppConfigAdv"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#example_110", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | \n$appName =  appName_example ; // string | \n$body = new \\Model\\TranscoderAppConfigAdv(); // \\Model\\TranscoderAppConfigAdv | \n\ntry {\n    $api_instance- putTranscoderAppConfigAdv($serverName, $vhostName, $appName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi- putTranscoderAppConfigAdv: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#parameters_110", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string      appName  string      body  \\Model\\TranscoderAppConfigAdv", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#return-type_110", 
            "text": "void (empty response body)", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#authorization_110", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#http-request-headers_110", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#puttranscoderencodeappconfig", 
            "text": "putTranscoderEncodeAppConfig($serverName, $vhostName, $templateName, $encodeName, $appName, $body)   Updates the specified Trancoder Encode configuration  This API is available in builds 15089 or later.", 
            "title": "putTranscoderEncodeAppConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#example_111", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | \n$templateName =  templateName_example ; // string | \n$encodeName =  encodeName_example ; // string | \n$appName =  appName_example ; // string | \n$body = new \\Model\\TranscoderEncodeAppConfig(); // \\Model\\TranscoderEncodeAppConfig | \n\ntry {\n    $api_instance- putTranscoderEncodeAppConfig($serverName, $vhostName, $templateName, $encodeName, $appName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi- putTranscoderEncodeAppConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#parameters_111", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string      templateName  string      encodeName  string      appName  string      body  \\Model\\TranscoderEncodeAppConfig", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#return-type_111", 
            "text": "void (empty response body)", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#authorization_111", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#http-request-headers_111", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#puttranscoderencodeappconfigadv", 
            "text": "putTranscoderEncodeAppConfigAdv($serverName, $vhostName, $templateName, $encodeName, $appName, $body)   Updates the Advanced Transcoder Encode configuration  This API is available in builds 15089 or later.", 
            "title": "putTranscoderEncodeAppConfigAdv"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#example_112", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | \n$templateName =  templateName_example ; // string | \n$encodeName =  encodeName_example ; // string | \n$appName =  appName_example ; // string | \n$body = new \\Model\\TranscoderEncodeAppConfigAdv(); // \\Model\\TranscoderEncodeAppConfigAdv | \n\ntry {\n    $api_instance- putTranscoderEncodeAppConfigAdv($serverName, $vhostName, $templateName, $encodeName, $appName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi- putTranscoderEncodeAppConfigAdv: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#parameters_112", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string      templateName  string      encodeName  string      appName  string      body  \\Model\\TranscoderEncodeAppConfigAdv", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#return-type_112", 
            "text": "void (empty response body)", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#authorization_112", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#http-request-headers_112", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#puttranscoderoverlaydecodeappconfig", 
            "text": "putTranscoderOverlayDecodeAppConfig($serverName, $vhostName, $templateName, $overlayName, $appName, $body)   Updates the specified Trancoder Overlay Decode configuration  This API is available in builds 15089 or later.", 
            "title": "putTranscoderOverlayDecodeAppConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#example_113", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | \n$templateName =  templateName_example ; // string | \n$overlayName =  overlayName_example ; // string | \n$appName =  appName_example ; // string | \n$body = new \\Model\\TranscoderOverlayDecodeAppConfig(); // \\Model\\TranscoderOverlayDecodeAppConfig | \n\ntry {\n    $api_instance- putTranscoderOverlayDecodeAppConfig($serverName, $vhostName, $templateName, $overlayName, $appName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi- putTranscoderOverlayDecodeAppConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#parameters_113", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string      templateName  string      overlayName  string      appName  string      body  \\Model\\TranscoderOverlayDecodeAppConfig", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#return-type_113", 
            "text": "void (empty response body)", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#authorization_113", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#http-request-headers_113", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#puttranscoderoverlayencodeappconfig", 
            "text": "putTranscoderOverlayEncodeAppConfig($serverName, $vhostName, $templateName, $overlayName, $encodeName, $appName, $body)   Updates the specified Trancoder Overlay Encode configuration  This API is available in builds 15089 or later.", 
            "title": "putTranscoderOverlayEncodeAppConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#example_114", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | \n$templateName =  templateName_example ; // string | \n$overlayName =  overlayName_example ; // string | \n$encodeName =  encodeName_example ; // string | \n$appName =  appName_example ; // string | \n$body = new \\Model\\TranscoderOverlayEncodeAppConfig(); // \\Model\\TranscoderOverlayEncodeAppConfig | \n\ntry {\n    $api_instance- putTranscoderOverlayEncodeAppConfig($serverName, $vhostName, $templateName, $overlayName, $encodeName, $appName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi- putTranscoderOverlayEncodeAppConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#parameters_114", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string      templateName  string      overlayName  string      encodeName  string      appName  string      body  \\Model\\TranscoderOverlayEncodeAppConfig", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#return-type_114", 
            "text": "void (empty response body)", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#authorization_114", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#http-request-headers_114", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#puttranscoderstreamnamegroupappconfig", 
            "text": "putTranscoderStreamNameGroupAppConfig($serverName, $vhostName, $templateName, $groupName, $appName, $body)   Updates the specified Trancoder StreamNameGroup configuration  This API is available in builds 15089 or later.", 
            "title": "putTranscoderStreamNameGroupAppConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#example_115", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | \n$templateName =  templateName_example ; // string | \n$groupName =  groupName_example ; // string | \n$appName =  appName_example ; // string | \n$body = new \\Model\\TranscoderStreamNameGroupAppConfig(); // \\Model\\TranscoderStreamNameGroupAppConfig | \n\ntry {\n    $api_instance- putTranscoderStreamNameGroupAppConfig($serverName, $vhostName, $templateName, $groupName, $appName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi- putTranscoderStreamNameGroupAppConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#parameters_115", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string      templateName  string      groupName  string      appName  string      body  \\Model\\TranscoderStreamNameGroupAppConfig", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#return-type_115", 
            "text": "void (empty response body)", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#authorization_115", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#http-request-headers_115", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#puttranscodertemplateappaction", 
            "text": "putTranscoderTemplateAppAction($serverName, $action, $vhostName, $appName, $templateName, $dstEntryName)   This API is available in builds 15089 or later.", 
            "title": "putTranscoderTemplateAppAction"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#example_116", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$action =  action_example ; // string | The action which should be performed by the server\n$vhostName =  vhostName_example ; // string | The name of the current VHost the action will be performed on\n$appName =  appName_example ; // string | The application name needed for this REST call\n$templateName =  templateName_example ; // string | The template name needed for this REST call\n$dstEntryName =  dstEntryName_example ; // string | The destination transcode template file name when copying\n\ntry {\n    $api_instance- putTranscoderTemplateAppAction($serverName, $action, $vhostName, $appName, $templateName, $dstEntryName);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi- putTranscoderTemplateAppAction: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#parameters_116", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     action  string  The action which should be performed by the server     vhostName  string  The name of the current VHost the action will be performed on     appName  string  The application name needed for this REST call     templateName  string  The template name needed for this REST call     dstEntryName  string  The destination transcode template file name when copying  [optional]", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#return-type_116", 
            "text": "void (empty response body)", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#authorization_116", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#http-request-headers_116", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#puttranscodertemplateappconfig", 
            "text": "putTranscoderTemplateAppConfig($serverName, $vhostName, $templateName, $appName, $body)   Updates the specified Trancoder Template configuration  This API is available in builds 15089 or later.", 
            "title": "putTranscoderTemplateAppConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#example_117", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | \n$templateName =  templateName_example ; // string | \n$appName =  appName_example ; // string | \n$body = new \\Model\\TranscoderTemplateAppConfig(); // \\Model\\TranscoderTemplateAppConfig | \n\ntry {\n    $api_instance- putTranscoderTemplateAppConfig($serverName, $vhostName, $templateName, $appName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi- putTranscoderTemplateAppConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#parameters_117", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string      templateName  string      appName  string      body  \\Model\\TranscoderTemplateAppConfig", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#return-type_117", 
            "text": "void (empty response body)", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#authorization_117", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#http-request-headers_117", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#puttranscodertemplateappconfigadv", 
            "text": "putTranscoderTemplateAppConfigAdv($serverName, $vhostName, $templateName, $appName, $body)   Updates the Advanced Transcoder Template configuration  This API is available in builds 15089 or later.", 
            "title": "putTranscoderTemplateAppConfigAdv"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#example_118", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | \n$templateName =  templateName_example ; // string | \n$appName =  appName_example ; // string | \n$body = new \\Model\\TranscoderTemplateAppConfigAdv(); // \\Model\\TranscoderTemplateAppConfigAdv | \n\ntry {\n    $api_instance- putTranscoderTemplateAppConfigAdv($serverName, $vhostName, $templateName, $appName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi- putTranscoderTemplateAppConfigAdv: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#parameters_118", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string      templateName  string      appName  string      body  \\Model\\TranscoderTemplateAppConfigAdv", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#return-type_118", 
            "text": "void (empty response body)", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#authorization_118", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#http-request-headers_118", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#putverimatrixstreammapsconfig", 
            "text": "putVerimatrixStreamMapsConfig($serverName, $vhostName, $appName, $body)   Updates the Verimatrix stream mapfile for the specified Application  This API is available in builds 15089 or later.", 
            "title": "putVerimatrixStreamMapsConfig"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#example_119", 
            "text": "?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new WowzaApi\\Api\\VserversserverNamevhostsvhostNameapplicationsApi();\n$serverName =  serverName_example ; // string | Reserved for future use\n$vhostName =  vhostName_example ; // string | \n$appName =  appName_example ; // string | \n$body = new \\Model\\VerimatrixStreamMapsConfig(); // \\Model\\VerimatrixStreamMapsConfig | \n\ntry {\n    $api_instance- putVerimatrixStreamMapsConfig($serverName, $vhostName, $appName, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling VserversserverNamevhostsvhostNameapplicationsApi- putVerimatrixStreamMapsConfig: ', $e- getMessage(), PHP_EOL;\n}\n?", 
            "title": "Example"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#parameters_119", 
            "text": "Name  Type  Description  Notes      serverName  string  Reserved for future use     vhostName  string      appName  string      body  \\Model\\VerimatrixStreamMapsConfig", 
            "title": "Parameters"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#return-type_119", 
            "text": "void (empty response body)", 
            "title": "Return type"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#authorization_119", 
            "text": "No authorization required", 
            "title": "Authorization"
        }, 
        {
            "location": "/legacy-docs/Api/VserversserverNamevhostsvhostNameapplicationsApi/#http-request-headers_119", 
            "text": "Content-Type : application/xml, text/xml, application/json  Accept : application/xml, text/xml, application/json   [Back to top]   [Back to API list]   [Back to Model list]   [Back to README]", 
            "title": "HTTP request headers"
        }, 
        {
            "location": "/legacy-docs/Model/StartupStreamsConfig/", 
            "text": "StartupStreamsConfig\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nsaveFieldList\n\n\nstring[]\n\n\n\n\n[optional]\n\n\n\n\n\n\nversion\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nstreams\n\n\n\\Model\\StartupStreamConfig[]\n\n\n\n\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "StartupStreamsConfig"
        }, 
        {
            "location": "/legacy-docs/Model/StartupStreamsConfig/#startupstreamsconfig", 
            "text": "", 
            "title": "StartupStreamsConfig"
        }, 
        {
            "location": "/legacy-docs/Model/StartupStreamsConfig/#properties", 
            "text": "Name  Type  Description  Notes      serverName  string      saveFieldList  string[]   [optional]    version  string      streams  \\Model\\StartupStreamConfig[]       [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }, 
        {
            "location": "/legacy-docs/Model/StreamConfigurationConfig/", 
            "text": "StreamConfigurationConfig\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nstreamType\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nstorageDirExists\n\n\nbool\n\n\n\n\n\n\n\n\n\n\nkeyDir\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ncreateStorageDir\n\n\nbool\n\n\n\n\n\n\n\n\n\n\nliveStreamPacketizer\n\n\nstring[]\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nstorageDir\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nsaveFieldList\n\n\nstring[]\n\n\n\n\n[optional]\n\n\n\n\n\n\nversion\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nhttpRandomizeMediaName\n\n\nbool\n\n\n\n\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "StreamConfigurationConfig"
        }, 
        {
            "location": "/legacy-docs/Model/StreamConfigurationConfig/#streamconfigurationconfig", 
            "text": "", 
            "title": "StreamConfigurationConfig"
        }, 
        {
            "location": "/legacy-docs/Model/StreamConfigurationConfig/#properties", 
            "text": "Name  Type  Description  Notes      streamType  string      storageDirExists  bool      keyDir  string      createStorageDir  bool      liveStreamPacketizer  string[]      serverName  string      storageDir  string      saveFieldList  string[]   [optional]    version  string      httpRandomizeMediaName  bool       [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }, 
        {
            "location": "/legacy-docs/Model/StreamFileAction/", 
            "text": "StreamFileAction\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nstreamfileName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "StreamFileAction"
        }, 
        {
            "location": "/legacy-docs/Model/StreamFileAction/#streamfileaction", 
            "text": "", 
            "title": "StreamFileAction"
        }, 
        {
            "location": "/legacy-docs/Model/StreamFileAction/#properties", 
            "text": "Name  Type  Description  Notes      vhostName  string      streamfileName  string      serverName  string       [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }, 
        {
            "location": "/legacy-docs/Model/StreamFileAppAction/", 
            "text": "StreamFileAppAction\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nstreamfileName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nappName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "StreamFileAppAction"
        }, 
        {
            "location": "/legacy-docs/Model/StreamFileAppAction/#streamfileappaction", 
            "text": "", 
            "title": "StreamFileAppAction"
        }, 
        {
            "location": "/legacy-docs/Model/StreamFileAppAction/#properties", 
            "text": "Name  Type  Description  Notes      vhostName  string      streamfileName  string      appName  string      serverName  string       [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }, 
        {
            "location": "/legacy-docs/Model/StreamFileAppConfig/", 
            "text": "StreamFileAppConfig\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nsourceControlDriver\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nsourceControlUserName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nsourceControlPassword\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nname\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nsaveFieldList\n\n\nstring[]\n\n\n\n\n[optional]\n\n\n\n\n\n\nversion\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nuri\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "StreamFileAppConfig"
        }, 
        {
            "location": "/legacy-docs/Model/StreamFileAppConfig/#streamfileappconfig", 
            "text": "", 
            "title": "StreamFileAppConfig"
        }, 
        {
            "location": "/legacy-docs/Model/StreamFileAppConfig/#properties", 
            "text": "Name  Type  Description  Notes      sourceControlDriver  string      sourceControlUserName  string      sourceControlPassword  string      name  string      serverName  string      saveFieldList  string[]   [optional]    version  string      uri  string       [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }, 
        {
            "location": "/legacy-docs/Model/StreamFileAppConfigAdv/", 
            "text": "StreamFileAppConfigAdv\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nsourceControlDriver\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nadvancedSettings\n\n\n\\Model\\AdvancedSetting[]\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nsaveFieldList\n\n\nstring[]\n\n\n\n\n[optional]\n\n\n\n\n\n\nversion\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "StreamFileAppConfigAdv"
        }, 
        {
            "location": "/legacy-docs/Model/StreamFileAppConfigAdv/#streamfileappconfigadv", 
            "text": "", 
            "title": "StreamFileAppConfigAdv"
        }, 
        {
            "location": "/legacy-docs/Model/StreamFileAppConfigAdv/#properties", 
            "text": "Name  Type  Description  Notes      sourceControlDriver  string      advancedSettings  \\Model\\AdvancedSetting[]      serverName  string      saveFieldList  string[]   [optional]    version  string       [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }, 
        {
            "location": "/legacy-docs/Model/StreamFileConfig/", 
            "text": "StreamFileConfig\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nsourceControlDriver\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nsourceControlUserName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nsourceControlPassword\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nname\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nsaveFieldList\n\n\nstring[]\n\n\n\n\n[optional]\n\n\n\n\n\n\nversion\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nuri\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "StreamFileConfig"
        }, 
        {
            "location": "/legacy-docs/Model/StreamFileConfig/#streamfileconfig", 
            "text": "", 
            "title": "StreamFileConfig"
        }, 
        {
            "location": "/legacy-docs/Model/StreamFileConfig/#properties", 
            "text": "Name  Type  Description  Notes      sourceControlDriver  string      sourceControlUserName  string      sourceControlPassword  string      name  string      serverName  string      saveFieldList  string[]   [optional]    version  string      uri  string       [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }, 
        {
            "location": "/legacy-docs/Model/StreamFileConfigAdv/", 
            "text": "StreamFileConfigAdv\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nsourceControlDriver\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nadvancedSettings\n\n\n\\Model\\AdvancedSetting[]\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nsaveFieldList\n\n\nstring[]\n\n\n\n\n[optional]\n\n\n\n\n\n\nversion\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "StreamFileConfigAdv"
        }, 
        {
            "location": "/legacy-docs/Model/StreamFileConfigAdv/#streamfileconfigadv", 
            "text": "", 
            "title": "StreamFileConfigAdv"
        }, 
        {
            "location": "/legacy-docs/Model/StreamFileConfigAdv/#properties", 
            "text": "Name  Type  Description  Notes      sourceControlDriver  string      advancedSettings  \\Model\\AdvancedSetting[]      serverName  string      saveFieldList  string[]   [optional]    version  string       [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }, 
        {
            "location": "/legacy-docs/Model/StreamFilesAppConfig/", 
            "text": "StreamFilesAppConfig\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nstreamFiles\n\n\n\\Model\\ShortObject[]\n\n\n\n\n\n\n\n\n\n\nsaveFieldList\n\n\nstring[]\n\n\n\n\n[optional]\n\n\n\n\n\n\nversion\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "StreamFilesAppConfig"
        }, 
        {
            "location": "/legacy-docs/Model/StreamFilesAppConfig/#streamfilesappconfig", 
            "text": "", 
            "title": "StreamFilesAppConfig"
        }, 
        {
            "location": "/legacy-docs/Model/StreamFilesAppConfig/#properties", 
            "text": "Name  Type  Description  Notes      serverName  string      streamFiles  \\Model\\ShortObject[]      saveFieldList  string[]   [optional]    version  string       [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }, 
        {
            "location": "/legacy-docs/Model/StreamFilesConfig/", 
            "text": "StreamFilesConfig\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nstreamFiles\n\n\n\\Model\\ShortObject[]\n\n\n\n\n\n\n\n\n\n\nsaveFieldList\n\n\nstring[]\n\n\n\n\n[optional]\n\n\n\n\n\n\nversion\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "StreamFilesConfig"
        }, 
        {
            "location": "/legacy-docs/Model/StreamFilesConfig/#streamfilesconfig", 
            "text": "", 
            "title": "StreamFilesConfig"
        }, 
        {
            "location": "/legacy-docs/Model/StreamFilesConfig/#properties", 
            "text": "Name  Type  Description  Notes      serverName  string      streamFiles  \\Model\\ShortObject[]      saveFieldList  string[]   [optional]    version  string       [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }, 
        {
            "location": "/legacy-docs/Model/StreamGroupAction/", 
            "text": "StreamGroupAction\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\ngroupName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ninstanceName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nappName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "StreamGroupAction"
        }, 
        {
            "location": "/legacy-docs/Model/StreamGroupAction/#streamgroupaction", 
            "text": "", 
            "title": "StreamGroupAction"
        }, 
        {
            "location": "/legacy-docs/Model/StreamGroupAction/#properties", 
            "text": "Name  Type  Description  Notes      groupName  string      vhostName  string      instanceName  string      appName  string      serverName  string       [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }, 
        {
            "location": "/legacy-docs/Model/StreamGroupConfig/", 
            "text": "StreamGroupConfig\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\ngroupName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nisTranscodeResult\n\n\nbool\n\n\n\n\n\n\n\n\n\n\ninstanceName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nmembers\n\n\nstring[]\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nsaveFieldList\n\n\nstring[]\n\n\n\n\n[optional]\n\n\n\n\n\n\nversion\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "StreamGroupConfig"
        }, 
        {
            "location": "/legacy-docs/Model/StreamGroupConfig/#streamgroupconfig", 
            "text": "", 
            "title": "StreamGroupConfig"
        }, 
        {
            "location": "/legacy-docs/Model/StreamGroupConfig/#properties", 
            "text": "Name  Type  Description  Notes      groupName  string      isTranscodeResult  bool      instanceName  string      members  string[]      serverName  string      saveFieldList  string[]   [optional]    version  string       [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }, 
        {
            "location": "/legacy-docs/Model/StreamGroupsConfig/", 
            "text": "StreamGroupsConfig\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\ninstanceName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nstreamGroups\n\n\n\\Model\\StreamGroupConfig[]\n\n\n\n\n\n\n\n\n\n\nsaveFieldList\n\n\nstring[]\n\n\n\n\n[optional]\n\n\n\n\n\n\nversion\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "StreamGroupsConfig"
        }, 
        {
            "location": "/legacy-docs/Model/StreamGroupsConfig/#streamgroupsconfig", 
            "text": "", 
            "title": "StreamGroupsConfig"
        }, 
        {
            "location": "/legacy-docs/Model/StreamGroupsConfig/#properties", 
            "text": "Name  Type  Description  Notes      instanceName  string      serverName  string      streamGroups  \\Model\\StreamGroupConfig[]      saveFieldList  string[]   [optional]    version  string       [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }, 
        {
            "location": "/legacy-docs/Model/StreamRecorderAction/", 
            "text": "StreamRecorderAction\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ninstanceName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nappName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nrecorderName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "StreamRecorderAction"
        }, 
        {
            "location": "/legacy-docs/Model/StreamRecorderAction/#streamrecorderaction", 
            "text": "", 
            "title": "StreamRecorderAction"
        }, 
        {
            "location": "/legacy-docs/Model/StreamRecorderAction/#properties", 
            "text": "Name  Type  Description  Notes      vhostName  string      instanceName  string      appName  string      serverName  string      recorderName  string       [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }, 
        {
            "location": "/legacy-docs/Model/StreamRecorderConfig/", 
            "text": "StreamRecorderConfig\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\ninstanceName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nfileVersionDelegateName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nrecorderName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ncurrentSize\n\n\nint\n\n\n\n\n\n\n\n\n\n\nsegmentSchedule\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nstartOnKeyFrame\n\n\nbool\n\n\n\n\n\n\n\n\n\n\noutputPath\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ncurrentFile\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nsaveFieldList\n\n\nstring[]\n\n\n\n\n[optional]\n\n\n\n\n\n\nrecordData\n\n\nbool\n\n\n\n\n\n\n\n\n\n\napplicationName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nmoveFirstVideoFrameToZero\n\n\nbool\n\n\n\n\n\n\n\n\n\n\nrecorderErrorString\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nsegmentSize\n\n\nint\n\n\n\n\n\n\n\n\n\n\ndefaultRecorder\n\n\nbool\n\n\n\n\n\n\n\n\n\n\nsplitOnTcDiscontinuity\n\n\nbool\n\n\n\n\n\n\n\n\n\n\nversion\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nbaseFile\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nsegmentDuration\n\n\nint\n\n\n\n\n\n\n\n\n\n\nrecordingStartTime\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nfileTemplate\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nsegmentationType\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ncurrentDuration\n\n\nint\n\n\n\n\n\n\n\n\n\n\nfileFormat\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nrecorderState\n\n\nstring\n\n\n\n\n\n\n\n\n\n\noption\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "StreamRecorderConfig"
        }, 
        {
            "location": "/legacy-docs/Model/StreamRecorderConfig/#streamrecorderconfig", 
            "text": "", 
            "title": "StreamRecorderConfig"
        }, 
        {
            "location": "/legacy-docs/Model/StreamRecorderConfig/#properties", 
            "text": "Name  Type  Description  Notes      instanceName  string      fileVersionDelegateName  string      serverName  string      recorderName  string      currentSize  int      segmentSchedule  string      startOnKeyFrame  bool      outputPath  string      currentFile  string      saveFieldList  string[]   [optional]    recordData  bool      applicationName  string      moveFirstVideoFrameToZero  bool      recorderErrorString  string      segmentSize  int      defaultRecorder  bool      splitOnTcDiscontinuity  bool      version  string      baseFile  string      segmentDuration  int      recordingStartTime  string      fileTemplate  string      segmentationType  string      currentDuration  int      fileFormat  string      recorderState  string      option  string       [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }, 
        {
            "location": "/legacy-docs/Model/StreamRecordersConfig/", 
            "text": "StreamRecordersConfig\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nstreamrecorder\n\n\n\\Model\\StreamRecorderConfig[]\n\n\n\n\n\n\n\n\n\n\ninstanceName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nsaveFieldList\n\n\nstring[]\n\n\n\n\n[optional]\n\n\n\n\n\n\nversion\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "StreamRecordersConfig"
        }, 
        {
            "location": "/legacy-docs/Model/StreamRecordersConfig/#streamrecordersconfig", 
            "text": "", 
            "title": "StreamRecordersConfig"
        }, 
        {
            "location": "/legacy-docs/Model/StreamRecordersConfig/#properties", 
            "text": "Name  Type  Description  Notes      streamrecorder  \\Model\\StreamRecorderConfig[]      instanceName  string      serverName  string      saveFieldList  string[]   [optional]    version  string       [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }, 
        {
            "location": "/legacy-docs/Model/TranscoderAppConfig/", 
            "text": "TranscoderAppConfig\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nprofileDir\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nlicensed\n\n\nbool\n\n\n\n\n\n\n\n\n\n\ntemplates\n\n\n\\Model\\TranscoderTemplatesConfig\n\n\n\n\n\n\n\n\n\n\navailable\n\n\nbool\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ntemplateDir\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nversion\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ncreateTemplateDir\n\n\nbool\n\n\n\n\n\n\n\n\n\n\nlicenses\n\n\nint\n\n\n\n\n\n\n\n\n\n\nliveStreamTranscoder\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ntemplatesInUse\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nlicensesInUse\n\n\nint\n\n\n\n\n\n\n\n\n\n\nsaveFieldList\n\n\nstring[]\n\n\n\n\n[optional]\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "TranscoderAppConfig"
        }, 
        {
            "location": "/legacy-docs/Model/TranscoderAppConfig/#transcoderappconfig", 
            "text": "", 
            "title": "TranscoderAppConfig"
        }, 
        {
            "location": "/legacy-docs/Model/TranscoderAppConfig/#properties", 
            "text": "Name  Type  Description  Notes      profileDir  string      licensed  bool      templates  \\Model\\TranscoderTemplatesConfig      available  bool      serverName  string      templateDir  string      version  string      createTemplateDir  bool      licenses  int      liveStreamTranscoder  string      templatesInUse  string      licensesInUse  int      saveFieldList  string[]   [optional]     [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }, 
        {
            "location": "/legacy-docs/Model/TranscoderAppConfigAdv/", 
            "text": "TranscoderAppConfigAdv\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nadvancedSettings\n\n\n\\Model\\AdvancedSetting[]\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nsaveFieldList\n\n\nstring[]\n\n\n\n\n[optional]\n\n\n\n\n\n\nversion\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "TranscoderAppConfigAdv"
        }, 
        {
            "location": "/legacy-docs/Model/TranscoderAppConfigAdv/#transcoderappconfigadv", 
            "text": "", 
            "title": "TranscoderAppConfigAdv"
        }, 
        {
            "location": "/legacy-docs/Model/TranscoderAppConfigAdv/#properties", 
            "text": "Name  Type  Description  Notes      advancedSettings  \\Model\\AdvancedSetting[]      serverName  string      saveFieldList  string[]   [optional]    version  string       [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }, 
        {
            "location": "/legacy-docs/Model/TranscoderConfig/", 
            "text": "TranscoderConfig\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nlicenses\n\n\nint\n\n\n\n\n\n\n\n\n\n\nlicensed\n\n\nbool\n\n\n\n\n\n\n\n\n\n\nlicensesInUse\n\n\nint\n\n\n\n\n\n\n\n\n\n\ntemplates\n\n\n\\Model\\TranscoderTemplatesConfig\n\n\n\n\n\n\n\n\n\n\navailable\n\n\nbool\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nsaveFieldList\n\n\nstring[]\n\n\n\n\n[optional]\n\n\n\n\n\n\nversion\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "TranscoderConfig"
        }, 
        {
            "location": "/legacy-docs/Model/TranscoderConfig/#transcoderconfig", 
            "text": "", 
            "title": "TranscoderConfig"
        }, 
        {
            "location": "/legacy-docs/Model/TranscoderConfig/#properties", 
            "text": "Name  Type  Description  Notes      licenses  int      licensed  bool      licensesInUse  int      templates  \\Model\\TranscoderTemplatesConfig      available  bool      serverName  string      saveFieldList  string[]   [optional]    version  string       [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }, 
        {
            "location": "/legacy-docs/Model/TranscoderEncodeAppConfig/", 
            "text": "TranscoderEncodeAppConfig\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nfollowSource\n\n\nbool\n\n\n\n\n\n\n\n\n\n\nimplementation\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ngpuid\n\n\nint\n\n\n\n\n\n\n\n\n\n\nprofile\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ndescription\n\n\nstring\n\n\n\n\n\n\n\n\n\n\naudioCodec\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nversion\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nstreamName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\noverlays\n\n\n\\Model\\TranscoderOverlayEncodeConfig[]\n\n\n\n\n\n\n\n\n\n\naudioBitrate\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nvideoBitrate\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nenable\n\n\nbool\n\n\n\n\n\n\n\n\n\n\nname\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nwidth\n\n\nint\n\n\n\n\n\n\n\n\n\n\ninterval\n\n\nint\n\n\n\n\n\n\n\n\n\n\nfitMode\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nsaveFieldList\n\n\nstring[]\n\n\n\n\n[optional]\n\n\n\n\n\n\ncrop\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nvideoCodec\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nheight\n\n\nint\n\n\n\n\n\n\n\n\n\n\nsourceRectangle\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "TranscoderEncodeAppConfig"
        }, 
        {
            "location": "/legacy-docs/Model/TranscoderEncodeAppConfig/#transcoderencodeappconfig", 
            "text": "", 
            "title": "TranscoderEncodeAppConfig"
        }, 
        {
            "location": "/legacy-docs/Model/TranscoderEncodeAppConfig/#properties", 
            "text": "Name  Type  Description  Notes      followSource  bool      implementation  string      gpuid  int      profile  string      serverName  string      description  string      audioCodec  string      version  string      streamName  string      overlays  \\Model\\TranscoderOverlayEncodeConfig[]      audioBitrate  string      videoBitrate  string      enable  bool      name  string      width  int      interval  int      fitMode  string      saveFieldList  string[]   [optional]    crop  string      videoCodec  string      height  int      sourceRectangle  string       [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }, 
        {
            "location": "/legacy-docs/Model/TranscoderEncodeAppConfigAdv/", 
            "text": "TranscoderEncodeAppConfigAdv\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nadvancedSettings\n\n\n\\Model\\AdvancedSetting[]\n\n\n\n\n\n\n\n\n\n\nname\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nsaveFieldList\n\n\nstring[]\n\n\n\n\n[optional]\n\n\n\n\n\n\nversion\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "TranscoderEncodeAppConfigAdv"
        }, 
        {
            "location": "/legacy-docs/Model/TranscoderEncodeAppConfigAdv/#transcoderencodeappconfigadv", 
            "text": "", 
            "title": "TranscoderEncodeAppConfigAdv"
        }, 
        {
            "location": "/legacy-docs/Model/TranscoderEncodeAppConfigAdv/#properties", 
            "text": "Name  Type  Description  Notes      advancedSettings  \\Model\\AdvancedSetting[]      name  string      serverName  string      saveFieldList  string[]   [optional]    version  string       [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }, 
        {
            "location": "/legacy-docs/Model/TranscoderEncodeConfig/", 
            "text": "TranscoderEncodeConfig\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nfollowSource\n\n\nbool\n\n\n\n\n\n\n\n\n\n\nimplementation\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ngpuid\n\n\nint\n\n\n\n\n\n\n\n\n\n\nprofile\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ndescription\n\n\nstring\n\n\n\n\n\n\n\n\n\n\naudioCodec\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nversion\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nstreamName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\noverlays\n\n\n\\Model\\TranscoderOverlayEncodeConfig[]\n\n\n\n\n\n\n\n\n\n\naudioBitrate\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nvideoBitrate\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nenable\n\n\nbool\n\n\n\n\n\n\n\n\n\n\nname\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nwidth\n\n\nint\n\n\n\n\n\n\n\n\n\n\ninterval\n\n\nint\n\n\n\n\n\n\n\n\n\n\nfitMode\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nsaveFieldList\n\n\nstring[]\n\n\n\n\n[optional]\n\n\n\n\n\n\ncrop\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nvideoCodec\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nheight\n\n\nint\n\n\n\n\n\n\n\n\n\n\nsourceRectangle\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "TranscoderEncodeConfig"
        }, 
        {
            "location": "/legacy-docs/Model/TranscoderEncodeConfig/#transcoderencodeconfig", 
            "text": "", 
            "title": "TranscoderEncodeConfig"
        }, 
        {
            "location": "/legacy-docs/Model/TranscoderEncodeConfig/#properties", 
            "text": "Name  Type  Description  Notes      followSource  bool      implementation  string      gpuid  int      profile  string      serverName  string      description  string      audioCodec  string      version  string      streamName  string      overlays  \\Model\\TranscoderOverlayEncodeConfig[]      audioBitrate  string      videoBitrate  string      enable  bool      name  string      width  int      interval  int      fitMode  string      saveFieldList  string[]   [optional]    crop  string      videoCodec  string      height  int      sourceRectangle  string       [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }, 
        {
            "location": "/legacy-docs/Model/TranscoderEncodeConfigAdv/", 
            "text": "TranscoderEncodeConfigAdv\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nadvancedSettings\n\n\n\\Model\\AdvancedSetting[]\n\n\n\n\n\n\n\n\n\n\nname\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nsaveFieldList\n\n\nstring[]\n\n\n\n\n[optional]\n\n\n\n\n\n\nversion\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "TranscoderEncodeConfigAdv"
        }, 
        {
            "location": "/legacy-docs/Model/TranscoderEncodeConfigAdv/#transcoderencodeconfigadv", 
            "text": "", 
            "title": "TranscoderEncodeConfigAdv"
        }, 
        {
            "location": "/legacy-docs/Model/TranscoderEncodeConfigAdv/#properties", 
            "text": "Name  Type  Description  Notes      advancedSettings  \\Model\\AdvancedSetting[]      name  string      serverName  string      saveFieldList  string[]   [optional]    version  string       [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }, 
        {
            "location": "/legacy-docs/Model/TranscoderEncodesAppConfig/", 
            "text": "TranscoderEncodesAppConfig\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nsaveFieldList\n\n\nstring[]\n\n\n\n\n[optional]\n\n\n\n\n\n\nencodes\n\n\n\\Model\\ShortObject[]\n\n\n\n\n\n\n\n\n\n\nversion\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "TranscoderEncodesAppConfig"
        }, 
        {
            "location": "/legacy-docs/Model/TranscoderEncodesAppConfig/#transcoderencodesappconfig", 
            "text": "", 
            "title": "TranscoderEncodesAppConfig"
        }, 
        {
            "location": "/legacy-docs/Model/TranscoderEncodesAppConfig/#properties", 
            "text": "Name  Type  Description  Notes      serverName  string      saveFieldList  string[]   [optional]    encodes  \\Model\\ShortObject[]      version  string       [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }, 
        {
            "location": "/legacy-docs/Model/TranscoderEncodesConfig/", 
            "text": "TranscoderEncodesConfig\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nsaveFieldList\n\n\nstring[]\n\n\n\n\n[optional]\n\n\n\n\n\n\nencodes\n\n\n\\Model\\ShortObject[]\n\n\n\n\n\n\n\n\n\n\nversion\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "TranscoderEncodesConfig"
        }, 
        {
            "location": "/legacy-docs/Model/TranscoderEncodesConfig/#transcoderencodesconfig", 
            "text": "", 
            "title": "TranscoderEncodesConfig"
        }, 
        {
            "location": "/legacy-docs/Model/TranscoderEncodesConfig/#properties", 
            "text": "Name  Type  Description  Notes      serverName  string      saveFieldList  string[]   [optional]    encodes  \\Model\\ShortObject[]      version  string       [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }, 
        {
            "location": "/legacy-docs/Model/TranscoderMemberConfig/", 
            "text": "TranscoderMemberConfig\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nwowzaVideoOnly\n\n\nbool\n\n\n\n\n\n\n\n\n\n\nencodeName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nwowzaAudioOnly\n\n\nbool\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nmemberName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nsaveFieldList\n\n\nstring[]\n\n\n\n\n[optional]\n\n\n\n\n\n\nversion\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "TranscoderMemberConfig"
        }, 
        {
            "location": "/legacy-docs/Model/TranscoderMemberConfig/#transcodermemberconfig", 
            "text": "", 
            "title": "TranscoderMemberConfig"
        }, 
        {
            "location": "/legacy-docs/Model/TranscoderMemberConfig/#properties", 
            "text": "Name  Type  Description  Notes      wowzaVideoOnly  bool      encodeName  string      wowzaAudioOnly  bool      serverName  string      memberName  string      saveFieldList  string[]   [optional]    version  string       [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }, 
        {
            "location": "/legacy-docs/Model/TranscoderOverlayDecodeAppConfig/", 
            "text": "TranscoderOverlayDecodeAppConfig\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\noverlayName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nimagePath\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ndescription\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nindex\n\n\nint\n\n\n\n\n\n\n\n\n\n\nalign\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nversion\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nenable\n\n\nbool\n\n\n\n\n\n\n\n\n\n\nx\n\n\nint\n\n\n\n\n\n\n\n\n\n\nwidth\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ny\n\n\nint\n\n\n\n\n\n\n\n\n\n\nsaveFieldList\n\n\nstring[]\n\n\n\n\n[optional]\n\n\n\n\n\n\ncheckForUpdates\n\n\nbool\n\n\n\n\n\n\n\n\n\n\nopacity\n\n\nint\n\n\n\n\n\n\n\n\n\n\nheight\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "TranscoderOverlayDecodeAppConfig"
        }, 
        {
            "location": "/legacy-docs/Model/TranscoderOverlayDecodeAppConfig/#transcoderoverlaydecodeappconfig", 
            "text": "", 
            "title": "TranscoderOverlayDecodeAppConfig"
        }, 
        {
            "location": "/legacy-docs/Model/TranscoderOverlayDecodeAppConfig/#properties", 
            "text": "Name  Type  Description  Notes      overlayName  string      imagePath  string      serverName  string      description  string      index  int      align  string      version  string      enable  bool      x  int      width  string      y  int      saveFieldList  string[]   [optional]    checkForUpdates  bool      opacity  int      height  string       [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }, 
        {
            "location": "/legacy-docs/Model/TranscoderOverlayDecodeConfig/", 
            "text": "TranscoderOverlayDecodeConfig\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\noverlayName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nimagePath\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ndescription\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nindex\n\n\nint\n\n\n\n\n\n\n\n\n\n\nalign\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nversion\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nenable\n\n\nbool\n\n\n\n\n\n\n\n\n\n\nx\n\n\nint\n\n\n\n\n\n\n\n\n\n\nwidth\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ny\n\n\nint\n\n\n\n\n\n\n\n\n\n\nsaveFieldList\n\n\nstring[]\n\n\n\n\n[optional]\n\n\n\n\n\n\ncheckForUpdates\n\n\nbool\n\n\n\n\n\n\n\n\n\n\nopacity\n\n\nint\n\n\n\n\n\n\n\n\n\n\nheight\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "TranscoderOverlayDecodeConfig"
        }, 
        {
            "location": "/legacy-docs/Model/TranscoderOverlayDecodeConfig/#transcoderoverlaydecodeconfig", 
            "text": "", 
            "title": "TranscoderOverlayDecodeConfig"
        }, 
        {
            "location": "/legacy-docs/Model/TranscoderOverlayDecodeConfig/#properties", 
            "text": "Name  Type  Description  Notes      overlayName  string      imagePath  string      serverName  string      description  string      index  int      align  string      version  string      enable  bool      x  int      width  string      y  int      saveFieldList  string[]   [optional]    checkForUpdates  bool      opacity  int      height  string       [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }, 
        {
            "location": "/legacy-docs/Model/TranscoderOverlayEncodeAppConfig/", 
            "text": "TranscoderOverlayEncodeAppConfig\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\noverlayName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nimagePath\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ndescription\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nindex\n\n\nint\n\n\n\n\n\n\n\n\n\n\nalign\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nversion\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nenable\n\n\nbool\n\n\n\n\n\n\n\n\n\n\nx\n\n\nint\n\n\n\n\n\n\n\n\n\n\nwidth\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nname\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ny\n\n\nint\n\n\n\n\n\n\n\n\n\n\nsaveFieldList\n\n\nstring[]\n\n\n\n\n[optional]\n\n\n\n\n\n\ncheckForUpdates\n\n\nbool\n\n\n\n\n\n\n\n\n\n\nopacity\n\n\nint\n\n\n\n\n\n\n\n\n\n\nheight\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "TranscoderOverlayEncodeAppConfig"
        }, 
        {
            "location": "/legacy-docs/Model/TranscoderOverlayEncodeAppConfig/#transcoderoverlayencodeappconfig", 
            "text": "", 
            "title": "TranscoderOverlayEncodeAppConfig"
        }, 
        {
            "location": "/legacy-docs/Model/TranscoderOverlayEncodeAppConfig/#properties", 
            "text": "Name  Type  Description  Notes      overlayName  string      imagePath  string      serverName  string      description  string      index  int      align  string      version  string      enable  bool      x  int      width  string      name  string      y  int      saveFieldList  string[]   [optional]    checkForUpdates  bool      opacity  int      height  string       [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }, 
        {
            "location": "/legacy-docs/Model/TranscoderOverlayEncodeConfig/", 
            "text": "TranscoderOverlayEncodeConfig\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\noverlayName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nimagePath\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ndescription\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nindex\n\n\nint\n\n\n\n\n\n\n\n\n\n\nalign\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nversion\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nenable\n\n\nbool\n\n\n\n\n\n\n\n\n\n\nx\n\n\nint\n\n\n\n\n\n\n\n\n\n\nwidth\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nname\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ny\n\n\nint\n\n\n\n\n\n\n\n\n\n\nsaveFieldList\n\n\nstring[]\n\n\n\n\n[optional]\n\n\n\n\n\n\ncheckForUpdates\n\n\nbool\n\n\n\n\n\n\n\n\n\n\nopacity\n\n\nint\n\n\n\n\n\n\n\n\n\n\nheight\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "TranscoderOverlayEncodeConfig"
        }, 
        {
            "location": "/legacy-docs/Model/TranscoderOverlayEncodeConfig/#transcoderoverlayencodeconfig", 
            "text": "", 
            "title": "TranscoderOverlayEncodeConfig"
        }, 
        {
            "location": "/legacy-docs/Model/TranscoderOverlayEncodeConfig/#properties", 
            "text": "Name  Type  Description  Notes      overlayName  string      imagePath  string      serverName  string      description  string      index  int      align  string      version  string      enable  bool      x  int      width  string      name  string      y  int      saveFieldList  string[]   [optional]    checkForUpdates  bool      opacity  int      height  string       [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }, 
        {
            "location": "/legacy-docs/Model/TranscoderStreamNameGroupAppConfig/", 
            "text": "TranscoderStreamNameGroupAppConfig\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nname\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ndescription\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nsaveFieldList\n\n\nstring[]\n\n\n\n\n[optional]\n\n\n\n\n\n\nversion\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nstreamName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nmembers\n\n\n\\Model\\TranscoderMemberConfig[]\n\n\n\n\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "TranscoderStreamNameGroupAppConfig"
        }, 
        {
            "location": "/legacy-docs/Model/TranscoderStreamNameGroupAppConfig/#transcoderstreamnamegroupappconfig", 
            "text": "", 
            "title": "TranscoderStreamNameGroupAppConfig"
        }, 
        {
            "location": "/legacy-docs/Model/TranscoderStreamNameGroupAppConfig/#properties", 
            "text": "Name  Type  Description  Notes      name  string      serverName  string      description  string      saveFieldList  string[]   [optional]    version  string      streamName  string      members  \\Model\\TranscoderMemberConfig[]       [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }, 
        {
            "location": "/legacy-docs/Model/TranscoderStreamNameGroupConfig/", 
            "text": "TranscoderStreamNameGroupConfig\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nname\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ndescription\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nsaveFieldList\n\n\nstring[]\n\n\n\n\n[optional]\n\n\n\n\n\n\nversion\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nstreamName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nmembers\n\n\n\\Model\\TranscoderMemberConfig[]\n\n\n\n\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "TranscoderStreamNameGroupConfig"
        }, 
        {
            "location": "/legacy-docs/Model/TranscoderStreamNameGroupConfig/#transcoderstreamnamegroupconfig", 
            "text": "", 
            "title": "TranscoderStreamNameGroupConfig"
        }, 
        {
            "location": "/legacy-docs/Model/TranscoderStreamNameGroupConfig/#properties", 
            "text": "Name  Type  Description  Notes      name  string      serverName  string      description  string      saveFieldList  string[]   [optional]    version  string      streamName  string      members  \\Model\\TranscoderMemberConfig[]       [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }, 
        {
            "location": "/legacy-docs/Model/TranscoderStreamNameGroupsAppConfig/", 
            "text": "TranscoderStreamNameGroupsAppConfig\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nstreamNameGroups\n\n\n\\Model\\ShortObject[]\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nsaveFieldList\n\n\nstring[]\n\n\n\n\n[optional]\n\n\n\n\n\n\nversion\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "TranscoderStreamNameGroupsAppConfig"
        }, 
        {
            "location": "/legacy-docs/Model/TranscoderStreamNameGroupsAppConfig/#transcoderstreamnamegroupsappconfig", 
            "text": "", 
            "title": "TranscoderStreamNameGroupsAppConfig"
        }, 
        {
            "location": "/legacy-docs/Model/TranscoderStreamNameGroupsAppConfig/#properties", 
            "text": "Name  Type  Description  Notes      streamNameGroups  \\Model\\ShortObject[]      serverName  string      saveFieldList  string[]   [optional]    version  string       [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }, 
        {
            "location": "/legacy-docs/Model/TranscoderStreamNameGroupsConfig/", 
            "text": "TranscoderStreamNameGroupsConfig\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nstreamNameGroups\n\n\n\\Model\\ShortObject[]\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nsaveFieldList\n\n\nstring[]\n\n\n\n\n[optional]\n\n\n\n\n\n\nversion\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "TranscoderStreamNameGroupsConfig"
        }, 
        {
            "location": "/legacy-docs/Model/TranscoderStreamNameGroupsConfig/#transcoderstreamnamegroupsconfig", 
            "text": "", 
            "title": "TranscoderStreamNameGroupsConfig"
        }, 
        {
            "location": "/legacy-docs/Model/TranscoderStreamNameGroupsConfig/#properties", 
            "text": "Name  Type  Description  Notes      streamNameGroups  \\Model\\ShortObject[]      serverName  string      saveFieldList  string[]   [optional]    version  string       [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }, 
        {
            "location": "/legacy-docs/Model/TranscoderTemplateAction/", 
            "text": "TranscoderTemplateAction\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ntemplateName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "TranscoderTemplateAction"
        }, 
        {
            "location": "/legacy-docs/Model/TranscoderTemplateAction/#transcodertemplateaction", 
            "text": "", 
            "title": "TranscoderTemplateAction"
        }, 
        {
            "location": "/legacy-docs/Model/TranscoderTemplateAction/#properties", 
            "text": "Name  Type  Description  Notes      vhostName  string      templateName  string      serverName  string       [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }, 
        {
            "location": "/legacy-docs/Model/TranscoderTemplateAppAction/", 
            "text": "TranscoderTemplateAppAction\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ntemplateName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nappName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "TranscoderTemplateAppAction"
        }, 
        {
            "location": "/legacy-docs/Model/TranscoderTemplateAppAction/#transcodertemplateappaction", 
            "text": "", 
            "title": "TranscoderTemplateAppAction"
        }, 
        {
            "location": "/legacy-docs/Model/TranscoderTemplateAppAction/#properties", 
            "text": "Name  Type  Description  Notes      vhostName  string      templateName  string      appName  string      serverName  string       [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }, 
        {
            "location": "/legacy-docs/Model/TranscoderTemplateAppConfig/", 
            "text": "TranscoderTemplateAppConfig\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nstreamNameGroups\n\n\n\\Model\\TranscoderStreamNameGroupConfig[]\n\n\n\n\n\n\n\n\n\n\ndeinterlace\n\n\nbool\n\n\n\n\n\n\n\n\n\n\nimplementation\n\n\nstring\n\n\n\n\n\n\n\n\n\n\noverlays\n\n\n\\Model\\TranscoderOverlayDecodeConfig[]\n\n\n\n\n\n\n\n\n\n\nname\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ndescription\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nsaveFieldList\n\n\nstring[]\n\n\n\n\n[optional]\n\n\n\n\n\n\nencodes\n\n\n\\Model\\TranscoderEncodeConfig[]\n\n\n\n\n\n\n\n\n\n\nversion\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "TranscoderTemplateAppConfig"
        }, 
        {
            "location": "/legacy-docs/Model/TranscoderTemplateAppConfig/#transcodertemplateappconfig", 
            "text": "", 
            "title": "TranscoderTemplateAppConfig"
        }, 
        {
            "location": "/legacy-docs/Model/TranscoderTemplateAppConfig/#properties", 
            "text": "Name  Type  Description  Notes      streamNameGroups  \\Model\\TranscoderStreamNameGroupConfig[]      deinterlace  bool      implementation  string      overlays  \\Model\\TranscoderOverlayDecodeConfig[]      name  string      serverName  string      description  string      saveFieldList  string[]   [optional]    encodes  \\Model\\TranscoderEncodeConfig[]      version  string       [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }, 
        {
            "location": "/legacy-docs/Model/TranscoderTemplateAppConfigAdv/", 
            "text": "TranscoderTemplateAppConfigAdv\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nadvancedSettings\n\n\n\\Model\\AdvancedSetting[]\n\n\n\n\n\n\n\n\n\n\nname\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nsaveFieldList\n\n\nstring[]\n\n\n\n\n[optional]\n\n\n\n\n\n\nversion\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "TranscoderTemplateAppConfigAdv"
        }, 
        {
            "location": "/legacy-docs/Model/TranscoderTemplateAppConfigAdv/#transcodertemplateappconfigadv", 
            "text": "", 
            "title": "TranscoderTemplateAppConfigAdv"
        }, 
        {
            "location": "/legacy-docs/Model/TranscoderTemplateAppConfigAdv/#properties", 
            "text": "Name  Type  Description  Notes      advancedSettings  \\Model\\AdvancedSetting[]      name  string      serverName  string      saveFieldList  string[]   [optional]    version  string       [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }, 
        {
            "location": "/legacy-docs/Model/TranscoderTemplateConfig/", 
            "text": "TranscoderTemplateConfig\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nstreamNameGroups\n\n\n\\Model\\TranscoderStreamNameGroupConfig[]\n\n\n\n\n\n\n\n\n\n\ndeinterlace\n\n\nbool\n\n\n\n\n\n\n\n\n\n\nimplementation\n\n\nstring\n\n\n\n\n\n\n\n\n\n\noverlays\n\n\n\\Model\\TranscoderOverlayDecodeConfig[]\n\n\n\n\n\n\n\n\n\n\nname\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ndescription\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nsaveFieldList\n\n\nstring[]\n\n\n\n\n[optional]\n\n\n\n\n\n\nencodes\n\n\n\\Model\\TranscoderEncodeConfig[]\n\n\n\n\n\n\n\n\n\n\nversion\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "TranscoderTemplateConfig"
        }, 
        {
            "location": "/legacy-docs/Model/TranscoderTemplateConfig/#transcodertemplateconfig", 
            "text": "", 
            "title": "TranscoderTemplateConfig"
        }, 
        {
            "location": "/legacy-docs/Model/TranscoderTemplateConfig/#properties", 
            "text": "Name  Type  Description  Notes      streamNameGroups  \\Model\\TranscoderStreamNameGroupConfig[]      deinterlace  bool      implementation  string      overlays  \\Model\\TranscoderOverlayDecodeConfig[]      name  string      serverName  string      description  string      saveFieldList  string[]   [optional]    encodes  \\Model\\TranscoderEncodeConfig[]      version  string       [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }, 
        {
            "location": "/legacy-docs/Model/TranscoderTemplateConfigAdv/", 
            "text": "TranscoderTemplateConfigAdv\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nadvancedSettings\n\n\n\\Model\\AdvancedSetting[]\n\n\n\n\n\n\n\n\n\n\nname\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nsaveFieldList\n\n\nstring[]\n\n\n\n\n[optional]\n\n\n\n\n\n\nversion\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "TranscoderTemplateConfigAdv"
        }, 
        {
            "location": "/legacy-docs/Model/TranscoderTemplateConfigAdv/#transcodertemplateconfigadv", 
            "text": "", 
            "title": "TranscoderTemplateConfigAdv"
        }, 
        {
            "location": "/legacy-docs/Model/TranscoderTemplateConfigAdv/#properties", 
            "text": "Name  Type  Description  Notes      advancedSettings  \\Model\\AdvancedSetting[]      name  string      serverName  string      saveFieldList  string[]   [optional]    version  string       [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }, 
        {
            "location": "/legacy-docs/Model/TranscoderTemplatesAppConfig/", 
            "text": "TranscoderTemplatesAppConfig\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ntemplates\n\n\n\\Model\\ShortObject[]\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nsaveFieldList\n\n\nstring[]\n\n\n\n\n[optional]\n\n\n\n\n\n\nversion\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "TranscoderTemplatesAppConfig"
        }, 
        {
            "location": "/legacy-docs/Model/TranscoderTemplatesAppConfig/#transcodertemplatesappconfig", 
            "text": "", 
            "title": "TranscoderTemplatesAppConfig"
        }, 
        {
            "location": "/legacy-docs/Model/TranscoderTemplatesAppConfig/#properties", 
            "text": "Name  Type  Description  Notes      vhostName  string      templates  \\Model\\ShortObject[]      serverName  string      saveFieldList  string[]   [optional]    version  string       [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }, 
        {
            "location": "/legacy-docs/Model/TranscoderTemplatesConfig/", 
            "text": "TranscoderTemplatesConfig\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ntemplates\n\n\n\\Model\\ShortObject[]\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nsaveFieldList\n\n\nstring[]\n\n\n\n\n[optional]\n\n\n\n\n\n\nversion\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "TranscoderTemplatesConfig"
        }, 
        {
            "location": "/legacy-docs/Model/TranscoderTemplatesConfig/#transcodertemplatesconfig", 
            "text": "", 
            "title": "TranscoderTemplatesConfig"
        }, 
        {
            "location": "/legacy-docs/Model/TranscoderTemplatesConfig/#properties", 
            "text": "Name  Type  Description  Notes      vhostName  string      templates  \\Model\\ShortObject[]      serverName  string      saveFieldList  string[]   [optional]    version  string       [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }, 
        {
            "location": "/legacy-docs/Model/UserConfig/", 
            "text": "UserConfig\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\npassword\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ndescription\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ngroups\n\n\nstring[]\n\n\n\n\n\n\n\n\n\n\nsaveFieldList\n\n\nstring[]\n\n\n\n\n[optional]\n\n\n\n\n\n\nuserName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nversion\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "UserConfig"
        }, 
        {
            "location": "/legacy-docs/Model/UserConfig/#userconfig", 
            "text": "", 
            "title": "UserConfig"
        }, 
        {
            "location": "/legacy-docs/Model/UserConfig/#properties", 
            "text": "Name  Type  Description  Notes      password  string      serverName  string      description  string      groups  string[]      saveFieldList  string[]   [optional]    userName  string      version  string       [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }, 
        {
            "location": "/legacy-docs/Model/UsersConfig/", 
            "text": "UsersConfig\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nsaveFieldList\n\n\nstring[]\n\n\n\n\n[optional]\n\n\n\n\n\n\nversion\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nusers\n\n\n\\Model\\UserConfig[]\n\n\n\n\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "UsersConfig"
        }, 
        {
            "location": "/legacy-docs/Model/UsersConfig/#usersconfig", 
            "text": "", 
            "title": "UsersConfig"
        }, 
        {
            "location": "/legacy-docs/Model/UsersConfig/#properties", 
            "text": "Name  Type  Description  Notes      serverName  string      saveFieldList  string[]   [optional]    version  string      users  \\Model\\UserConfig[]       [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }, 
        {
            "location": "/legacy-docs/Model/VHostAction/", 
            "text": "VHostAction\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "VHostAction"
        }, 
        {
            "location": "/legacy-docs/Model/VHostAction/#vhostaction", 
            "text": "", 
            "title": "VHostAction"
        }, 
        {
            "location": "/legacy-docs/Model/VHostAction/#properties", 
            "text": "Name  Type  Description  Notes      vhostName  string      serverName  string       [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }, 
        {
            "location": "/legacy-docs/Model/VHostConfig/", 
            "text": "VHostConfig\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\ntestPlayerSSLEnable\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nsecurityPublishValidEncoders\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ndescription\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nmaximumConcurrentTranscodes\n\n\nint\n\n\n\n\n\n\n\n\n\n\nversion\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nconfigurationDir\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ntestPlayerPort\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nrunning\n\n\nbool\n\n\n\n\n\n\n\n\n\n\nhostPorts\n\n\n\\Model\\HostPortConfig[]\n\n\n\n\n\n\n\n\n\n\nconnectionLimit\n\n\nint\n\n\n\n\n\n\n\n\n\n\ntestPlayerIPAddress\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nname\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nsaveFieldList\n\n\nstring[]\n\n\n\n\n[optional]\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "VHostConfig"
        }, 
        {
            "location": "/legacy-docs/Model/VHostConfig/#vhostconfig", 
            "text": "", 
            "title": "VHostConfig"
        }, 
        {
            "location": "/legacy-docs/Model/VHostConfig/#properties", 
            "text": "Name  Type  Description  Notes      testPlayerSSLEnable  string      securityPublishValidEncoders  string      serverName  string      description  string      maximumConcurrentTranscodes  int      version  string      configurationDir  string      testPlayerPort  string      running  bool      hostPorts  \\Model\\HostPortConfig[]      connectionLimit  int      testPlayerIPAddress  string      name  string      saveFieldList  string[]   [optional]     [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }, 
        {
            "location": "/legacy-docs/Model/VHostConfigAdv/", 
            "text": "VHostConfigAdv\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nadvancedSettings\n\n\n\\Model\\AdvancedSetting[]\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nsaveFieldList\n\n\nstring[]\n\n\n\n\n[optional]\n\n\n\n\n\n\nversion\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "VHostConfigAdv"
        }, 
        {
            "location": "/legacy-docs/Model/VHostConfigAdv/#vhostconfigadv", 
            "text": "", 
            "title": "VHostConfigAdv"
        }, 
        {
            "location": "/legacy-docs/Model/VHostConfigAdv/#properties", 
            "text": "Name  Type  Description  Notes      advancedSettings  \\Model\\AdvancedSetting[]      serverName  string      saveFieldList  string[]   [optional]    version  string       [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }, 
        {
            "location": "/legacy-docs/Model/VHostShortObject/", 
            "text": "VHostShortObject\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nconnectingSSLEnable\n\n\nbool\n\n\n\n\n\n\n\n\n\n\nconnectingIPAddress\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nconnectingPort\n\n\nint\n\n\n\n\n\n\n\n\n\n\nid\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nhref\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "VHostShortObject"
        }, 
        {
            "location": "/legacy-docs/Model/VHostShortObject/#vhostshortobject", 
            "text": "", 
            "title": "VHostShortObject"
        }, 
        {
            "location": "/legacy-docs/Model/VHostShortObject/#properties", 
            "text": "Name  Type  Description  Notes      connectingSSLEnable  bool      connectingIPAddress  string      connectingPort  int      id  string      href  string       [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }, 
        {
            "location": "/legacy-docs/Model/VHostTuneConfig/", 
            "text": "VHostTuneConfig\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nmulticastOutgoingProcessorCountAutoValue\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nnetConnectionsProcessorCountAutoValue\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nidleWorkerCountAutoValue\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nunicastIncomingProcessorCountAutoValue\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nunicastOutgoingProcessorCountAutoValue\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nmediaCasterProcessorCount\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nmulticastOutgoingProcessorCount\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nmulticastIncomingProcessorCountAutoValue\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nversion\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nnetConnectionsProcessorCount\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nunicastOutgoingProcessorCount\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nmediaCasterProcessorCountAutoValue\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nidleWorkerCount\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ntransportThreadPoolSize\n\n\nint\n\n\n\n\n\n\n\n\n\n\nclientIdleFrequency\n\n\nint\n\n\n\n\n\n\n\n\n\n\nname\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nunicastIncomingProcessorCount\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nsaveFieldList\n\n\nstring[]\n\n\n\n\n[optional]\n\n\n\n\n\n\nmulticastIncomingProcessorCount\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nrtpIdleFrequency\n\n\nint\n\n\n\n\n\n\n\n\n\n\nhandlerThreadPoolSize\n\n\nint\n\n\n\n\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "VHostTuneConfig"
        }, 
        {
            "location": "/legacy-docs/Model/VHostTuneConfig/#vhosttuneconfig", 
            "text": "", 
            "title": "VHostTuneConfig"
        }, 
        {
            "location": "/legacy-docs/Model/VHostTuneConfig/#properties", 
            "text": "Name  Type  Description  Notes      multicastOutgoingProcessorCountAutoValue  string      netConnectionsProcessorCountAutoValue  string      idleWorkerCountAutoValue  string      unicastIncomingProcessorCountAutoValue  string      unicastOutgoingProcessorCountAutoValue  string      mediaCasterProcessorCount  string      serverName  string      multicastOutgoingProcessorCount  string      multicastIncomingProcessorCountAutoValue  string      version  string      netConnectionsProcessorCount  string      unicastOutgoingProcessorCount  string      mediaCasterProcessorCountAutoValue  string      idleWorkerCount  string      transportThreadPoolSize  int      clientIdleFrequency  int      name  string      unicastIncomingProcessorCount  string      saveFieldList  string[]   [optional]    multicastIncomingProcessorCount  string      rtpIdleFrequency  int      handlerThreadPoolSize  int       [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }, 
        {
            "location": "/legacy-docs/Model/VHostsConfig/", 
            "text": "VHostsConfig\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nsaveFieldList\n\n\nstring[]\n\n\n\n\n[optional]\n\n\n\n\n\n\nvhosts\n\n\n\\Model\\VHostShortObject[]\n\n\n\n\n\n\n\n\n\n\nversion\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "VHostsConfig"
        }, 
        {
            "location": "/legacy-docs/Model/VHostsConfig/#vhostsconfig", 
            "text": "", 
            "title": "VHostsConfig"
        }, 
        {
            "location": "/legacy-docs/Model/VHostsConfig/#properties", 
            "text": "Name  Type  Description  Notes      serverName  string      saveFieldList  string[]   [optional]    vhosts  \\Model\\VHostShortObject[]      version  string       [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }, 
        {
            "location": "/legacy-docs/Model/VerimatrixStreamMapConfig/", 
            "text": "VerimatrixStreamMapConfig\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nposCount\n\n\nint\n\n\n\n\n\n\n\n\n\n\nkeyInterval\n\n\nint\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nsaveFieldList\n\n\nstring[]\n\n\n\n\n[optional]\n\n\n\n\n\n\nversion\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nstreamName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nresID\n\n\nstring\n\n\n\n\n\n\n\n\n\n\norder\n\n\nint\n\n\n\n\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "VerimatrixStreamMapConfig"
        }, 
        {
            "location": "/legacy-docs/Model/VerimatrixStreamMapConfig/#verimatrixstreammapconfig", 
            "text": "", 
            "title": "VerimatrixStreamMapConfig"
        }, 
        {
            "location": "/legacy-docs/Model/VerimatrixStreamMapConfig/#properties", 
            "text": "Name  Type  Description  Notes      posCount  int      keyInterval  int      serverName  string      saveFieldList  string[]   [optional]    version  string      streamName  string      resID  string      order  int       [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }, 
        {
            "location": "/legacy-docs/Model/VerimatrixStreamMapsConfig/", 
            "text": "VerimatrixStreamMapsConfig\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nfilename\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nsaveFieldList\n\n\nstring[]\n\n\n\n\n[optional]\n\n\n\n\n\n\nversion\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nverimatrixStreamMaps\n\n\n\\Model\\VerimatrixStreamMapsConfigVerimatrixStreamMapConfig[]\n\n\n\n\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "VerimatrixStreamMapsConfig"
        }, 
        {
            "location": "/legacy-docs/Model/VerimatrixStreamMapsConfig/#verimatrixstreammapsconfig", 
            "text": "", 
            "title": "VerimatrixStreamMapsConfig"
        }, 
        {
            "location": "/legacy-docs/Model/VerimatrixStreamMapsConfig/#properties", 
            "text": "Name  Type  Description  Notes      filename  string      serverName  string      saveFieldList  string[]   [optional]    version  string      verimatrixStreamMaps  \\Model\\VerimatrixStreamMapsConfigVerimatrixStreamMapConfig[]       [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }, 
        {
            "location": "/legacy-docs/Model/VideoSettings/", 
            "text": "VideoSettings\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nframerate\n\n\ndouble\n\n\n\n\n\n\n\n\n\n\nwidth\n\n\nint\n\n\n\n\n\n\n\n\n\n\nbitrate\n\n\nint\n\n\n\n\n\n\n\n\n\n\nheight\n\n\nint\n\n\n\n\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "VideoSettings"
        }, 
        {
            "location": "/legacy-docs/Model/VideoSettings/#videosettings", 
            "text": "", 
            "title": "VideoSettings"
        }, 
        {
            "location": "/legacy-docs/Model/VideoSettings/#properties", 
            "text": "Name  Type  Description  Notes      framerate  double      width  int      bitrate  int      height  int       [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }, 
        {
            "location": "/legacy-docs/Model/WMSLoggerConfig/", 
            "text": "WMSLoggerConfig\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nlogLevel\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nname\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nsaveFieldList\n\n\nstring[]\n\n\n\n\n[optional]\n\n\n\n\n\n\nversion\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "WMSLoggerConfig"
        }, 
        {
            "location": "/legacy-docs/Model/WMSLoggerConfig/#wmsloggerconfig", 
            "text": "", 
            "title": "WMSLoggerConfig"
        }, 
        {
            "location": "/legacy-docs/Model/WMSLoggerConfig/#properties", 
            "text": "Name  Type  Description  Notes      logLevel  string      name  string      serverName  string      saveFieldList  string[]   [optional]    version  string       [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }, 
        {
            "location": "/legacy-docs/Model/AdvancedSetting/", 
            "text": "AdvancedSetting\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nsectionName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ncanRemove\n\n\nbool\n\n\n\n\n\n\n\n\n\n\ndefaultValue\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ndocumented\n\n\nbool\n\n\n\n\n\n\n\n\n\n\nname\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nsection\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ntype\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nvalue\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nenabled\n\n\nbool\n\n\n\n\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "AdvancedSetting"
        }, 
        {
            "location": "/legacy-docs/Model/AdvancedSetting/#advancedsetting", 
            "text": "", 
            "title": "AdvancedSetting"
        }, 
        {
            "location": "/legacy-docs/Model/AdvancedSetting/#properties", 
            "text": "Name  Type  Description  Notes      sectionName  string      canRemove  bool      defaultValue  string      documented  bool      name  string      section  string      type  string      value  string      enabled  bool       [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }, 
        {
            "location": "/legacy-docs/Model/AppShortObject/", 
            "text": "AppShortObject\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\ndrmEnabled\n\n\nbool\n\n\n\n\n\n\n\n\n\n\nstreamTargetsEnabled\n\n\nbool\n\n\n\n\n\n\n\n\n\n\nappType\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ntranscoderEnabled\n\n\nbool\n\n\n\n\n\n\n\n\n\n\ndvrEnabled\n\n\nbool\n\n\n\n\n\n\n\n\n\n\nid\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nhref\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "AppShortObject"
        }, 
        {
            "location": "/legacy-docs/Model/AppShortObject/#appshortobject", 
            "text": "", 
            "title": "AppShortObject"
        }, 
        {
            "location": "/legacy-docs/Model/AppShortObject/#properties", 
            "text": "Name  Type  Description  Notes      drmEnabled  bool      streamTargetsEnabled  bool      appType  string      transcoderEnabled  bool      dvrEnabled  bool      id  string      href  string       [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }, 
        {
            "location": "/legacy-docs/Model/ApplicationAction/", 
            "text": "ApplicationAction\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nappName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "ApplicationAction"
        }, 
        {
            "location": "/legacy-docs/Model/ApplicationAction/#applicationaction", 
            "text": "", 
            "title": "ApplicationAction"
        }, 
        {
            "location": "/legacy-docs/Model/ApplicationAction/#properties", 
            "text": "Name  Type  Description  Notes      vhostName  string      appName  string      serverName  string       [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }, 
        {
            "location": "/legacy-docs/Model/ApplicationConfig/", 
            "text": "ApplicationConfig\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nhttpOptimizeFileReads\n\n\nbool\n\n\n\n\n\n\n\n\n\n\ncaptionLiveIngestType\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nstreamConfig\n\n\n\\Model\\StreamConfigurationConfig\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ndescription\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nmediaCacheSourceList\n\n\nstring[]\n\n\n\n\n\n\n\n\n\n\nrepeaterOriginURL\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nclientStreamReadAccess\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nappType\n\n\nstring\n\n\n\n\n\n\n\n\n\n\npingTimeout\n\n\nint\n\n\n\n\n\n\n\n\n\n\nvodTimedTextProviders\n\n\nstring[]\n\n\n\n\n\n\n\n\n\n\nsaveFieldList\n\n\nstring[]\n\n\n\n\n[optional]\n\n\n\n\n\n\nmediaReaderRandomAccessReaderClass\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nmediaReaderBufferSeekIO\n\n\nbool\n\n\n\n\n\n\n\n\n\n\nhttpStreamers\n\n\nstring[]\n\n\n\n\n\n\n\n\n\n\nhttpCORSHeadersEnabled\n\n\nbool\n\n\n\n\n\n\n\n\n\n\navSyncMethod\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ntranscoderConfig\n\n\n\\Model\\TranscoderAppConfig\n\n\n\n\n\n\n\n\n\n\nclientStreamWriteAccess\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nrepeaterQueryString\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ndrmConfig\n\n\n\\Model\\DRMConfig\n\n\n\n\n\n\n\n\n\n\nversion\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nmodules\n\n\n\\Model\\ModulesConfig\n\n\n\n\n\n\n\n\n\n\nmaxRTCPWaitTime\n\n\nint\n\n\n\n\n\n\n\n\n\n\nsecurityConfig\n\n\n\\Model\\SecurityConfig\n\n\n\n\n\n\n\n\n\n\ndvrConfig\n\n\n\\Model\\DVRConfig\n\n\n\n\n\n\n\n\n\n\napplicationTimeout\n\n\nint\n\n\n\n\n\n\n\n\n\n\nname\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "ApplicationConfig"
        }, 
        {
            "location": "/legacy-docs/Model/ApplicationConfig/#applicationconfig", 
            "text": "", 
            "title": "ApplicationConfig"
        }, 
        {
            "location": "/legacy-docs/Model/ApplicationConfig/#properties", 
            "text": "Name  Type  Description  Notes      httpOptimizeFileReads  bool      captionLiveIngestType  string      streamConfig  \\Model\\StreamConfigurationConfig      serverName  string      description  string      mediaCacheSourceList  string[]      repeaterOriginURL  string      clientStreamReadAccess  string      appType  string      pingTimeout  int      vodTimedTextProviders  string[]      saveFieldList  string[]   [optional]    mediaReaderRandomAccessReaderClass  string      mediaReaderBufferSeekIO  bool      httpStreamers  string[]      httpCORSHeadersEnabled  bool      avSyncMethod  string      transcoderConfig  \\Model\\TranscoderAppConfig      clientStreamWriteAccess  string      repeaterQueryString  string      drmConfig  \\Model\\DRMConfig      version  string      modules  \\Model\\ModulesConfig      maxRTCPWaitTime  int      securityConfig  \\Model\\SecurityConfig      dvrConfig  \\Model\\DVRConfig      applicationTimeout  int      name  string       [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }, 
        {
            "location": "/legacy-docs/Model/ApplicationConfigAdv/", 
            "text": "ApplicationConfigAdv\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nadvancedSettings\n\n\n\\Model\\AdvancedSetting[]\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nsaveFieldList\n\n\nstring[]\n\n\n\n\n[optional]\n\n\n\n\n\n\nversion\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nmodules\n\n\n\\Model\\ModuleConfig[]\n\n\n\n\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "ApplicationConfigAdv"
        }, 
        {
            "location": "/legacy-docs/Model/ApplicationConfigAdv/#applicationconfigadv", 
            "text": "", 
            "title": "ApplicationConfigAdv"
        }, 
        {
            "location": "/legacy-docs/Model/ApplicationConfigAdv/#properties", 
            "text": "Name  Type  Description  Notes      advancedSettings  \\Model\\AdvancedSetting[]      serverName  string      saveFieldList  string[]   [optional]    version  string      modules  \\Model\\ModuleConfig[]       [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }, 
        {
            "location": "/legacy-docs/Model/ApplicationsConfig/", 
            "text": "ApplicationsConfig\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nsaveFieldList\n\n\nstring[]\n\n\n\n\n[optional]\n\n\n\n\n\n\nversion\n\n\nstring\n\n\n\n\n\n\n\n\n\n\napplications\n\n\n\\Model\\AppShortObject[]\n\n\n\n\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "ApplicationsConfig"
        }, 
        {
            "location": "/legacy-docs/Model/ApplicationsConfig/#applicationsconfig", 
            "text": "", 
            "title": "ApplicationsConfig"
        }, 
        {
            "location": "/legacy-docs/Model/ApplicationsConfig/#properties", 
            "text": "Name  Type  Description  Notes      serverName  string      saveFieldList  string[]   [optional]    version  string      applications  \\Model\\AppShortObject[]       [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }, 
        {
            "location": "/legacy-docs/Model/BuyDRMStreamMapConfig/", 
            "text": "BuyDRMStreamMapConfig\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\ncontentID\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nkeyID\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nsaveFieldList\n\n\nstring[]\n\n\n\n\n[optional]\n\n\n\n\n\n\nmediaID\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nversion\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nstreamName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\norder\n\n\nint\n\n\n\n\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "BuyDRMStreamMapConfig"
        }, 
        {
            "location": "/legacy-docs/Model/BuyDRMStreamMapConfig/#buydrmstreammapconfig", 
            "text": "", 
            "title": "BuyDRMStreamMapConfig"
        }, 
        {
            "location": "/legacy-docs/Model/BuyDRMStreamMapConfig/#properties", 
            "text": "Name  Type  Description  Notes      contentID  string      serverName  string      keyID  string      saveFieldList  string[]   [optional]    mediaID  string      version  string      streamName  string      order  int       [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }, 
        {
            "location": "/legacy-docs/Model/BuyDRMStreamMapsConfig/", 
            "text": "BuyDRMStreamMapsConfig\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nbuyDRMStreamNameMapFile\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nbuyDRMStreamMaps\n\n\n\\Model\\BuyDRMStreamMapsConfigBuyDRMStreamMapConfig[]\n\n\n\n\n\n\n\n\n\n\nsaveFieldList\n\n\nstring[]\n\n\n\n\n[optional]\n\n\n\n\n\n\nversion\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "BuyDRMStreamMapsConfig"
        }, 
        {
            "location": "/legacy-docs/Model/BuyDRMStreamMapsConfig/#buydrmstreammapsconfig", 
            "text": "", 
            "title": "BuyDRMStreamMapsConfig"
        }, 
        {
            "location": "/legacy-docs/Model/BuyDRMStreamMapsConfig/#properties", 
            "text": "Name  Type  Description  Notes      buyDRMStreamNameMapFile  string      serverName  string      buyDRMStreamMaps  \\Model\\BuyDRMStreamMapsConfigBuyDRMStreamMapConfig[]      saveFieldList  string[]   [optional]    version  string       [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }, 
        {
            "location": "/legacy-docs/Model/CurrentApplicationStatistics/", 
            "text": "CurrentApplicationStatistics\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\ntotalConnections\n\n\n\\Model\\Long\n\n\n\n\n\n\n\n\n\n\nbytesOutRate\n\n\nint\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nsaveFieldList\n\n\nstring[]\n\n\n\n\n[optional]\n\n\n\n\n\n\nversion\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nuptime\n\n\n\\Model\\Long\n\n\n\n\n\n\n\n\n\n\nbytesIn\n\n\n\\Model\\Long\n\n\n\n\n\n\n\n\n\n\nbytesOut\n\n\n\\Model\\Long\n\n\n\n\n\n\n\n\n\n\nbytesInRate\n\n\nint\n\n\n\n\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "CurrentApplicationStatistics"
        }, 
        {
            "location": "/legacy-docs/Model/CurrentApplicationStatistics/#currentapplicationstatistics", 
            "text": "", 
            "title": "CurrentApplicationStatistics"
        }, 
        {
            "location": "/legacy-docs/Model/CurrentApplicationStatistics/#properties", 
            "text": "Name  Type  Description  Notes      totalConnections  \\Model\\Long      bytesOutRate  int      serverName  string      saveFieldList  string[]   [optional]    version  string      uptime  \\Model\\Long      bytesIn  \\Model\\Long      bytesOut  \\Model\\Long      bytesInRate  int       [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }, 
        {
            "location": "/legacy-docs/Model/CurrentIncomingStreamStatistics/", 
            "text": "CurrentIncomingStreamStatistics\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\ntotalConnections\n\n\nint\n\n\n\n\n\n\n\n\n\n\napplicationInstance\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nbytesOutRate\n\n\nint\n\n\n\n\n\n\n\n\n\n\nname\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nsaveFieldList\n\n\nstring[]\n\n\n\n\n[optional]\n\n\n\n\n\n\nversion\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nuptime\n\n\nint\n\n\n\n\n\n\n\n\n\n\nbytesIn\n\n\nint\n\n\n\n\n\n\n\n\n\n\nbytesOut\n\n\nint\n\n\n\n\n\n\n\n\n\n\nbytesInRate\n\n\nint\n\n\n\n\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "CurrentIncomingStreamStatistics"
        }, 
        {
            "location": "/legacy-docs/Model/CurrentIncomingStreamStatistics/#currentincomingstreamstatistics", 
            "text": "", 
            "title": "CurrentIncomingStreamStatistics"
        }, 
        {
            "location": "/legacy-docs/Model/CurrentIncomingStreamStatistics/#properties", 
            "text": "Name  Type  Description  Notes      totalConnections  int      applicationInstance  string      bytesOutRate  int      name  string      serverName  string      saveFieldList  string[]   [optional]    version  string      uptime  int      bytesIn  int      bytesOut  int      bytesInRate  int       [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }, 
        {
            "location": "/legacy-docs/Model/CurrentMachineStatistics/", 
            "text": "CurrentMachineStatistics\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nheapUsed\n\n\n\\Model\\Long\n\n\n\n\n\n\n\n\n\n\ncpuSystem\n\n\n\\Model\\Integer\n\n\n\n\n\n\n\n\n\n\nconnectionCount\n\n\n\\Model\\Long\n\n\n\n\n\n\n\n\n\n\nmemoryFree\n\n\n\\Model\\Long\n\n\n\n\n\n\n\n\n\n\ncpuIdle\n\n\n\\Model\\Integer\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nmemoryUsed\n\n\n\\Model\\Long\n\n\n\n\n\n\n\n\n\n\nversion\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ndiskFree\n\n\n\\Model\\Long\n\n\n\n\n\n\n\n\n\n\ncpuUser\n\n\n\\Model\\Integer\n\n\n\n\n\n\n\n\n\n\ndiskUsed\n\n\n\\Model\\Long\n\n\n\n\n\n\n\n\n\n\nheapFree\n\n\n\\Model\\Long\n\n\n\n\n\n\n\n\n\n\nserverUptime\n\n\nint\n\n\n\n\n\n\n\n\n\n\nsaveFieldList\n\n\nstring[]\n\n\n\n\n[optional]\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "CurrentMachineStatistics"
        }, 
        {
            "location": "/legacy-docs/Model/CurrentMachineStatistics/#currentmachinestatistics", 
            "text": "", 
            "title": "CurrentMachineStatistics"
        }, 
        {
            "location": "/legacy-docs/Model/CurrentMachineStatistics/#properties", 
            "text": "Name  Type  Description  Notes      heapUsed  \\Model\\Long      cpuSystem  \\Model\\Integer      connectionCount  \\Model\\Long      memoryFree  \\Model\\Long      cpuIdle  \\Model\\Integer      serverName  string      memoryUsed  \\Model\\Long      version  string      diskFree  \\Model\\Long      cpuUser  \\Model\\Integer      diskUsed  \\Model\\Long      heapFree  \\Model\\Long      serverUptime  int      saveFieldList  string[]   [optional]     [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }, 
        {
            "location": "/legacy-docs/Model/CurrentVHostStatistics/", 
            "text": "CurrentVHostStatistics\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\ntotalConnections\n\n\n\\Model\\Long\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nsaveFieldList\n\n\nstring[]\n\n\n\n\n[optional]\n\n\n\n\n\n\nversion\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nuptime\n\n\n\\Model\\Long\n\n\n\n\n\n\n\n\n\n\nbytesIn\n\n\n\\Model\\Long\n\n\n\n\n\n\n\n\n\n\nbytesOut\n\n\n\\Model\\Long\n\n\n\n\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "CurrentVHostStatistics"
        }, 
        {
            "location": "/legacy-docs/Model/CurrentVHostStatistics/#currentvhoststatistics", 
            "text": "", 
            "title": "CurrentVHostStatistics"
        }, 
        {
            "location": "/legacy-docs/Model/CurrentVHostStatistics/#properties", 
            "text": "Name  Type  Description  Notes      totalConnections  \\Model\\Long      serverName  string      saveFieldList  string[]   [optional]    version  string      uptime  \\Model\\Long      bytesIn  \\Model\\Long      bytesOut  \\Model\\Long       [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }, 
        {
            "location": "/legacy-docs/Model/DRMConfig/", 
            "text": "DRMConfig\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nbuyDRMProtectMpegDashStreaming\n\n\nbool\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nbuyDRMProtectCupertinoStreaming\n\n\nbool\n\n\n\n\n\n\n\n\n\n\nversion\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nverimatrixCupertinoKeyServerPort\n\n\nint\n\n\n\n\n\n\n\n\n\n\nverimatrixSmoothKeyServerPort\n\n\nint\n\n\n\n\n\n\n\n\n\n\nverimatrixStreamMaps\n\n\n\\Model\\VerimatrixStreamMapsConfig\n\n\n\n\n\n\n\n\n\n\nverimatrixSmoothKeyServerIpAddress\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nlicenseType\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nverimatrixCupertinoKeyServerIpAddress\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nbuyDRMProtectSmoothStreaming\n\n\nbool\n\n\n\n\n\n\n\n\n\n\nbuyDRMUserKey\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ninUse\n\n\nbool\n\n\n\n\n\n\n\n\n\n\nezDRMUsername\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nverimatrixProtectSmoothStreaming\n\n\nbool\n\n\n\n\n\n\n\n\n\n\nbuyDRMStreamMaps\n\n\n\\Model\\BuyDRMStreamMapsConfig\n\n\n\n\n\n\n\n\n\n\nverimatrixCupertinoVODPerSessionKeys\n\n\nbool\n\n\n\n\n\n\n\n\n\n\nsaveFieldList\n\n\nstring[]\n\n\n\n\n[optional]\n\n\n\n\n\n\nezDRMPassword\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nverimatrixProtectCupertinoStreaming\n\n\nbool\n\n\n\n\n\n\n\n\n\n\ncupertinoEncryptionAPIBased\n\n\nbool\n\n\n\n\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "DRMConfig"
        }, 
        {
            "location": "/legacy-docs/Model/DRMConfig/#drmconfig", 
            "text": "", 
            "title": "DRMConfig"
        }, 
        {
            "location": "/legacy-docs/Model/DRMConfig/#properties", 
            "text": "Name  Type  Description  Notes      buyDRMProtectMpegDashStreaming  bool      serverName  string      buyDRMProtectCupertinoStreaming  bool      version  string      verimatrixCupertinoKeyServerPort  int      verimatrixSmoothKeyServerPort  int      verimatrixStreamMaps  \\Model\\VerimatrixStreamMapsConfig      verimatrixSmoothKeyServerIpAddress  string      licenseType  string      verimatrixCupertinoKeyServerIpAddress  string      buyDRMProtectSmoothStreaming  bool      buyDRMUserKey  string      inUse  bool      ezDRMUsername  string      verimatrixProtectSmoothStreaming  bool      buyDRMStreamMaps  \\Model\\BuyDRMStreamMapsConfig      verimatrixCupertinoVODPerSessionKeys  bool      saveFieldList  string[]   [optional]    ezDRMPassword  string      verimatrixProtectCupertinoStreaming  bool      cupertinoEncryptionAPIBased  bool       [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }, 
        {
            "location": "/legacy-docs/Model/DRMConfigAdv/", 
            "text": "DRMConfigAdv\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nadvancedSettings\n\n\n\\Model\\AdvancedSetting[]\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nsaveFieldList\n\n\nstring[]\n\n\n\n\n[optional]\n\n\n\n\n\n\nversion\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "DRMConfigAdv"
        }, 
        {
            "location": "/legacy-docs/Model/DRMConfigAdv/#drmconfigadv", 
            "text": "", 
            "title": "DRMConfigAdv"
        }, 
        {
            "location": "/legacy-docs/Model/DRMConfigAdv/#properties", 
            "text": "Name  Type  Description  Notes      advancedSettings  \\Model\\AdvancedSetting[]      serverName  string      saveFieldList  string[]   [optional]    version  string       [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }, 
        {
            "location": "/legacy-docs/Model/DVRConfig/", 
            "text": "DVRConfig\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nwindowDuration\n\n\nint\n\n\n\n\n\n\n\n\n\n\ndvrMediaCacheEnabled\n\n\nbool\n\n\n\n\n\n\n\n\n\n\ndvrEnable\n\n\nbool\n\n\n\n\n\n\n\n\n\n\nstartRecordingOnStartup\n\n\nbool\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nstore\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nversion\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nrecorders\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ndvrOnlyStreaming\n\n\nbool\n\n\n\n\n\n\n\n\n\n\nhttpRandomizeMediaName\n\n\nbool\n\n\n\n\n\n\n\n\n\n\nlicenseType\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ndvrEncryptionSharedSecret\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ninUse\n\n\nbool\n\n\n\n\n\n\n\n\n\n\narchiveStrategy\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nstorageDir\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nsaveFieldList\n\n\nstring[]\n\n\n\n\n[optional]\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "DVRConfig"
        }, 
        {
            "location": "/legacy-docs/Model/DVRConfig/#dvrconfig", 
            "text": "", 
            "title": "DVRConfig"
        }, 
        {
            "location": "/legacy-docs/Model/DVRConfig/#properties", 
            "text": "Name  Type  Description  Notes      windowDuration  int      dvrMediaCacheEnabled  bool      dvrEnable  bool      startRecordingOnStartup  bool      serverName  string      store  string      version  string      recorders  string      dvrOnlyStreaming  bool      httpRandomizeMediaName  bool      licenseType  string      dvrEncryptionSharedSecret  string      inUse  bool      archiveStrategy  string      storageDir  string      saveFieldList  string[]   [optional]     [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }, 
        {
            "location": "/legacy-docs/Model/DVRConfigAdv/", 
            "text": "DVRConfigAdv\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nadvancedSettings\n\n\n\\Model\\AdvancedSetting[]\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nsaveFieldList\n\n\nstring[]\n\n\n\n\n[optional]\n\n\n\n\n\n\nversion\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "DVRConfigAdv"
        }, 
        {
            "location": "/legacy-docs/Model/DVRConfigAdv/#dvrconfigadv", 
            "text": "", 
            "title": "DVRConfigAdv"
        }, 
        {
            "location": "/legacy-docs/Model/DVRConfigAdv/#properties", 
            "text": "Name  Type  Description  Notes      advancedSettings  \\Model\\AdvancedSetting[]      serverName  string      saveFieldList  string[]   [optional]    version  string       [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }, 
        {
            "location": "/legacy-docs/Model/DefaultStreamRecorderConfig/", 
            "text": "DefaultStreamRecorderConfig\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\ninstanceName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nfileVersionDelegateName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nrecorderName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ncurrentSize\n\n\nint\n\n\n\n\n\n\n\n\n\n\nsegmentSchedule\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nstartOnKeyFrame\n\n\nbool\n\n\n\n\n\n\n\n\n\n\noutputPath\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ncurrentFile\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nsaveFieldList\n\n\nstring[]\n\n\n\n\n[optional]\n\n\n\n\n\n\nrecordData\n\n\nbool\n\n\n\n\n\n\n\n\n\n\napplicationName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nmoveFirstVideoFrameToZero\n\n\nbool\n\n\n\n\n\n\n\n\n\n\nrecorderErrorString\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nsegmentSize\n\n\nint\n\n\n\n\n\n\n\n\n\n\ndefaultRecorder\n\n\nbool\n\n\n\n\n\n\n\n\n\n\nsplitOnTcDiscontinuity\n\n\nbool\n\n\n\n\n\n\n\n\n\n\nversion\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nbaseFile\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nsegmentDuration\n\n\nint\n\n\n\n\n\n\n\n\n\n\nrecordingStartTime\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nfileTemplate\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nsegmentationType\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ncurrentDuration\n\n\nint\n\n\n\n\n\n\n\n\n\n\nfileFormat\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nrecorderState\n\n\nstring\n\n\n\n\n\n\n\n\n\n\noption\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "DefaultStreamRecorderConfig"
        }, 
        {
            "location": "/legacy-docs/Model/DefaultStreamRecorderConfig/#defaultstreamrecorderconfig", 
            "text": "", 
            "title": "DefaultStreamRecorderConfig"
        }, 
        {
            "location": "/legacy-docs/Model/DefaultStreamRecorderConfig/#properties", 
            "text": "Name  Type  Description  Notes      instanceName  string      fileVersionDelegateName  string      serverName  string      recorderName  string      currentSize  int      segmentSchedule  string      startOnKeyFrame  bool      outputPath  string      currentFile  string      saveFieldList  string[]   [optional]    recordData  bool      applicationName  string      moveFirstVideoFrameToZero  bool      recorderErrorString  string      segmentSize  int      defaultRecorder  bool      splitOnTcDiscontinuity  bool      version  string      baseFile  string      segmentDuration  int      recordingStartTime  string      fileTemplate  string      segmentationType  string      currentDuration  int      fileFormat  string      recorderState  string      option  string       [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }, 
        {
            "location": "/legacy-docs/Model/DvrRESTConverterStore/", 
            "text": "DvrRESTConverterStore\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\ndvrStoreName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nsaveFieldList\n\n\nstring[]\n\n\n\n\n[optional]\n\n\n\n\n\n\nversion\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ndvrConverterStore\n\n\n\\Model\\IDvrConverterStore\n\n\n\n\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "DvrRESTConverterStore"
        }, 
        {
            "location": "/legacy-docs/Model/DvrRESTConverterStore/#dvrrestconverterstore", 
            "text": "", 
            "title": "DvrRESTConverterStore"
        }, 
        {
            "location": "/legacy-docs/Model/DvrRESTConverterStore/#properties", 
            "text": "Name  Type  Description  Notes      dvrStoreName  string      serverName  string      saveFieldList  string[]   [optional]    version  string      dvrConverterStore  \\Model\\IDvrConverterStore       [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }, 
        {
            "location": "/legacy-docs/Model/DvrRESTConverterStoreAction/", 
            "text": "DvrRESTConverterStoreAction\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\ndvrStoreName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ninstanceName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nappName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "DvrRESTConverterStoreAction"
        }, 
        {
            "location": "/legacy-docs/Model/DvrRESTConverterStoreAction/#dvrrestconverterstoreaction", 
            "text": "", 
            "title": "DvrRESTConverterStoreAction"
        }, 
        {
            "location": "/legacy-docs/Model/DvrRESTConverterStoreAction/#properties", 
            "text": "Name  Type  Description  Notes      dvrStoreName  string      vhostName  string      instanceName  string      appName  string      serverName  string       [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }, 
        {
            "location": "/legacy-docs/Model/DvrRESTConverterStores/", 
            "text": "DvrRESTConverterStores\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\ngroupConversionStatusList\n\n\n\\Model\\IDvrConverterGroupStatus[]\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nsaveFieldList\n\n\nstring[]\n\n\n\n\n[optional]\n\n\n\n\n\n\nversion\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ndvrconverterstoresummary\n\n\n\\Model\\IDvrConverterStoreSummary[]\n\n\n\n\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "DvrRESTConverterStores"
        }, 
        {
            "location": "/legacy-docs/Model/DvrRESTConverterStores/#dvrrestconverterstores", 
            "text": "", 
            "title": "DvrRESTConverterStores"
        }, 
        {
            "location": "/legacy-docs/Model/DvrRESTConverterStores/#properties", 
            "text": "Name  Type  Description  Notes      groupConversionStatusList  \\Model\\IDvrConverterGroupStatus[]      serverName  string      saveFieldList  string[]   [optional]    version  string      dvrconverterstoresummary  \\Model\\IDvrConverterStoreSummary[]       [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }, 
        {
            "location": "/legacy-docs/Model/DvrRESTConverterStoresAction/", 
            "text": "DvrRESTConverterStoresAction\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ninstanceName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nappName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "DvrRESTConverterStoresAction"
        }, 
        {
            "location": "/legacy-docs/Model/DvrRESTConverterStoresAction/#dvrrestconverterstoresaction", 
            "text": "", 
            "title": "DvrRESTConverterStoresAction"
        }, 
        {
            "location": "/legacy-docs/Model/DvrRESTConverterStoresAction/#properties", 
            "text": "Name  Type  Description  Notes      vhostName  string      instanceName  string      appName  string      serverName  string       [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }, 
        {
            "location": "/legacy-docs/Model/HistoricApplicationStatistics/", 
            "text": "HistoricApplicationStatistics\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nsaveFieldList\n\n\nstring[]\n\n\n\n\n[optional]\n\n\n\n\n\n\nversion\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "HistoricApplicationStatistics"
        }, 
        {
            "location": "/legacy-docs/Model/HistoricApplicationStatistics/#historicapplicationstatistics", 
            "text": "", 
            "title": "HistoricApplicationStatistics"
        }, 
        {
            "location": "/legacy-docs/Model/HistoricApplicationStatistics/#properties", 
            "text": "Name  Type  Description  Notes      serverName  string      saveFieldList  string[]   [optional]    version  string       [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }, 
        {
            "location": "/legacy-docs/Model/HistoricMachineStatistics/", 
            "text": "HistoricMachineStatistics\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nsaveFieldList\n\n\nstring[]\n\n\n\n\n[optional]\n\n\n\n\n\n\nversion\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "HistoricMachineStatistics"
        }, 
        {
            "location": "/legacy-docs/Model/HistoricMachineStatistics/#historicmachinestatistics", 
            "text": "", 
            "title": "HistoricMachineStatistics"
        }, 
        {
            "location": "/legacy-docs/Model/HistoricMachineStatistics/#properties", 
            "text": "Name  Type  Description  Notes      serverName  string      saveFieldList  string[]   [optional]    version  string       [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }, 
        {
            "location": "/legacy-docs/Model/HistoricServerStatistics/", 
            "text": "HistoricServerStatistics\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nsaveFieldList\n\n\nstring[]\n\n\n\n\n[optional]\n\n\n\n\n\n\nversion\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "HistoricServerStatistics"
        }, 
        {
            "location": "/legacy-docs/Model/HistoricServerStatistics/#historicserverstatistics", 
            "text": "", 
            "title": "HistoricServerStatistics"
        }, 
        {
            "location": "/legacy-docs/Model/HistoricServerStatistics/#properties", 
            "text": "Name  Type  Description  Notes      serverName  string      saveFieldList  string[]   [optional]    version  string       [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }, 
        {
            "location": "/legacy-docs/Model/HistoricVHostStatistics/", 
            "text": "HistoricVHostStatistics\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nsaveFieldList\n\n\nstring[]\n\n\n\n\n[optional]\n\n\n\n\n\n\nversion\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "HistoricVHostStatistics"
        }, 
        {
            "location": "/legacy-docs/Model/HistoricVHostStatistics/#historicvhoststatistics", 
            "text": "", 
            "title": "HistoricVHostStatistics"
        }, 
        {
            "location": "/legacy-docs/Model/HistoricVHostStatistics/#properties", 
            "text": "Name  Type  Description  Notes      serverName  string      saveFieldList  string[]   [optional]    version  string       [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }, 
        {
            "location": "/legacy-docs/Model/HostPortConfig/", 
            "text": "HostPortConfig\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nsslDomainToKeyStoreMapPath\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nipAddress\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nsslKeyStoreType\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nsslAlgorithm\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ntype\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nsslKeyStorePath\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nversion\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nssl\n\n\nstring[]\n\n\n\n\n\n\n\n\n\n\nsslEnable\n\n\nbool\n\n\n\n\n\n\n\n\n\n\nsslKeyStorePassword\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nsslProtocols\n\n\nstring[]\n\n\n\n\n\n\n\n\n\n\nport\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nname\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nsslProtocol\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nsaveFieldList\n\n\nstring[]\n\n\n\n\n[optional]\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "HostPortConfig"
        }, 
        {
            "location": "/legacy-docs/Model/HostPortConfig/#hostportconfig", 
            "text": "", 
            "title": "HostPortConfig"
        }, 
        {
            "location": "/legacy-docs/Model/HostPortConfig/#properties", 
            "text": "Name  Type  Description  Notes      sslDomainToKeyStoreMapPath  string      ipAddress  string      serverName  string      sslKeyStoreType  string      sslAlgorithm  string      type  string      sslKeyStorePath  string      version  string      ssl  string[]      sslEnable  bool      sslKeyStorePassword  string      sslProtocols  string[]      port  string      name  string      sslProtocol  string      saveFieldList  string[]   [optional]     [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }, 
        {
            "location": "/legacy-docs/Model/HostPortConfigAdv/", 
            "text": "HostPortConfigAdv\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nprocessorCountAutoValue\n\n\nint\n\n\n\n\n\n\n\n\n\n\nport\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nprocessorCount\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nadvancedSettings\n\n\n\\Model\\AdvancedSetting[]\n\n\n\n\n\n\n\n\n\n\nname\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nipAddress\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nsaveFieldList\n\n\nstring[]\n\n\n\n\n[optional]\n\n\n\n\n\n\ntype\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nversion\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "HostPortConfigAdv"
        }, 
        {
            "location": "/legacy-docs/Model/HostPortConfigAdv/#hostportconfigadv", 
            "text": "", 
            "title": "HostPortConfigAdv"
        }, 
        {
            "location": "/legacy-docs/Model/HostPortConfigAdv/#properties", 
            "text": "Name  Type  Description  Notes      processorCountAutoValue  int      port  string      processorCount  string      advancedSettings  \\Model\\AdvancedSetting[]      name  string      ipAddress  string      serverName  string      saveFieldList  string[]   [optional]    type  string      version  string       [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }, 
        {
            "location": "/legacy-docs/Model/HostPortsConfig/", 
            "text": "HostPortsConfig\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nhostports\n\n\n\\Model\\ShortObject[]\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nsaveFieldList\n\n\nstring[]\n\n\n\n\n[optional]\n\n\n\n\n\n\nversion\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "HostPortsConfig"
        }, 
        {
            "location": "/legacy-docs/Model/HostPortsConfig/#hostportsconfig", 
            "text": "", 
            "title": "HostPortsConfig"
        }, 
        {
            "location": "/legacy-docs/Model/HostPortsConfig/#properties", 
            "text": "Name  Type  Description  Notes      hostports  \\Model\\ShortObject[]      serverName  string      saveFieldList  string[]   [optional]    version  string       [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }, 
        {
            "location": "/legacy-docs/Model/HostportsTuneConfig/", 
            "text": "HostportsTuneConfig\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nhostports\n\n\n\\Model\\HostPortConfigAdv[]\n\n\n\n\n\n\n\n\n\n\nname\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nsaveFieldList\n\n\nstring[]\n\n\n\n\n[optional]\n\n\n\n\n\n\nversion\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "HostportsTuneConfig"
        }, 
        {
            "location": "/legacy-docs/Model/HostportsTuneConfig/#hostportstuneconfig", 
            "text": "", 
            "title": "HostportsTuneConfig"
        }, 
        {
            "location": "/legacy-docs/Model/HostportsTuneConfig/#properties", 
            "text": "Name  Type  Description  Notes      hostports  \\Model\\HostPortConfigAdv[]      name  string      serverName  string      saveFieldList  string[]   [optional]    version  string       [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }, 
        {
            "location": "/legacy-docs/Model/IncomingStreamAction/", 
            "text": "IncomingStreamAction\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ninstanceName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nappName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nstreamName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "IncomingStreamAction"
        }, 
        {
            "location": "/legacy-docs/Model/IncomingStreamAction/#incomingstreamaction", 
            "text": "", 
            "title": "IncomingStreamAction"
        }, 
        {
            "location": "/legacy-docs/Model/IncomingStreamAction/#properties", 
            "text": "Name  Type  Description  Notes      vhostName  string      instanceName  string      appName  string      serverName  string      streamName  string       [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }, 
        {
            "location": "/legacy-docs/Model/IncomingStreamConfig/", 
            "text": "IncomingStreamConfig\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nptzPollingInterval\n\n\nint\n\n\n\n\n\n\n\n\n\n\nisRecordingSet\n\n\nbool\n\n\n\n\n\n\n\n\n\n\nsourceIp\n\n\nstring\n\n\n\n\n\n\n\n\n\n\napplicationInstance\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nisPTZEnabled\n\n\nbool\n\n\n\n\n\n\n\n\n\n\nname\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nisConnected\n\n\nbool\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nisPublishedToVOD\n\n\nbool\n\n\n\n\n\n\n\n\n\n\nsaveFieldList\n\n\nstring[]\n\n\n\n\n[optional]\n\n\n\n\n\n\nversion\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nisStreamManagerStream\n\n\nbool\n\n\n\n\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "IncomingStreamConfig"
        }, 
        {
            "location": "/legacy-docs/Model/IncomingStreamConfig/#incomingstreamconfig", 
            "text": "", 
            "title": "IncomingStreamConfig"
        }, 
        {
            "location": "/legacy-docs/Model/IncomingStreamConfig/#properties", 
            "text": "Name  Type  Description  Notes      ptzPollingInterval  int      isRecordingSet  bool      sourceIp  string      applicationInstance  string      isPTZEnabled  bool      name  string      isConnected  bool      serverName  string      isPublishedToVOD  bool      saveFieldList  string[]   [optional]    version  string      isStreamManagerStream  bool       [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }, 
        {
            "location": "/legacy-docs/Model/InstanceAction/", 
            "text": "InstanceAction\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ninstanceName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nappName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "InstanceAction"
        }, 
        {
            "location": "/legacy-docs/Model/InstanceAction/#instanceaction", 
            "text": "", 
            "title": "InstanceAction"
        }, 
        {
            "location": "/legacy-docs/Model/InstanceAction/#properties", 
            "text": "Name  Type  Description  Notes      vhostName  string      instanceName  string      appName  string      serverName  string       [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }, 
        {
            "location": "/legacy-docs/Model/InstanceConfig/", 
            "text": "InstanceConfig\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nincomingStreams\n\n\n\\Model\\IncomingStreamConfig[]\n\n\n\n\n\n\n\n\n\n\nname\n\n\nstring\n\n\n\n\n\n\n\n\n\n\noutgoingStreams\n\n\n\\Model\\OutgoingStreamConfig[]\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nstreamGroups\n\n\n\\Model\\StreamGroupConfig[]\n\n\n\n\n\n\n\n\n\n\nsaveFieldList\n\n\nstring[]\n\n\n\n\n[optional]\n\n\n\n\n\n\nversion\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nrecorders\n\n\n\\Model\\StreamRecorderConfig[]\n\n\n\n\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "InstanceConfig"
        }, 
        {
            "location": "/legacy-docs/Model/InstanceConfig/#instanceconfig", 
            "text": "", 
            "title": "InstanceConfig"
        }, 
        {
            "location": "/legacy-docs/Model/InstanceConfig/#properties", 
            "text": "Name  Type  Description  Notes      incomingStreams  \\Model\\IncomingStreamConfig[]      name  string      outgoingStreams  \\Model\\OutgoingStreamConfig[]      serverName  string      streamGroups  \\Model\\StreamGroupConfig[]      saveFieldList  string[]   [optional]    version  string      recorders  \\Model\\StreamRecorderConfig[]       [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }, 
        {
            "location": "/legacy-docs/Model/InstancesConfig/", 
            "text": "InstancesConfig\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\ninstanceList\n\n\n\\Model\\InstanceConfig[]\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nsaveFieldList\n\n\nstring[]\n\n\n\n\n[optional]\n\n\n\n\n\n\nversion\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "InstancesConfig"
        }, 
        {
            "location": "/legacy-docs/Model/InstancesConfig/#instancesconfig", 
            "text": "", 
            "title": "InstancesConfig"
        }, 
        {
            "location": "/legacy-docs/Model/InstancesConfig/#properties", 
            "text": "Name  Type  Description  Notes      instanceList  \\Model\\InstanceConfig[]      serverName  string      saveFieldList  string[]   [optional]    version  string       [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }, 
        {
            "location": "/legacy-docs/Model/Integer/", 
            "text": "Integer\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "Integer"
        }, 
        {
            "location": "/legacy-docs/Model/Integer/#integer", 
            "text": "", 
            "title": "Integer"
        }, 
        {
            "location": "/legacy-docs/Model/Integer/#properties", 
            "text": "Name  Type  Description  Notes      [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }, 
        {
            "location": "/legacy-docs/Model/LiveEncoderConfig/", 
            "text": "LiveEncoderConfig\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\noutput\n\n\n\\Model\\LiveEncoderConfigOutput\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nsource\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nsaveFieldList\n\n\nstring[]\n\n\n\n\n[optional]\n\n\n\n\n\n\nversion\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "LiveEncoderConfig"
        }, 
        {
            "location": "/legacy-docs/Model/LiveEncoderConfig/#liveencoderconfig", 
            "text": "", 
            "title": "LiveEncoderConfig"
        }, 
        {
            "location": "/legacy-docs/Model/LiveEncoderConfig/#properties", 
            "text": "Name  Type  Description  Notes      output  \\Model\\LiveEncoderConfigOutput      serverName  string      source  string      saveFieldList  string[]   [optional]    version  string       [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }, 
        {
            "location": "/legacy-docs/Model/Log4jAction/", 
            "text": "Log4jAction\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nloggerName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "Log4jAction"
        }, 
        {
            "location": "/legacy-docs/Model/Log4jAction/#log4jaction", 
            "text": "", 
            "title": "Log4jAction"
        }, 
        {
            "location": "/legacy-docs/Model/Log4jAction/#properties", 
            "text": "Name  Type  Description  Notes      serverName  string      loggerName  string       [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }, 
        {
            "location": "/legacy-docs/Model/Log4js/", 
            "text": "Log4js\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nloggers\n\n\n\\Model\\Log4jsWMSLoggerConfig[]\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nsaveFieldList\n\n\nstring[]\n\n\n\n\n[optional]\n\n\n\n\n\n\nversion\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "Log4js"
        }, 
        {
            "location": "/legacy-docs/Model/Log4js/#log4js", 
            "text": "", 
            "title": "Log4js"
        }, 
        {
            "location": "/legacy-docs/Model/Log4js/#properties", 
            "text": "Name  Type  Description  Notes      loggers  \\Model\\Log4jsWMSLoggerConfig[]      serverName  string      saveFieldList  string[]   [optional]    version  string       [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }, 
        {
            "location": "/legacy-docs/Model/Log4jsAction/", 
            "text": "Log4jsAction\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "Log4jsAction"
        }, 
        {
            "location": "/legacy-docs/Model/Log4jsAction/#log4jsaction", 
            "text": "", 
            "title": "Log4jsAction"
        }, 
        {
            "location": "/legacy-docs/Model/Log4jsAction/#properties", 
            "text": "Name  Type  Description  Notes      serverName  string       [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }, 
        {
            "location": "/legacy-docs/Model/Long/", 
            "text": "Long\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "Long"
        }, 
        {
            "location": "/legacy-docs/Model/Long/#long", 
            "text": "", 
            "title": "Long"
        }, 
        {
            "location": "/legacy-docs/Model/Long/#properties", 
            "text": "Name  Type  Description  Notes      [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }, 
        {
            "location": "/legacy-docs/Model/MediaCacheApplicationStoreAction/", 
            "text": "MediaCacheApplicationStoreAction\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ninstanceName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nappName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "MediaCacheApplicationStoreAction"
        }, 
        {
            "location": "/legacy-docs/Model/MediaCacheApplicationStoreAction/#mediacacheapplicationstoreaction", 
            "text": "", 
            "title": "MediaCacheApplicationStoreAction"
        }, 
        {
            "location": "/legacy-docs/Model/MediaCacheApplicationStoreAction/#properties", 
            "text": "Name  Type  Description  Notes      vhostName  string      instanceName  string      appName  string      serverName  string       [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }, 
        {
            "location": "/legacy-docs/Model/MediaCacheConfig/", 
            "text": "MediaCacheConfig\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nmaxPendingWriteRequestSizeAutoValue\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nsources\n\n\n\\Model\\MediaCacheSourceConfig[]\n\n\n\n\n\n\n\n\n\n\nstores\n\n\n\\Model\\MediaCacheStoreConfig[]\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nversion\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nmaxPendingReadAheadRequestSizeAutoValue\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nreadAheadThreadPoolSizeAutoValue\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nreadAheadThreadPoolSize\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nmaxPendingReadAheadRequestSize\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nsaveFieldList\n\n\nstring[]\n\n\n\n\n[optional]\n\n\n\n\n\n\nmaxPendingWriteRequestSize\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nwriterThreadPoolSizeAutoValue\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nwriterThreadPoolSize\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "MediaCacheConfig"
        }, 
        {
            "location": "/legacy-docs/Model/MediaCacheConfig/#mediacacheconfig", 
            "text": "", 
            "title": "MediaCacheConfig"
        }, 
        {
            "location": "/legacy-docs/Model/MediaCacheConfig/#properties", 
            "text": "Name  Type  Description  Notes      maxPendingWriteRequestSizeAutoValue  string      sources  \\Model\\MediaCacheSourceConfig[]      stores  \\Model\\MediaCacheStoreConfig[]      serverName  string      version  string      maxPendingReadAheadRequestSizeAutoValue  string      readAheadThreadPoolSizeAutoValue  string      readAheadThreadPoolSize  string      maxPendingReadAheadRequestSize  string      saveFieldList  string[]   [optional]    maxPendingWriteRequestSize  string      writerThreadPoolSizeAutoValue  string      writerThreadPoolSize  string       [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }, 
        {
            "location": "/legacy-docs/Model/MediaCacheConfig3/", 
            "text": "MediaCacheConfig3\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nmaxPendingWriteRequestSizeAutoValue\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nsources\n\n\n\\Model\\MediaCacheSourceConfig3[]\n\n\n\n\n\n\n\n\n\n\nstores\n\n\n\\Model\\MediaCacheStoreConfig3[]\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nversion\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nmaxPendingReadAheadRequestSizeAutoValue\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nreadAheadThreadPoolSizeAutoValue\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nreadAheadThreadPoolSize\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nmaxPendingReadAheadRequestSize\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nsaveFieldList\n\n\nstring[]\n\n\n\n\n[optional]\n\n\n\n\n\n\nmaxPendingWriteRequestSize\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nwriterThreadPoolSizeAutoValue\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nwriterThreadPoolSize\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "MediaCacheConfig3"
        }, 
        {
            "location": "/legacy-docs/Model/MediaCacheConfig3/#mediacacheconfig3", 
            "text": "", 
            "title": "MediaCacheConfig3"
        }, 
        {
            "location": "/legacy-docs/Model/MediaCacheConfig3/#properties", 
            "text": "Name  Type  Description  Notes      maxPendingWriteRequestSizeAutoValue  string      sources  \\Model\\MediaCacheSourceConfig3[]      stores  \\Model\\MediaCacheStoreConfig3[]      serverName  string      version  string      maxPendingReadAheadRequestSizeAutoValue  string      readAheadThreadPoolSizeAutoValue  string      readAheadThreadPoolSize  string      maxPendingReadAheadRequestSize  string      saveFieldList  string[]   [optional]    maxPendingWriteRequestSize  string      writerThreadPoolSizeAutoValue  string      writerThreadPoolSize  string       [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }, 
        {
            "location": "/legacy-docs/Model/MediaCacheConfigAdv/", 
            "text": "MediaCacheConfigAdv\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nadvancedSettings\n\n\n\\Model\\AdvancedSetting[]\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nsaveFieldList\n\n\nstring[]\n\n\n\n\n[optional]\n\n\n\n\n\n\nversion\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "MediaCacheConfigAdv"
        }, 
        {
            "location": "/legacy-docs/Model/MediaCacheConfigAdv/#mediacacheconfigadv", 
            "text": "", 
            "title": "MediaCacheConfigAdv"
        }, 
        {
            "location": "/legacy-docs/Model/MediaCacheConfigAdv/#properties", 
            "text": "Name  Type  Description  Notes      advancedSettings  \\Model\\AdvancedSetting[]      serverName  string      saveFieldList  string[]   [optional]    version  string       [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }, 
        {
            "location": "/legacy-docs/Model/MediaCacheSourceConfig/", 
            "text": "MediaCacheSourceConfig\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nreaderClass\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nisPassThru\n\n\nbool\n\n\n\n\n\n\n\n\n\n\nminTimeToLive\n\n\nint\n\n\n\n\n\n\n\n\n\n\nprefix\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ndescription\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nbaseClass\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ntype\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nisAmazonS3\n\n\nbool\n\n\n\n\n\n\n\n\n\n\ns3BucketNameInDomain\n\n\nbool\n\n\n\n\n\n\n\n\n\n\ngoogleServicePrivateKeyFile\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ngoogleServiceID\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ngoogleServicePrivateKeyPassword\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nsaveFieldList\n\n\nstring[]\n\n\n\n\n[optional]\n\n\n\n\n\n\nazureAccountKey\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nawsSecretAccessKey\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nazureAccountName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nawsAccessKeyId\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nhttpReaderFactoryClass\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ngoogleServiceKey\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nazureContainerName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nversion\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nbasePath\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ngoogleEncMethod\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nname\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nmaxTimeToLive\n\n\nint\n\n\n\n\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "MediaCacheSourceConfig"
        }, 
        {
            "location": "/legacy-docs/Model/MediaCacheSourceConfig/#mediacachesourceconfig", 
            "text": "", 
            "title": "MediaCacheSourceConfig"
        }, 
        {
            "location": "/legacy-docs/Model/MediaCacheSourceConfig/#properties", 
            "text": "Name  Type  Description  Notes      readerClass  string      isPassThru  bool      minTimeToLive  int      prefix  string      serverName  string      description  string      baseClass  string      type  string      isAmazonS3  bool      s3BucketNameInDomain  bool      googleServicePrivateKeyFile  string      googleServiceID  string      googleServicePrivateKeyPassword  string      saveFieldList  string[]   [optional]    azureAccountKey  string      awsSecretAccessKey  string      azureAccountName  string      awsAccessKeyId  string      httpReaderFactoryClass  string      googleServiceKey  string      azureContainerName  string      version  string      basePath  string      googleEncMethod  string      name  string      maxTimeToLive  int       [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }, 
        {
            "location": "/legacy-docs/Model/MediaCacheSourceConfig3/", 
            "text": "MediaCacheSourceConfig3\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nreaderClass\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nisPassThru\n\n\nbool\n\n\n\n\n\n\n\n\n\n\nminTimeToLive\n\n\nint\n\n\n\n\n\n\n\n\n\n\nprefix\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ndescription\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nbaseClass\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ntype\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nisAmazonS3\n\n\nbool\n\n\n\n\n\n\n\n\n\n\ns3BucketNameInDomain\n\n\nbool\n\n\n\n\n\n\n\n\n\n\ngoogleServicePrivateKeyFile\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ngoogleServiceID\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ngoogleServicePrivateKeyPassword\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nsaveFieldList\n\n\nstring[]\n\n\n\n\n[optional]\n\n\n\n\n\n\nazureAccountKey\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nawsSecretAccessKey\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nazureAccountName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nawsAccessKeyId\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nhttpReaderFactoryClass\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ngoogleServiceKey\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nazureContainerName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nversion\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nbasePath\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ngoogleEncMethod\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nsourceName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nmaxTimeToLive\n\n\nint\n\n\n\n\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "MediaCacheSourceConfig3"
        }, 
        {
            "location": "/legacy-docs/Model/MediaCacheSourceConfig3/#mediacachesourceconfig3", 
            "text": "", 
            "title": "MediaCacheSourceConfig3"
        }, 
        {
            "location": "/legacy-docs/Model/MediaCacheSourceConfig3/#properties", 
            "text": "Name  Type  Description  Notes      readerClass  string      isPassThru  bool      minTimeToLive  int      prefix  string      serverName  string      description  string      baseClass  string      type  string      isAmazonS3  bool      s3BucketNameInDomain  bool      googleServicePrivateKeyFile  string      googleServiceID  string      googleServicePrivateKeyPassword  string      saveFieldList  string[]   [optional]    azureAccountKey  string      awsSecretAccessKey  string      azureAccountName  string      awsAccessKeyId  string      httpReaderFactoryClass  string      googleServiceKey  string      azureContainerName  string      version  string      basePath  string      googleEncMethod  string      sourceName  string      maxTimeToLive  int       [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }, 
        {
            "location": "/legacy-docs/Model/MediaCacheSourceConfigAdv/", 
            "text": "MediaCacheSourceConfigAdv\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nadvancedSettings\n\n\n\\Model\\AdvancedSetting[]\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nsaveFieldList\n\n\nstring[]\n\n\n\n\n[optional]\n\n\n\n\n\n\nversion\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "MediaCacheSourceConfigAdv"
        }, 
        {
            "location": "/legacy-docs/Model/MediaCacheSourceConfigAdv/#mediacachesourceconfigadv", 
            "text": "", 
            "title": "MediaCacheSourceConfigAdv"
        }, 
        {
            "location": "/legacy-docs/Model/MediaCacheSourceConfigAdv/#properties", 
            "text": "Name  Type  Description  Notes      advancedSettings  \\Model\\AdvancedSetting[]      serverName  string      saveFieldList  string[]   [optional]    version  string       [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }, 
        {
            "location": "/legacy-docs/Model/MediaCacheSourceConfigAdv3/", 
            "text": "MediaCacheSourceConfigAdv3\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nadvancedSettings\n\n\n\\Model\\AdvancedSetting[]\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nsaveFieldList\n\n\nstring[]\n\n\n\n\n[optional]\n\n\n\n\n\n\nversion\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "MediaCacheSourceConfigAdv3"
        }, 
        {
            "location": "/legacy-docs/Model/MediaCacheSourceConfigAdv3/#mediacachesourceconfigadv3", 
            "text": "", 
            "title": "MediaCacheSourceConfigAdv3"
        }, 
        {
            "location": "/legacy-docs/Model/MediaCacheSourceConfigAdv3/#properties", 
            "text": "Name  Type  Description  Notes      advancedSettings  \\Model\\AdvancedSetting[]      serverName  string      saveFieldList  string[]   [optional]    version  string       [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }, 
        {
            "location": "/legacy-docs/Model/MediaCacheSourcesConfig/", 
            "text": "MediaCacheSourcesConfig\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nsources\n\n\n\\Model\\ShortObject[]\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nsaveFieldList\n\n\nstring[]\n\n\n\n\n[optional]\n\n\n\n\n\n\nversion\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "MediaCacheSourcesConfig"
        }, 
        {
            "location": "/legacy-docs/Model/MediaCacheSourcesConfig/#mediacachesourcesconfig", 
            "text": "", 
            "title": "MediaCacheSourcesConfig"
        }, 
        {
            "location": "/legacy-docs/Model/MediaCacheSourcesConfig/#properties", 
            "text": "Name  Type  Description  Notes      sources  \\Model\\ShortObject[]      serverName  string      saveFieldList  string[]   [optional]    version  string       [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }, 
        {
            "location": "/legacy-docs/Model/MediaCacheSourcesConfig3/", 
            "text": "MediaCacheSourcesConfig3\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nsources\n\n\n\\Model\\ShortObject[]\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nsaveFieldList\n\n\nstring[]\n\n\n\n\n[optional]\n\n\n\n\n\n\nversion\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "MediaCacheSourcesConfig3"
        }, 
        {
            "location": "/legacy-docs/Model/MediaCacheSourcesConfig3/#mediacachesourcesconfig3", 
            "text": "", 
            "title": "MediaCacheSourcesConfig3"
        }, 
        {
            "location": "/legacy-docs/Model/MediaCacheSourcesConfig3/#properties", 
            "text": "Name  Type  Description  Notes      sources  \\Model\\ShortObject[]      serverName  string      saveFieldList  string[]   [optional]    version  string       [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }, 
        {
            "location": "/legacy-docs/Model/MediaCacheStoreAction/", 
            "text": "MediaCacheStoreAction\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "MediaCacheStoreAction"
        }, 
        {
            "location": "/legacy-docs/Model/MediaCacheStoreAction/#mediacachestoreaction", 
            "text": "", 
            "title": "MediaCacheStoreAction"
        }, 
        {
            "location": "/legacy-docs/Model/MediaCacheStoreAction/#properties", 
            "text": "Name  Type  Description  Notes      vhostName  string      serverName  string       [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }, 
        {
            "location": "/legacy-docs/Model/MediaCacheStoreConfig/", 
            "text": "MediaCacheStoreConfig\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\npath\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nwriteRate\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nname\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ndescription\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nmaxSize\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nwriteRateMaxBucketSize\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nsaveFieldList\n\n\nstring[]\n\n\n\n\n[optional]\n\n\n\n\n\n\nversion\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "MediaCacheStoreConfig"
        }, 
        {
            "location": "/legacy-docs/Model/MediaCacheStoreConfig/#mediacachestoreconfig", 
            "text": "", 
            "title": "MediaCacheStoreConfig"
        }, 
        {
            "location": "/legacy-docs/Model/MediaCacheStoreConfig/#properties", 
            "text": "Name  Type  Description  Notes      path  string      writeRate  string      name  string      serverName  string      description  string      maxSize  string      writeRateMaxBucketSize  string      saveFieldList  string[]   [optional]    version  string       [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }, 
        {
            "location": "/legacy-docs/Model/MediaCacheStoreConfig3/", 
            "text": "MediaCacheStoreConfig3\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\npath\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nwriteRate\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ndescription\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nstoreName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nmaxSize\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nwriteRateMaxBucketSize\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nsaveFieldList\n\n\nstring[]\n\n\n\n\n[optional]\n\n\n\n\n\n\nversion\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "MediaCacheStoreConfig3"
        }, 
        {
            "location": "/legacy-docs/Model/MediaCacheStoreConfig3/#mediacachestoreconfig3", 
            "text": "", 
            "title": "MediaCacheStoreConfig3"
        }, 
        {
            "location": "/legacy-docs/Model/MediaCacheStoreConfig3/#properties", 
            "text": "Name  Type  Description  Notes      path  string      writeRate  string      serverName  string      description  string      storeName  string      maxSize  string      writeRateMaxBucketSize  string      saveFieldList  string[]   [optional]    version  string       [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }, 
        {
            "location": "/legacy-docs/Model/MediaCacheStoreConfigAdv/", 
            "text": "MediaCacheStoreConfigAdv\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nadvancedSettings\n\n\n\\Model\\AdvancedSetting[]\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nsaveFieldList\n\n\nstring[]\n\n\n\n\n[optional]\n\n\n\n\n\n\nversion\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "MediaCacheStoreConfigAdv"
        }, 
        {
            "location": "/legacy-docs/Model/MediaCacheStoreConfigAdv/#mediacachestoreconfigadv", 
            "text": "", 
            "title": "MediaCacheStoreConfigAdv"
        }, 
        {
            "location": "/legacy-docs/Model/MediaCacheStoreConfigAdv/#properties", 
            "text": "Name  Type  Description  Notes      advancedSettings  \\Model\\AdvancedSetting[]      serverName  string      saveFieldList  string[]   [optional]    version  string       [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }, 
        {
            "location": "/legacy-docs/Model/MediaCacheStoreList/", 
            "text": "MediaCacheStoreList\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nsaveFieldList\n\n\nstring[]\n\n\n\n\n[optional]\n\n\n\n\n\n\nversion\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nmediacacheitemlist\n\n\n\\Model\\IMediaCacheItemSummary[]\n\n\n\n\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "MediaCacheStoreList"
        }, 
        {
            "location": "/legacy-docs/Model/MediaCacheStoreList/#mediacachestorelist", 
            "text": "", 
            "title": "MediaCacheStoreList"
        }, 
        {
            "location": "/legacy-docs/Model/MediaCacheStoreList/#properties", 
            "text": "Name  Type  Description  Notes      serverName  string      saveFieldList  string[]   [optional]    version  string      mediacacheitemlist  \\Model\\IMediaCacheItemSummary[]       [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }, 
        {
            "location": "/legacy-docs/Model/MediaCacheStoresConfig/", 
            "text": "MediaCacheStoresConfig\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nstores\n\n\n\\Model\\ShortObject[]\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nsaveFieldList\n\n\nstring[]\n\n\n\n\n[optional]\n\n\n\n\n\n\nversion\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "MediaCacheStoresConfig"
        }, 
        {
            "location": "/legacy-docs/Model/MediaCacheStoresConfig/#mediacachestoresconfig", 
            "text": "", 
            "title": "MediaCacheStoresConfig"
        }, 
        {
            "location": "/legacy-docs/Model/MediaCacheStoresConfig/#properties", 
            "text": "Name  Type  Description  Notes      stores  \\Model\\ShortObject[]      serverName  string      saveFieldList  string[]   [optional]    version  string       [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }, 
        {
            "location": "/legacy-docs/Model/MediaCacheStoresConfig3/", 
            "text": "MediaCacheStoresConfig3\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nstores\n\n\n\\Model\\ShortObject[]\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nsaveFieldList\n\n\nstring[]\n\n\n\n\n[optional]\n\n\n\n\n\n\nversion\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "MediaCacheStoresConfig3"
        }, 
        {
            "location": "/legacy-docs/Model/MediaCacheStoresConfig3/#mediacachestoresconfig3", 
            "text": "", 
            "title": "MediaCacheStoresConfig3"
        }, 
        {
            "location": "/legacy-docs/Model/MediaCacheStoresConfig3/#properties", 
            "text": "Name  Type  Description  Notes      stores  \\Model\\ShortObject[]      serverName  string      saveFieldList  string[]   [optional]    version  string       [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }, 
        {
            "location": "/legacy-docs/Model/MediaCasterConfig/", 
            "text": "MediaCasterConfig\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nstreamType\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nkeepAliveTime\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nname\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ndescription\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nbaseClass\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nsaveFieldList\n\n\nstring[]\n\n\n\n\n[optional]\n\n\n\n\n\n\nversion\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nconnectionTimeout\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "MediaCasterConfig"
        }, 
        {
            "location": "/legacy-docs/Model/MediaCasterConfig/#mediacasterconfig", 
            "text": "", 
            "title": "MediaCasterConfig"
        }, 
        {
            "location": "/legacy-docs/Model/MediaCasterConfig/#properties", 
            "text": "Name  Type  Description  Notes      streamType  string      keepAliveTime  string      name  string      serverName  string      description  string      baseClass  string      saveFieldList  string[]   [optional]    version  string      connectionTimeout  string       [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }, 
        {
            "location": "/legacy-docs/Model/MediaCastersConfig/", 
            "text": "MediaCastersConfig\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nmediaCasters\n\n\n\\Model\\MediaCasterConfig[]\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nsaveFieldList\n\n\nstring[]\n\n\n\n\n[optional]\n\n\n\n\n\n\nversion\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "MediaCastersConfig"
        }, 
        {
            "location": "/legacy-docs/Model/MediaCastersConfig/#mediacastersconfig", 
            "text": "", 
            "title": "MediaCastersConfig"
        }, 
        {
            "location": "/legacy-docs/Model/MediaCastersConfig/#properties", 
            "text": "Name  Type  Description  Notes      mediaCasters  \\Model\\MediaCasterConfig[]      serverName  string      saveFieldList  string[]   [optional]    version  string       [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }, 
        {
            "location": "/legacy-docs/Model/ModuleConfig/", 
            "text": "ModuleConfig\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nname\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ndescription\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nsaveFieldList\n\n\nstring[]\n\n\n\n\n[optional]\n\n\n\n\n\n\nversion\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nclass\n\n\nstring\n\n\n\n\n\n\n\n\n\n\norder\n\n\nint\n\n\n\n\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "ModuleConfig"
        }, 
        {
            "location": "/legacy-docs/Model/ModuleConfig/#moduleconfig", 
            "text": "", 
            "title": "ModuleConfig"
        }, 
        {
            "location": "/legacy-docs/Model/ModuleConfig/#properties", 
            "text": "Name  Type  Description  Notes      name  string      serverName  string      description  string      saveFieldList  string[]   [optional]    version  string      class  string      order  int       [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }, 
        {
            "location": "/legacy-docs/Model/ModulesConfig/", 
            "text": "ModulesConfig\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nmoduleList\n\n\n\\Model\\ModuleConfig[]\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nsaveFieldList\n\n\nstring[]\n\n\n\n\n[optional]\n\n\n\n\n\n\nversion\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "ModulesConfig"
        }, 
        {
            "location": "/legacy-docs/Model/ModulesConfig/#modulesconfig", 
            "text": "", 
            "title": "ModulesConfig"
        }, 
        {
            "location": "/legacy-docs/Model/ModulesConfig/#properties", 
            "text": "Name  Type  Description  Notes      moduleList  \\Model\\ModuleConfig[]      serverName  string      saveFieldList  string[]   [optional]    version  string       [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }, 
        {
            "location": "/legacy-docs/Model/MonitoringConfig/", 
            "text": "MonitoringConfig\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\ndebugEnable\n\n\nbool\n\n\n\n\n\n\n\n\n\n\nenable\n\n\nbool\n\n\n\n\n\n\n\n\n\n\ndatabaseDebugEnable\n\n\nbool\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nsaveFieldList\n\n\nstring[]\n\n\n\n\n[optional]\n\n\n\n\n\n\nversion\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "MonitoringConfig"
        }, 
        {
            "location": "/legacy-docs/Model/MonitoringConfig/#monitoringconfig", 
            "text": "", 
            "title": "MonitoringConfig"
        }, 
        {
            "location": "/legacy-docs/Model/MonitoringConfig/#properties", 
            "text": "Name  Type  Description  Notes      debugEnable  bool      enable  bool      databaseDebugEnable  bool      serverName  string      saveFieldList  string[]   [optional]    version  string       [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }, 
        {
            "location": "/legacy-docs/Model/OutgoingStreamConfig/", 
            "text": "OutgoingStreamConfig\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nsomeProp2\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nsomeProp\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nname\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nsaveFieldList\n\n\nstring[]\n\n\n\n\n[optional]\n\n\n\n\n\n\nversion\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "OutgoingStreamConfig"
        }, 
        {
            "location": "/legacy-docs/Model/OutgoingStreamConfig/#outgoingstreamconfig", 
            "text": "", 
            "title": "OutgoingStreamConfig"
        }, 
        {
            "location": "/legacy-docs/Model/OutgoingStreamConfig/#properties", 
            "text": "Name  Type  Description  Notes      someProp2  string      someProp  string      name  string      serverName  string      saveFieldList  string[]   [optional]    version  string       [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }, 
        {
            "location": "/legacy-docs/Model/Output/", 
            "text": "Output\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nrtmp\n\n\n\\Model\\LiveEncoderConfigRTMP\n\n\n\n\n\n\n\n\n\n\nvideo\n\n\n\\Model\\LiveEncoderConfigVideoSettings\n\n\n\n\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "Output"
        }, 
        {
            "location": "/legacy-docs/Model/Output/#output", 
            "text": "", 
            "title": "Output"
        }, 
        {
            "location": "/legacy-docs/Model/Output/#properties", 
            "text": "Name  Type  Description  Notes      rtmp  \\Model\\LiveEncoderConfigRTMP      video  \\Model\\LiveEncoderConfigVideoSettings       [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }, 
        {
            "location": "/legacy-docs/Model/PublisherAppConfig/", 
            "text": "PublisherAppConfig\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\npassword\n\n\nstring\n\n\n\n\n\n\n\n\n\n\npublisherName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ndescription\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nsaveFieldList\n\n\nstring[]\n\n\n\n\n[optional]\n\n\n\n\n\n\nversion\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "PublisherAppConfig"
        }, 
        {
            "location": "/legacy-docs/Model/PublisherAppConfig/#publisherappconfig", 
            "text": "", 
            "title": "PublisherAppConfig"
        }, 
        {
            "location": "/legacy-docs/Model/PublisherAppConfig/#properties", 
            "text": "Name  Type  Description  Notes      password  string      publisherName  string      serverName  string      description  string      saveFieldList  string[]   [optional]    version  string       [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }, 
        {
            "location": "/legacy-docs/Model/PublisherConfig/", 
            "text": "PublisherConfig\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\npassword\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nname\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ndescription\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nsaveFieldList\n\n\nstring[]\n\n\n\n\n[optional]\n\n\n\n\n\n\nversion\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "PublisherConfig"
        }, 
        {
            "location": "/legacy-docs/Model/PublisherConfig/#publisherconfig", 
            "text": "", 
            "title": "PublisherConfig"
        }, 
        {
            "location": "/legacy-docs/Model/PublisherConfig/#properties", 
            "text": "Name  Type  Description  Notes      password  string      name  string      serverName  string      description  string      saveFieldList  string[]   [optional]    version  string       [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }, 
        {
            "location": "/legacy-docs/Model/PublisherConfig3/", 
            "text": "PublisherConfig3\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\npassword\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\npublisher\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ndescription\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nsaveFieldList\n\n\nstring[]\n\n\n\n\n[optional]\n\n\n\n\n\n\nversion\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "PublisherConfig3"
        }, 
        {
            "location": "/legacy-docs/Model/PublisherConfig3/#publisherconfig3", 
            "text": "", 
            "title": "PublisherConfig3"
        }, 
        {
            "location": "/legacy-docs/Model/PublisherConfig3/#properties", 
            "text": "Name  Type  Description  Notes      password  string      serverName  string      publisher  string      description  string      saveFieldList  string[]   [optional]    version  string       [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }, 
        {
            "location": "/legacy-docs/Model/PublisherVhostConfig/", 
            "text": "PublisherVhostConfig\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\npassword\n\n\nstring\n\n\n\n\n\n\n\n\n\n\npublisherName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ndescription\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nsaveFieldList\n\n\nstring[]\n\n\n\n\n[optional]\n\n\n\n\n\n\nversion\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "PublisherVhostConfig"
        }, 
        {
            "location": "/legacy-docs/Model/PublisherVhostConfig/#publishervhostconfig", 
            "text": "", 
            "title": "PublisherVhostConfig"
        }, 
        {
            "location": "/legacy-docs/Model/PublisherVhostConfig/#properties", 
            "text": "Name  Type  Description  Notes      password  string      publisherName  string      serverName  string      description  string      saveFieldList  string[]   [optional]    version  string       [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }, 
        {
            "location": "/legacy-docs/Model/PublishersAppConfig/", 
            "text": "PublishersAppConfig\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\npublishers\n\n\n\\Model\\PublisherVhostConfig[]\n\n\n\n\n\n\n\n\n\n\nsaveFieldList\n\n\nstring[]\n\n\n\n\n[optional]\n\n\n\n\n\n\nversion\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "PublishersAppConfig"
        }, 
        {
            "location": "/legacy-docs/Model/PublishersAppConfig/#publishersappconfig", 
            "text": "", 
            "title": "PublishersAppConfig"
        }, 
        {
            "location": "/legacy-docs/Model/PublishersAppConfig/#properties", 
            "text": "Name  Type  Description  Notes      serverName  string      publishers  \\Model\\PublisherVhostConfig[]      saveFieldList  string[]   [optional]    version  string       [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }, 
        {
            "location": "/legacy-docs/Model/PublishersConfig/", 
            "text": "PublishersConfig\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\npublishers\n\n\n\\Model\\PublisherConfig[]\n\n\n\n\n\n\n\n\n\n\nsaveFieldList\n\n\nstring[]\n\n\n\n\n[optional]\n\n\n\n\n\n\nversion\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "PublishersConfig"
        }, 
        {
            "location": "/legacy-docs/Model/PublishersConfig/#publishersconfig", 
            "text": "", 
            "title": "PublishersConfig"
        }, 
        {
            "location": "/legacy-docs/Model/PublishersConfig/#properties", 
            "text": "Name  Type  Description  Notes      serverName  string      publishers  \\Model\\PublisherConfig[]      saveFieldList  string[]   [optional]    version  string       [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }, 
        {
            "location": "/legacy-docs/Model/PublishersConfig3/", 
            "text": "PublishersConfig3\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\npublishers\n\n\n\\Model\\PublisherConfig3[]\n\n\n\n\n\n\n\n\n\n\nsaveFieldList\n\n\nstring[]\n\n\n\n\n[optional]\n\n\n\n\n\n\nversion\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "PublishersConfig3"
        }, 
        {
            "location": "/legacy-docs/Model/PublishersConfig3/#publishersconfig3", 
            "text": "", 
            "title": "PublishersConfig3"
        }, 
        {
            "location": "/legacy-docs/Model/PublishersConfig3/#properties", 
            "text": "Name  Type  Description  Notes      serverName  string      publishers  \\Model\\PublisherConfig3[]      saveFieldList  string[]   [optional]    version  string       [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }, 
        {
            "location": "/legacy-docs/Model/PublishersVhostConfig/", 
            "text": "PublishersVhostConfig\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\npublishers\n\n\n\\Model\\PublisherVhostConfig[]\n\n\n\n\n\n\n\n\n\n\nsaveFieldList\n\n\nstring[]\n\n\n\n\n[optional]\n\n\n\n\n\n\nversion\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "PublishersVhostConfig"
        }, 
        {
            "location": "/legacy-docs/Model/PublishersVhostConfig/#publishersvhostconfig", 
            "text": "", 
            "title": "PublishersVhostConfig"
        }, 
        {
            "location": "/legacy-docs/Model/PublishersVhostConfig/#properties", 
            "text": "Name  Type  Description  Notes      serverName  string      publishers  \\Model\\PublisherVhostConfig[]      saveFieldList  string[]   [optional]    version  string       [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }, 
        {
            "location": "/legacy-docs/Model/PushPublishStreamAppAction/", 
            "text": "PushPublishStreamAppAction\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nappName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nentryName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "PushPublishStreamAppAction"
        }, 
        {
            "location": "/legacy-docs/Model/PushPublishStreamAppAction/#pushpublishstreamappaction", 
            "text": "", 
            "title": "PushPublishStreamAppAction"
        }, 
        {
            "location": "/legacy-docs/Model/PushPublishStreamAppAction/#properties", 
            "text": "Name  Type  Description  Notes      vhostName  string      appName  string      entryName  string      serverName  string       [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }, 
        {
            "location": "/legacy-docs/Model/PushPublishStreamAppConfig/", 
            "text": "PushPublishStreamAppConfig\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nshoutcastDestination\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nicecast2Public\n\n\nbool\n\n\n\n\n\n\n\n\n\n\nakamaiDestinationServer\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nshoutcastIcq\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nfacebookEventSourceName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ntimeToLive\n\n\nint\n\n\n\n\n\n\n\n\n\n\npassword\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nfacebookDestType\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nrtpWrap\n\n\nbool\n\n\n\n\n\n\n\n\n\n\nicecast2Name\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nakamaiHostId\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nicecast2Icq\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nhost\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nconnectionFlashVersion\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ncupertinoRenditions\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nfacebookTitle\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ndebugPackets\n\n\nbool\n\n\n\n\n\n\n\n\n\n\nshoutcastPublic\n\n\nbool\n\n\n\n\n\n\n\n\n\n\nshoutcastAim\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nprofile\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nicecast2Description\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nsessionStatus\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nshoutcastMetaname\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nicecast2Genre\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nfacebookDestId\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nqueryString\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nakamaiEventName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nversion\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nshoutcastName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nsendStreamCloseCommands\n\n\nbool\n\n\n\n\n\n\n\n\n\n\nport\n\n\nint\n\n\n\n\n\n\n\n\n\n\nsendFCPublish\n\n\nbool\n\n\n\n\n\n\n\n\n\n\nicecast2Aim\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nhttpPlaylistCount\n\n\nint\n\n\n\n\n\n\n\n\n\n\nhttpPlaylistTimeout\n\n\nint\n\n\n\n\n\n\n\n\n\n\nfacebookDestName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\naudioPort\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nicecast2Metaname\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nsourceStreamName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nconnectionCode\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nlocalBindAddress\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nshoutcastProtocol\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ndebugLogChildren\n\n\nbool\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nadaptiveStreaming\n\n\nbool\n\n\n\n\n\n\n\n\n\n\nfacebookEventSourceType\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nenabled\n\n\nbool\n\n\n\n\n\n\n\n\n\n\nshoutcastIrc\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nsendReleaseStream\n\n\nbool\n\n\n\n\n\n\n\n\n\n\nshoutcastUrl\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nicecast2Irc\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nfacebookDescription\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ndebugLog\n\n\nbool\n\n\n\n\n\n\n\n\n\n\nshoutcastGenre\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nakamaiStreamId\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nakamaiHdNetwork\n\n\nbool\n\n\n\n\n\n\n\n\n\n\nadaptiveGroups\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nsaveFieldList\n\n\nstring[]\n\n\n\n\n[optional]\n\n\n\n\n\n\nhttpPlaylistAcrossSessions\n\n\nbool\n\n\n\n\n\n\n\n\n\n\nsecureTokenSharedSecret\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nhttpFakePosts\n\n\nbool\n\n\n\n\n\n\n\n\n\n\nsendSSL\n\n\nbool\n\n\n\n\n\n\n\n\n\n\nsendOriginalTimecodes\n\n\nbool\n\n\n\n\n\n\n\n\n\n\nicecast2Destination\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nfacebookAccessToken\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nuserName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nfacebookPrivacy\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nstreamName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nremoveDefaultAppInstance\n\n\nbool\n\n\n\n\n\n\n\n\n\n\nvideoPort\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nhttpWriterDebug\n\n\nbool\n\n\n\n\n\n\n\n\n\n\nicecast2Url\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nakamaiSendToBackupServer\n\n\nbool\n\n\n\n\n\n\n\n\n\n\ndestinationServer\n\n\nstring\n\n\n\n\n\n\n\n\n\n\napplication\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nentryName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nstreamWaitTimeout\n\n\nint\n\n\n\n\n\n\n\n\n\n\nappInstance\n\n\nstring\n\n\n\n\n\n\n\n\n\n\noriginalTimecodeThreshold\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nautoStartTranscoder\n\n\nbool\n\n\n\n\n\n\n\n\n\n\nsanjoseRepresentationId\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "PushPublishStreamAppConfig"
        }, 
        {
            "location": "/legacy-docs/Model/PushPublishStreamAppConfig/#pushpublishstreamappconfig", 
            "text": "", 
            "title": "PushPublishStreamAppConfig"
        }, 
        {
            "location": "/legacy-docs/Model/PushPublishStreamAppConfig/#properties", 
            "text": "Name  Type  Description  Notes      shoutcastDestination  string      icecast2Public  bool      akamaiDestinationServer  string      shoutcastIcq  string      facebookEventSourceName  string      timeToLive  int      password  string      facebookDestType  string      rtpWrap  bool      icecast2Name  string      akamaiHostId  string      icecast2Icq  string      host  string      connectionFlashVersion  string      cupertinoRenditions  string      facebookTitle  string      debugPackets  bool      shoutcastPublic  bool      shoutcastAim  string      profile  string      icecast2Description  string      sessionStatus  string      shoutcastMetaname  string      icecast2Genre  string      facebookDestId  string      queryString  string      akamaiEventName  string      version  string      shoutcastName  string      sendStreamCloseCommands  bool      port  int      sendFCPublish  bool      icecast2Aim  string      httpPlaylistCount  int      httpPlaylistTimeout  int      facebookDestName  string      audioPort  string      icecast2Metaname  string      sourceStreamName  string      connectionCode  string      localBindAddress  string      shoutcastProtocol  string      debugLogChildren  bool      serverName  string      adaptiveStreaming  bool      facebookEventSourceType  string      enabled  bool      shoutcastIrc  string      sendReleaseStream  bool      shoutcastUrl  string      icecast2Irc  string      facebookDescription  string      debugLog  bool      shoutcastGenre  string      akamaiStreamId  string      akamaiHdNetwork  bool      adaptiveGroups  string      saveFieldList  string[]   [optional]    httpPlaylistAcrossSessions  bool      secureTokenSharedSecret  string      httpFakePosts  bool      sendSSL  bool      sendOriginalTimecodes  bool      icecast2Destination  string      facebookAccessToken  string      userName  string      facebookPrivacy  string      streamName  string      removeDefaultAppInstance  bool      videoPort  string      httpWriterDebug  bool      icecast2Url  string      akamaiSendToBackupServer  bool      destinationServer  string      application  string      entryName  string      streamWaitTimeout  int      appInstance  string      originalTimecodeThreshold  string      autoStartTranscoder  bool      sanjoseRepresentationId  string       [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }, 
        {
            "location": "/legacy-docs/Model/PushPublishStreamsAppConfig/", 
            "text": "PushPublishStreamsAppConfig\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nmapEntries\n\n\n\\Model\\PushPublishStreamAppConfig[]\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nsaveFieldList\n\n\nstring[]\n\n\n\n\n[optional]\n\n\n\n\n\n\nversion\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "PushPublishStreamsAppConfig"
        }, 
        {
            "location": "/legacy-docs/Model/PushPublishStreamsAppConfig/#pushpublishstreamsappconfig", 
            "text": "", 
            "title": "PushPublishStreamsAppConfig"
        }, 
        {
            "location": "/legacy-docs/Model/PushPublishStreamsAppConfig/#properties", 
            "text": "Name  Type  Description  Notes      mapEntries  \\Model\\PushPublishStreamAppConfig[]      serverName  string      saveFieldList  string[]   [optional]    version  string       [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }, 
        {
            "location": "/legacy-docs/Model/RESTInfoConfig/", 
            "text": "RESTInfoConfig\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\napiVersion\n\n\nint\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ncentralConfig\n\n\nbool\n\n\n\n\n\n\n\n\n\n\nsaveFieldList\n\n\nstring[]\n\n\n\n\n[optional]\n\n\n\n\n\n\nversion\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nrestBuild\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nlicenseValid\n\n\nbool\n\n\n\n\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "RESTInfoConfig"
        }, 
        {
            "location": "/legacy-docs/Model/RESTInfoConfig/#restinfoconfig", 
            "text": "", 
            "title": "RESTInfoConfig"
        }, 
        {
            "location": "/legacy-docs/Model/RESTInfoConfig/#properties", 
            "text": "Name  Type  Description  Notes      apiVersion  int      serverName  string      centralConfig  bool      saveFieldList  string[]   [optional]    version  string      restBuild  string      licenseValid  bool       [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }, 
        {
            "location": "/legacy-docs/Model/RTMP/", 
            "text": "RTMP\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\npassword\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nstream\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nbackupUrl\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nurl\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nusername\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "RTMP"
        }, 
        {
            "location": "/legacy-docs/Model/RTMP/#rtmp", 
            "text": "", 
            "title": "RTMP"
        }, 
        {
            "location": "/legacy-docs/Model/RTMP/#properties", 
            "text": "Name  Type  Description  Notes      password  string      stream  string      backupUrl  string      url  string      username  string       [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }, 
        {
            "location": "/legacy-docs/Model/SDPFileAction/", 
            "text": "SDPFileAction\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nsdpfileName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "SDPFileAction"
        }, 
        {
            "location": "/legacy-docs/Model/SDPFileAction/#sdpfileaction", 
            "text": "", 
            "title": "SDPFileAction"
        }, 
        {
            "location": "/legacy-docs/Model/SDPFileAction/#properties", 
            "text": "Name  Type  Description  Notes      vhostName  string      sdpfileName  string      serverName  string       [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }, 
        {
            "location": "/legacy-docs/Model/SDPFileAppAction/", 
            "text": "SDPFileAppAction\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nsdpfileName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nappName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "SDPFileAppAction"
        }, 
        {
            "location": "/legacy-docs/Model/SDPFileAppAction/#sdpfileappaction", 
            "text": "", 
            "title": "SDPFileAppAction"
        }, 
        {
            "location": "/legacy-docs/Model/SDPFileAppAction/#properties", 
            "text": "Name  Type  Description  Notes      vhostName  string      sdpfileName  string      appName  string      serverName  string       [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }, 
        {
            "location": "/legacy-docs/Model/SDPFileAppConfig/", 
            "text": "SDPFileAppConfig\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nname\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nsaveFieldList\n\n\nstring[]\n\n\n\n\n[optional]\n\n\n\n\n\n\nversion\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nuri\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "SDPFileAppConfig"
        }, 
        {
            "location": "/legacy-docs/Model/SDPFileAppConfig/#sdpfileappconfig", 
            "text": "", 
            "title": "SDPFileAppConfig"
        }, 
        {
            "location": "/legacy-docs/Model/SDPFileAppConfig/#properties", 
            "text": "Name  Type  Description  Notes      name  string      serverName  string      saveFieldList  string[]   [optional]    version  string      uri  string       [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }, 
        {
            "location": "/legacy-docs/Model/SDPFileConfig/", 
            "text": "SDPFileConfig\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nname\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nsaveFieldList\n\n\nstring[]\n\n\n\n\n[optional]\n\n\n\n\n\n\nversion\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nuri\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "SDPFileConfig"
        }, 
        {
            "location": "/legacy-docs/Model/SDPFileConfig/#sdpfileconfig", 
            "text": "", 
            "title": "SDPFileConfig"
        }, 
        {
            "location": "/legacy-docs/Model/SDPFileConfig/#properties", 
            "text": "Name  Type  Description  Notes      name  string      serverName  string      saveFieldList  string[]   [optional]    version  string      uri  string       [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }, 
        {
            "location": "/legacy-docs/Model/SDPFilesAppConfig/", 
            "text": "SDPFilesAppConfig\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nsdpFiles\n\n\n\\Model\\ShortObject[]\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nsaveFieldList\n\n\nstring[]\n\n\n\n\n[optional]\n\n\n\n\n\n\nversion\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "SDPFilesAppConfig"
        }, 
        {
            "location": "/legacy-docs/Model/SDPFilesAppConfig/#sdpfilesappconfig", 
            "text": "", 
            "title": "SDPFilesAppConfig"
        }, 
        {
            "location": "/legacy-docs/Model/SDPFilesAppConfig/#properties", 
            "text": "Name  Type  Description  Notes      sdpFiles  \\Model\\ShortObject[]      serverName  string      saveFieldList  string[]   [optional]    version  string       [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }, 
        {
            "location": "/legacy-docs/Model/SDPFilesConfig/", 
            "text": "SDPFilesConfig\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nsdpFiles\n\n\n\\Model\\ShortObject[]\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nsaveFieldList\n\n\nstring[]\n\n\n\n\n[optional]\n\n\n\n\n\n\nversion\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "SDPFilesConfig"
        }, 
        {
            "location": "/legacy-docs/Model/SDPFilesConfig/#sdpfilesconfig", 
            "text": "", 
            "title": "SDPFilesConfig"
        }, 
        {
            "location": "/legacy-docs/Model/SDPFilesConfig/#properties", 
            "text": "Name  Type  Description  Notes      sdpFiles  \\Model\\ShortObject[]      serverName  string      saveFieldList  string[]   [optional]    version  string       [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }, 
        {
            "location": "/legacy-docs/Model/SMILFileAction/", 
            "text": "SMILFileAction\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nsmilfileName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "SMILFileAction"
        }, 
        {
            "location": "/legacy-docs/Model/SMILFileAction/#smilfileaction", 
            "text": "", 
            "title": "SMILFileAction"
        }, 
        {
            "location": "/legacy-docs/Model/SMILFileAction/#properties", 
            "text": "Name  Type  Description  Notes      vhostName  string      smilfileName  string      serverName  string       [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }, 
        {
            "location": "/legacy-docs/Model/SMILFileAppAction/", 
            "text": "SMILFileAppAction\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nsmilfileName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nappName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "SMILFileAppAction"
        }, 
        {
            "location": "/legacy-docs/Model/SMILFileAppAction/#smilfileappaction", 
            "text": "", 
            "title": "SMILFileAppAction"
        }, 
        {
            "location": "/legacy-docs/Model/SMILFileAppAction/#properties", 
            "text": "Name  Type  Description  Notes      vhostName  string      smilfileName  string      appName  string      serverName  string       [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }, 
        {
            "location": "/legacy-docs/Model/SMILFileAppConfig/", 
            "text": "SMILFileAppConfig\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nname\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nsmilStreams\n\n\n\\Model\\SMILFileStreamConfig[]\n\n\n\n\n\n\n\n\n\n\nsaveFieldList\n\n\nstring[]\n\n\n\n\n[optional]\n\n\n\n\n\n\ntitle\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nversion\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "SMILFileAppConfig"
        }, 
        {
            "location": "/legacy-docs/Model/SMILFileAppConfig/#smilfileappconfig", 
            "text": "", 
            "title": "SMILFileAppConfig"
        }, 
        {
            "location": "/legacy-docs/Model/SMILFileAppConfig/#properties", 
            "text": "Name  Type  Description  Notes      name  string      serverName  string      smilStreams  \\Model\\SMILFileStreamConfig[]      saveFieldList  string[]   [optional]    title  string      version  string       [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }, 
        {
            "location": "/legacy-docs/Model/SMILFileConfig/", 
            "text": "SMILFileConfig\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nname\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nsmilStreams\n\n\n\\Model\\SMILFileStreamConfig[]\n\n\n\n\n\n\n\n\n\n\nsaveFieldList\n\n\nstring[]\n\n\n\n\n[optional]\n\n\n\n\n\n\ntitle\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nversion\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "SMILFileConfig"
        }, 
        {
            "location": "/legacy-docs/Model/SMILFileConfig/#smilfileconfig", 
            "text": "", 
            "title": "SMILFileConfig"
        }, 
        {
            "location": "/legacy-docs/Model/SMILFileConfig/#properties", 
            "text": "Name  Type  Description  Notes      name  string      serverName  string      smilStreams  \\Model\\SMILFileStreamConfig[]      saveFieldList  string[]   [optional]    title  string      version  string       [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }, 
        {
            "location": "/legacy-docs/Model/SMILFileStreamConfig/", 
            "text": "SMILFileStreamConfig\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nsystemLanguage\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ndur\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nngrp\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nkeyFrameOnly\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nsrc\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nsystemBitrate\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nvideoCodecId\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ntype\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nversion\n\n\nstring\n\n\n\n\n\n\n\n\n\n\naudioBitrate\n\n\nstring\n\n\n\n\n\n\n\n\n\n\naudioCodecId\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nvideoBitrate\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nisWowzaCaptionStream\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nvideoOnly\n\n\nstring\n\n\n\n\n\n\n\n\n\n\naudioOnly\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nwidth\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nsaveFieldList\n\n\nstring[]\n\n\n\n\n[optional]\n\n\n\n\n\n\nidx\n\n\nint\n\n\n\n\n\n\n\n\n\n\nbegin\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nwowzaCaptionIngestType\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nheight\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "SMILFileStreamConfig"
        }, 
        {
            "location": "/legacy-docs/Model/SMILFileStreamConfig/#smilfilestreamconfig", 
            "text": "", 
            "title": "SMILFileStreamConfig"
        }, 
        {
            "location": "/legacy-docs/Model/SMILFileStreamConfig/#properties", 
            "text": "Name  Type  Description  Notes      systemLanguage  string      dur  string      ngrp  string      keyFrameOnly  string      src  string      systemBitrate  string      serverName  string      videoCodecId  string      type  string      version  string      audioBitrate  string      audioCodecId  string      videoBitrate  string      isWowzaCaptionStream  string      videoOnly  string      audioOnly  string      width  string      saveFieldList  string[]   [optional]    idx  int      begin  string      wowzaCaptionIngestType  string      height  string       [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }, 
        {
            "location": "/legacy-docs/Model/SMILFilesAppConfig/", 
            "text": "SMILFilesAppConfig\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nappName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nsmilFiles\n\n\n\\Model\\ShortObject[]\n\n\n\n\n\n\n\n\n\n\nsaveFieldList\n\n\nstring[]\n\n\n\n\n[optional]\n\n\n\n\n\n\nversion\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "SMILFilesAppConfig"
        }, 
        {
            "location": "/legacy-docs/Model/SMILFilesAppConfig/#smilfilesappconfig", 
            "text": "", 
            "title": "SMILFilesAppConfig"
        }, 
        {
            "location": "/legacy-docs/Model/SMILFilesAppConfig/#properties", 
            "text": "Name  Type  Description  Notes      vhostName  string      appName  string      serverName  string      smilFiles  \\Model\\ShortObject[]      saveFieldList  string[]   [optional]    version  string       [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }, 
        {
            "location": "/legacy-docs/Model/SMILFilesConfig/", 
            "text": "SMILFilesConfig\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nvhostName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nsmilFiles\n\n\n\\Model\\ShortObject[]\n\n\n\n\n\n\n\n\n\n\nsaveFieldList\n\n\nstring[]\n\n\n\n\n[optional]\n\n\n\n\n\n\nversion\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "SMILFilesConfig"
        }, 
        {
            "location": "/legacy-docs/Model/SMILFilesConfig/#smilfilesconfig", 
            "text": "", 
            "title": "SMILFilesConfig"
        }, 
        {
            "location": "/legacy-docs/Model/SMILFilesConfig/#properties", 
            "text": "Name  Type  Description  Notes      vhostName  string      serverName  string      smilFiles  \\Model\\ShortObject[]      saveFieldList  string[]   [optional]    version  string       [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }, 
        {
            "location": "/legacy-docs/Model/SSLConfig/", 
            "text": "SSLConfig\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nsslKeyStorePassword\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nsslProtocols\n\n\nstring[]\n\n\n\n\n\n\n\n\n\n\nsslDomainToKeyStoreMapPath\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nsslCipherSuites\n\n\nstring[]\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nsslKeyStoreType\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nsslProtocol\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nsslAlgorithm\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nsaveFieldList\n\n\nstring[]\n\n\n\n\n[optional]\n\n\n\n\n\n\nsslKeyStorePath\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nversion\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nsslEnable\n\n\nbool\n\n\n\n\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "SSLConfig"
        }, 
        {
            "location": "/legacy-docs/Model/SSLConfig/#sslconfig", 
            "text": "", 
            "title": "SSLConfig"
        }, 
        {
            "location": "/legacy-docs/Model/SSLConfig/#properties", 
            "text": "Name  Type  Description  Notes      sslKeyStorePassword  string      sslProtocols  string[]      sslDomainToKeyStoreMapPath  string      sslCipherSuites  string[]      serverName  string      sslKeyStoreType  string      sslProtocol  string      sslAlgorithm  string      saveFieldList  string[]   [optional]    sslKeyStorePath  string      version  string      sslEnable  bool       [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }, 
        {
            "location": "/legacy-docs/Model/SecurityConfig/", 
            "text": "SecurityConfig\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nplayMaximumConnections\n\n\nint\n\n\n\n\n\n\n\n\n\n\npublishBlockDuplicateStreamNames\n\n\nbool\n\n\n\n\n\n\n\n\n\n\npublishIPWhiteList\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nplayAuthenticationMethod\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nclientStreamWriteAccess\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nplayIPWhiteList\n\n\nstring\n\n\n\n\n\n\n\n\n\n\npublishRequirePassword\n\n\nbool\n\n\n\n\n\n\n\n\n\n\nplayIPBlackList\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nversion\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nsecureTokenVersion\n\n\nint\n\n\n\n\n\n\n\n\n\n\npublishPasswordFile\n\n\nstring\n\n\n\n\n\n\n\n\n\n\npublishValidEncoders\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nsecureTokenQueryParametersPrefix\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nsecureTokenUseTEAForRTMP\n\n\nbool\n\n\n\n\n\n\n\n\n\n\npublishAuthenticationMethod\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nsecureTokenHashAlgorithm\n\n\nstring\n\n\n\n\n\n\n\n\n\n\npublishIPBlackList\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nplayRequireSecureConnection\n\n\nbool\n\n\n\n\n\n\n\n\n\n\nsecureTokenOriginSharedSecret\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nsaveFieldList\n\n\nstring[]\n\n\n\n\n[optional]\n\n\n\n\n\n\nsecureTokenIncludeClientIPInHash\n\n\nbool\n\n\n\n\n\n\n\n\n\n\npublishRTMPSecureURL\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nsecureTokenSharedSecret\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "SecurityConfig"
        }, 
        {
            "location": "/legacy-docs/Model/SecurityConfig/#securityconfig", 
            "text": "", 
            "title": "SecurityConfig"
        }, 
        {
            "location": "/legacy-docs/Model/SecurityConfig/#properties", 
            "text": "Name  Type  Description  Notes      playMaximumConnections  int      publishBlockDuplicateStreamNames  bool      publishIPWhiteList  string      playAuthenticationMethod  string      serverName  string      clientStreamWriteAccess  string      playIPWhiteList  string      publishRequirePassword  bool      playIPBlackList  string      version  string      secureTokenVersion  int      publishPasswordFile  string      publishValidEncoders  string      secureTokenQueryParametersPrefix  string      secureTokenUseTEAForRTMP  bool      publishAuthenticationMethod  string      secureTokenHashAlgorithm  string      publishIPBlackList  string      playRequireSecureConnection  bool      secureTokenOriginSharedSecret  string      saveFieldList  string[]   [optional]    secureTokenIncludeClientIPInHash  bool      publishRTMPSecureURL  string      secureTokenSharedSecret  string       [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }, 
        {
            "location": "/legacy-docs/Model/ServerAction/", 
            "text": "ServerAction\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "ServerAction"
        }, 
        {
            "location": "/legacy-docs/Model/ServerAction/#serveraction", 
            "text": "", 
            "title": "ServerAction"
        }, 
        {
            "location": "/legacy-docs/Model/ServerAction/#properties", 
            "text": "Name  Type  Description  Notes      serverName  string       [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }, 
        {
            "location": "/legacy-docs/Model/ServerConfig/", 
            "text": "ServerConfig\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\ntransportThreadPoolAutoValue\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nhandlerThreadPool\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ntransportThreadPool\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nipAddress\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ndescription\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nrtpDataPortSharingPort\n\n\nint\n\n\n\n\n\n\n\n\n\n\nversion\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nport\n\n\nint\n\n\n\n\n\n\n\n\n\n\nserverListeners\n\n\n\\Model\\ServerListenersConfig\n\n\n\n\n\n\n\n\n\n\nname\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nrtpDataPortSharing\n\n\nbool\n\n\n\n\n\n\n\n\n\n\nhandlerThreadPoolAutoValue\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ndefaultStreamPrefix\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nsaveFieldList\n\n\nstring[]\n\n\n\n\n[optional]\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "ServerConfig"
        }, 
        {
            "location": "/legacy-docs/Model/ServerConfig/#serverconfig", 
            "text": "", 
            "title": "ServerConfig"
        }, 
        {
            "location": "/legacy-docs/Model/ServerConfig/#properties", 
            "text": "Name  Type  Description  Notes      transportThreadPoolAutoValue  string      handlerThreadPool  string      transportThreadPool  string      ipAddress  string      serverName  string      description  string      rtpDataPortSharingPort  int      version  string      port  int      serverListeners  \\Model\\ServerListenersConfig      name  string      rtpDataPortSharing  bool      handlerThreadPoolAutoValue  string      defaultStreamPrefix  string      saveFieldList  string[]   [optional]     [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }, 
        {
            "location": "/legacy-docs/Model/ServerConfigAdv/", 
            "text": "ServerConfigAdv\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverListeners\n\n\n\\Model\\ServerListenerConfig[]\n\n\n\n\n\n\n\n\n\n\nadvancedSettings\n\n\n\\Model\\AdvancedSetting[]\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nsaveFieldList\n\n\nstring[]\n\n\n\n\n[optional]\n\n\n\n\n\n\nversion\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "ServerConfigAdv"
        }, 
        {
            "location": "/legacy-docs/Model/ServerConfigAdv/#serverconfigadv", 
            "text": "", 
            "title": "ServerConfigAdv"
        }, 
        {
            "location": "/legacy-docs/Model/ServerConfigAdv/#properties", 
            "text": "Name  Type  Description  Notes      serverListeners  \\Model\\ServerListenerConfig[]      advancedSettings  \\Model\\AdvancedSetting[]      serverName  string      saveFieldList  string[]   [optional]    version  string       [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }, 
        {
            "location": "/legacy-docs/Model/ServerLicensesConfig/", 
            "text": "ServerLicensesConfig\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nlicenseList\n\n\nstring[]\n\n\n\n\n\n\n\n\n\n\nsaveFieldList\n\n\nstring[]\n\n\n\n\n[optional]\n\n\n\n\n\n\nversion\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "ServerLicensesConfig"
        }, 
        {
            "location": "/legacy-docs/Model/ServerLicensesConfig/#serverlicensesconfig", 
            "text": "", 
            "title": "ServerLicensesConfig"
        }, 
        {
            "location": "/legacy-docs/Model/ServerLicensesConfig/#properties", 
            "text": "Name  Type  Description  Notes      serverName  string      licenseList  string[]      saveFieldList  string[]   [optional]    version  string       [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }, 
        {
            "location": "/legacy-docs/Model/ServerListenerConfig/", 
            "text": "ServerListenerConfig\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nbaseClass\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nsaveFieldList\n\n\nstring[]\n\n\n\n\n[optional]\n\n\n\n\n\n\nversion\n\n\nstring\n\n\n\n\n\n\n\n\n\n\norder\n\n\nint\n\n\n\n\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "ServerListenerConfig"
        }, 
        {
            "location": "/legacy-docs/Model/ServerListenerConfig/#serverlistenerconfig", 
            "text": "", 
            "title": "ServerListenerConfig"
        }, 
        {
            "location": "/legacy-docs/Model/ServerListenerConfig/#properties", 
            "text": "Name  Type  Description  Notes      serverName  string      baseClass  string      saveFieldList  string[]   [optional]    version  string      order  int       [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }, 
        {
            "location": "/legacy-docs/Model/ServerListenersConfig/", 
            "text": "ServerListenersConfig\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverListeners\n\n\n\\Model\\ServerListenerConfig[]\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nsaveFieldList\n\n\nstring[]\n\n\n\n\n[optional]\n\n\n\n\n\n\nversion\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "ServerListenersConfig"
        }, 
        {
            "location": "/legacy-docs/Model/ServerListenersConfig/#serverlistenersconfig", 
            "text": "", 
            "title": "ServerListenersConfig"
        }, 
        {
            "location": "/legacy-docs/Model/ServerListenersConfig/#properties", 
            "text": "Name  Type  Description  Notes      serverListeners  \\Model\\ServerListenerConfig[]      serverName  string      saveFieldList  string[]   [optional]    version  string       [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }, 
        {
            "location": "/legacy-docs/Model/ServerLogFileConfig/", 
            "text": "ServerLogFileConfig\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nendOffset\n\n\nint\n\n\n\n\n\n\n\n\n\n\nlogStartDate\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nlogDate\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nendDate\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nversion\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nlogLines\n\n\nstring[]\n\n\n\n\n\n\n\n\n\n\nfilterStr\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nretLineCount\n\n\nint\n\n\n\n\n\n\n\n\n\n\nlogFields\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nlogSoftware\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nstartOffset\n\n\nint\n\n\n\n\n\n\n\n\n\n\nsearchStr\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nregexSearch\n\n\nbool\n\n\n\n\n\n\n\n\n\n\nlogVersion\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nsaveFieldList\n\n\nstring[]\n\n\n\n\n[optional]\n\n\n\n\n\n\nfileLength\n\n\nint\n\n\n\n\n\n\n\n\n\n\nstartDate\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "ServerLogFileConfig"
        }, 
        {
            "location": "/legacy-docs/Model/ServerLogFileConfig/#serverlogfileconfig", 
            "text": "", 
            "title": "ServerLogFileConfig"
        }, 
        {
            "location": "/legacy-docs/Model/ServerLogFileConfig/#properties", 
            "text": "Name  Type  Description  Notes      endOffset  int      logStartDate  string      logDate  string      endDate  string      serverName  string      version  string      logLines  string[]      filterStr  string      retLineCount  int      logFields  string      logSoftware  string      startOffset  int      searchStr  string      regexSearch  bool      logVersion  string      saveFieldList  string[]   [optional]    fileLength  int      startDate  string       [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }, 
        {
            "location": "/legacy-docs/Model/ServerLogFileDownloadConfig/", 
            "text": "ServerLogFileDownloadConfig\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nsaveFieldList\n\n\nstring[]\n\n\n\n\n[optional]\n\n\n\n\n\n\nversion\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "ServerLogFileDownloadConfig"
        }, 
        {
            "location": "/legacy-docs/Model/ServerLogFileDownloadConfig/#serverlogfiledownloadconfig", 
            "text": "", 
            "title": "ServerLogFileDownloadConfig"
        }, 
        {
            "location": "/legacy-docs/Model/ServerLogFileDownloadConfig/#properties", 
            "text": "Name  Type  Description  Notes      serverName  string      saveFieldList  string[]   [optional]    version  string       [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }, 
        {
            "location": "/legacy-docs/Model/ServerLogFilesConfig/", 
            "text": "ServerLogFilesConfig\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nsaveFieldList\n\n\nstring[]\n\n\n\n\n[optional]\n\n\n\n\n\n\nversion\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nserverLogFiles\n\n\n\\Model\\ServerLogShortObject[]\n\n\n\n\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "ServerLogFilesConfig"
        }, 
        {
            "location": "/legacy-docs/Model/ServerLogFilesConfig/#serverlogfilesconfig", 
            "text": "", 
            "title": "ServerLogFilesConfig"
        }, 
        {
            "location": "/legacy-docs/Model/ServerLogFilesConfig/#properties", 
            "text": "Name  Type  Description  Notes      serverName  string      saveFieldList  string[]   [optional]    version  string      serverLogFiles  \\Model\\ServerLogShortObject[]       [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }, 
        {
            "location": "/legacy-docs/Model/ServerLogShortObject/", 
            "text": "ServerLogShortObject\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nfileSize\n\n\nint\n\n\n\n\n\n\n\n\n\n\nstartDateMS\n\n\nint\n\n\n\n\n\n\n\n\n\n\nid\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nhref\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "ServerLogShortObject"
        }, 
        {
            "location": "/legacy-docs/Model/ServerLogShortObject/#serverlogshortobject", 
            "text": "", 
            "title": "ServerLogShortObject"
        }, 
        {
            "location": "/legacy-docs/Model/ServerLogShortObject/#properties", 
            "text": "Name  Type  Description  Notes      fileSize  int      startDateMS  int      id  string      href  string       [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }, 
        {
            "location": "/legacy-docs/Model/ServerLogTypesConfig/", 
            "text": "ServerLogTypesConfig\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nserverLogType\n\n\nstring[]\n\n\n\n\n\n\n\n\n\n\nsaveFieldList\n\n\nstring[]\n\n\n\n\n[optional]\n\n\n\n\n\n\nversion\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "ServerLogTypesConfig"
        }, 
        {
            "location": "/legacy-docs/Model/ServerLogTypesConfig/#serverlogtypesconfig", 
            "text": "", 
            "title": "ServerLogTypesConfig"
        }, 
        {
            "location": "/legacy-docs/Model/ServerLogTypesConfig/#properties", 
            "text": "Name  Type  Description  Notes      serverName  string      serverLogType  string[]      saveFieldList  string[]   [optional]    version  string       [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }, 
        {
            "location": "/legacy-docs/Model/ServerLogsConfig/", 
            "text": "ServerLogsConfig\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nendOffset\n\n\nint\n\n\n\n\n\n\n\n\n\n\nlogStartDate\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nlogDate\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nendDate\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nversion\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nlogLines\n\n\nstring[]\n\n\n\n\n\n\n\n\n\n\nfilterStr\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nretLineCount\n\n\nint\n\n\n\n\n\n\n\n\n\n\nlogFields\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nlogSoftware\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nstartOffset\n\n\nint\n\n\n\n\n\n\n\n\n\n\nsearchStr\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nregexSearch\n\n\nbool\n\n\n\n\n\n\n\n\n\n\nlogVersion\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nsaveFieldList\n\n\nstring[]\n\n\n\n\n[optional]\n\n\n\n\n\n\nfileLength\n\n\nint\n\n\n\n\n\n\n\n\n\n\nstartDate\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "ServerLogsConfig"
        }, 
        {
            "location": "/legacy-docs/Model/ServerLogsConfig/#serverlogsconfig", 
            "text": "", 
            "title": "ServerLogsConfig"
        }, 
        {
            "location": "/legacy-docs/Model/ServerLogsConfig/#properties", 
            "text": "Name  Type  Description  Notes      endOffset  int      logStartDate  string      logDate  string      endDate  string      serverName  string      version  string      logLines  string[]      filterStr  string      retLineCount  int      logFields  string      logSoftware  string      startOffset  int      searchStr  string      regexSearch  bool      logVersion  string      saveFieldList  string[]   [optional]    fileLength  int      startDate  string       [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }, 
        {
            "location": "/legacy-docs/Model/ServerStatusConfig/", 
            "text": "ServerStatusConfig\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\ntranscoderWatermark\n\n\nbool\n\n\n\n\n\n\n\n\n\n\nserverVersion\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ngpuAcceleration\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nwseName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ntranscoderLicensed\n\n\nbool\n\n\n\n\n\n\n\n\n\n\njavaMaxHeapSize\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ntranscoderLicensesInUse\n\n\nint\n\n\n\n\n\n\n\n\n\n\njavaVersion\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nhttpOriginAvailable\n\n\nbool\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nosArchitecture\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ndrmApplications\n\n\nstring[]\n\n\n\n\n\n\n\n\n\n\njavaVMVersion\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ntranscoderLicenses\n\n\nint\n\n\n\n\n\n\n\n\n\n\ntimeRunning\n\n\ndouble\n\n\n\n\n\n\n\n\n\n\nlicenseType\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nosBitness\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ndvrApplications\n\n\nstring[]\n\n\n\n\n\n\n\n\n\n\nosVersion\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nserverBuild\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nsaveFieldList\n\n\nstring[]\n\n\n\n\n[optional]\n\n\n\n\n\n\njavaName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nmaxConnections\n\n\nint\n\n\n\n\n\n\n\n\n\n\ndvrLicensed\n\n\nbool\n\n\n\n\n\n\n\n\n\n\nserverMode\n\n\nstring\n\n\n\n\n\n\n\n\n\n\njavaBitness\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ncurrentConnections\n\n\nint\n\n\n\n\n\n\n\n\n\n\ndrmLicensed\n\n\nbool\n\n\n\n\n\n\n\n\n\n\njavaVendor\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nosName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nversion\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ntranscoderApplications\n\n\nstring[]\n\n\n\n\n\n\n\n\n\n\ntranscoderAvailable\n\n\nbool\n\n\n\n\n\n\n\n\n\n\njavaHome\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nmaxIncommingStreams\n\n\nint\n\n\n\n\n\n\n\n\n\n\ntotalMemory\n\n\nint\n\n\n\n\n\n\n\n\n\n\navailableMemory\n\n\nint\n\n\n\n\n\n\n\n\n\n\nnativeBase\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ndvrInUse\n\n\nbool\n\n\n\n\n\n\n\n\n\n\ndrmInUse\n\n\nbool\n\n\n\n\n\n\n\n\n\n\nlicenseExpireDate\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nprocessorCores\n\n\nint\n\n\n\n\n\n\n\n\n\n\nrestAPIAvailable\n\n\nbool\n\n\n\n\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "ServerStatusConfig"
        }, 
        {
            "location": "/legacy-docs/Model/ServerStatusConfig/#serverstatusconfig", 
            "text": "", 
            "title": "ServerStatusConfig"
        }, 
        {
            "location": "/legacy-docs/Model/ServerStatusConfig/#properties", 
            "text": "Name  Type  Description  Notes      transcoderWatermark  bool      serverVersion  string      gpuAcceleration  string      wseName  string      transcoderLicensed  bool      javaMaxHeapSize  string      transcoderLicensesInUse  int      javaVersion  string      httpOriginAvailable  bool      serverName  string      osArchitecture  string      drmApplications  string[]      javaVMVersion  string      transcoderLicenses  int      timeRunning  double      licenseType  string      osBitness  string      dvrApplications  string[]      osVersion  string      serverBuild  string      saveFieldList  string[]   [optional]    javaName  string      maxConnections  int      dvrLicensed  bool      serverMode  string      javaBitness  string      currentConnections  int      drmLicensed  bool      javaVendor  string      osName  string      version  string      transcoderApplications  string[]      transcoderAvailable  bool      javaHome  string      maxIncommingStreams  int      totalMemory  int      availableMemory  int      nativeBase  string      dvrInUse  bool      drmInUse  bool      licenseExpireDate  string      processorCores  int      restAPIAvailable  bool       [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }, 
        {
            "location": "/legacy-docs/Model/ServerTuneConfig/", 
            "text": "ServerTuneConfig\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nheapSizeCurrent\n\n\nint\n\n\n\n\n\n\n\n\n\n\ngarbageCollectorCurrent\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nheapSize\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ngarbageCollector\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nsaveFieldList\n\n\nstring[]\n\n\n\n\n[optional]\n\n\n\n\n\n\nversion\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "ServerTuneConfig"
        }, 
        {
            "location": "/legacy-docs/Model/ServerTuneConfig/#servertuneconfig", 
            "text": "", 
            "title": "ServerTuneConfig"
        }, 
        {
            "location": "/legacy-docs/Model/ServerTuneConfig/#properties", 
            "text": "Name  Type  Description  Notes      heapSizeCurrent  int      garbageCollectorCurrent  string      serverName  string      heapSize  string      garbageCollector  string      saveFieldList  string[]   [optional]    version  string       [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }, 
        {
            "location": "/legacy-docs/Model/ServersConfig/", 
            "text": "ServersConfig\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nservers\n\n\n\\Model\\ServerConfig[]\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nsaveFieldList\n\n\nstring[]\n\n\n\n\n[optional]\n\n\n\n\n\n\nversion\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "ServersConfig"
        }, 
        {
            "location": "/legacy-docs/Model/ServersConfig/#serversconfig", 
            "text": "", 
            "title": "ServersConfig"
        }, 
        {
            "location": "/legacy-docs/Model/ServersConfig/#properties", 
            "text": "Name  Type  Description  Notes      servers  \\Model\\ServerConfig[]      serverName  string      saveFieldList  string[]   [optional]    version  string       [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }, 
        {
            "location": "/legacy-docs/Model/ShortObject/", 
            "text": "ShortObject\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nid\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nhref\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "ShortObject"
        }, 
        {
            "location": "/legacy-docs/Model/ShortObject/#shortobject", 
            "text": "", 
            "title": "ShortObject"
        }, 
        {
            "location": "/legacy-docs/Model/ShortObject/#properties", 
            "text": "Name  Type  Description  Notes      id  string      href  string       [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }, 
        {
            "location": "/legacy-docs/Model/ShortUrlEncoderConfig/", 
            "text": "ShortUrlEncoderConfig\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nstatusText\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nsaveFieldList\n\n\nstring[]\n\n\n\n\n[optional]\n\n\n\n\n\n\nversion\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nurl\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nstatusCode\n\n\n\\Model\\Integer\n\n\n\n\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "ShortUrlEncoderConfig"
        }, 
        {
            "location": "/legacy-docs/Model/ShortUrlEncoderConfig/#shorturlencoderconfig", 
            "text": "", 
            "title": "ShortUrlEncoderConfig"
        }, 
        {
            "location": "/legacy-docs/Model/ShortUrlEncoderConfig/#properties", 
            "text": "Name  Type  Description  Notes      statusText  string      serverName  string      saveFieldList  string[]   [optional]    version  string      url  string      statusCode  \\Model\\Integer       [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }, 
        {
            "location": "/legacy-docs/Model/SourceControlAction/", 
            "text": "SourceControlAction\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "SourceControlAction"
        }, 
        {
            "location": "/legacy-docs/Model/SourceControlAction/#sourcecontrolaction", 
            "text": "", 
            "title": "SourceControlAction"
        }, 
        {
            "location": "/legacy-docs/Model/SourceControlAction/#properties", 
            "text": "Name  Type  Description  Notes      serverName  string       [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }, 
        {
            "location": "/legacy-docs/Model/SourceControlConfig/", 
            "text": "SourceControlConfig\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nfeatureList\n\n\nstring[]\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nmodel\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nsaveFieldList\n\n\nstring[]\n\n\n\n\n[optional]\n\n\n\n\n\n\nversion\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nfirmware\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nmanufacturer\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "SourceControlConfig"
        }, 
        {
            "location": "/legacy-docs/Model/SourceControlConfig/#sourcecontrolconfig", 
            "text": "", 
            "title": "SourceControlConfig"
        }, 
        {
            "location": "/legacy-docs/Model/SourceControlConfig/#properties", 
            "text": "Name  Type  Description  Notes      featureList  string[]      serverName  string      model  string      saveFieldList  string[]   [optional]    version  string      firmware  string      manufacturer  string       [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }, 
        {
            "location": "/legacy-docs/Model/SourceDriverNamesList/", 
            "text": "SourceDriverNamesList\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nsaveFieldList\n\n\nstring[]\n\n\n\n\n[optional]\n\n\n\n\n\n\nlist\n\n\nstring[]\n\n\n\n\n\n\n\n\n\n\nversion\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "SourceDriverNamesList"
        }, 
        {
            "location": "/legacy-docs/Model/SourceDriverNamesList/#sourcedrivernameslist", 
            "text": "", 
            "title": "SourceDriverNamesList"
        }, 
        {
            "location": "/legacy-docs/Model/SourceDriverNamesList/#properties", 
            "text": "Name  Type  Description  Notes      serverName  string      saveFieldList  string[]   [optional]    list  string[]      version  string       [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }, 
        {
            "location": "/legacy-docs/Model/StartupStreamConfig/", 
            "text": "StartupStreamConfig\n\n\nProperties\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nmediaCasterType\n\n\nstring\n\n\n\n\n\n\n\n\n\n\ninstance\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nappName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nserverName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nsaveFieldList\n\n\nstring[]\n\n\n\n\n[optional]\n\n\n\n\n\n\nversion\n\n\nstring\n\n\n\n\n\n\n\n\n\n\nstreamName\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\n[Back to Model list]\n \n[Back to API list]\n \n[Back to README]", 
            "title": "StartupStreamConfig"
        }, 
        {
            "location": "/legacy-docs/Model/StartupStreamConfig/#startupstreamconfig", 
            "text": "", 
            "title": "StartupStreamConfig"
        }, 
        {
            "location": "/legacy-docs/Model/StartupStreamConfig/#properties", 
            "text": "Name  Type  Description  Notes      mediaCasterType  string      instance  string      appName  string      serverName  string      saveFieldList  string[]   [optional]    version  string      streamName  string       [Back to Model list]   [Back to API list]   [Back to README]", 
            "title": "Properties"
        }
    ]
}